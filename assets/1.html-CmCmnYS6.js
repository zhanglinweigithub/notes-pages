import{_ as a,o as e,c as n,a as t}from"./app-Vg0IViah.js";const s={},i=t('<h1 id="java八股文-第一篇" tabindex="-1"><a class="header-anchor" href="#java八股文-第一篇"><span>Java八股文 --- 第一篇</span></a></h1><h2 id="java语言有哪些特点" tabindex="-1"><a class="header-anchor" href="#java语言有哪些特点"><span>Java语言有哪些特点</span></a></h2><p>1）简单易学。Java有丰富的类库，能够通过静态方法封装，降低API的学习成本，提高工作效率。</p><p>2）面向对象。这个也是Java最重要的特性，java能够使得程序耦合度更低，内聚性更高。</p><p>3）可靠安全。Java生态系统包括用于分析和报告安全性问题的各种工具。</p><p>4）与平台无关。Java能够跨平台使用。</p><p>5）支持多线程。Java可以采用多线程+协程方式实现更多的并发操作</p><h2 id="面向对象和面向过程的区别" tabindex="-1"><a class="header-anchor" href="#面向对象和面向过程的区别"><span>面向对象和面向过程的区别</span></a></h2><p>1）从概念上来说。</p><p>面向过程：字面意义上就是面向的是过程，先做什么、在做什么、最后做什么，然后用函数把这些步骤一步一步地实现，在使用的时候一一调用则可。</p><p>面向对象：字面意义上就是面向的是对象，是把构成问题的事务分解成各个对象，但是建立对象的目的也不是为了完成一个个步骤，而是为了描述某个事物在解决整个问题的过程中所发生的行为。</p><p>2）从性能上来说。面向过程性能较高，所以单片机、嵌入式开发等一般采用面向过程开发。从性能上来说，面向对象比面向过程要低。</p><p>3）从可用性来说。面向对象有封装、继承、多态的特性，所以易维护、易复用、易扩展，可以设计出低耦合的系统。</p><h2 id="面向对象编程三大特性" tabindex="-1"><a class="header-anchor" href="#面向对象编程三大特性"><span>面向对象编程三大特性</span></a></h2><p><strong>封装：</strong> 封装把一个对象的属性私有化，同时提供一些可以被外界访问的属性的方法，如果属性不想被外界访问，我们大可不必提供方法给外界访问。但是如果一个类没有提供给外界访问的方法，那么这个类也没有什么意义了。</p><p><strong>继承：</strong> 继承是使用已存在的类的定义作为基础建立新类的技术，新类的定义可以增加新的数据或新的功能，也可以用父类的功能，但不能选择性地继承⽗类。通过使用继承我们能够非常方便地复用以前的代码。</p><p><strong>多态：</strong> 所谓多态就是指程序中定义的引用变量所指向的具体类型和通过该引用变量发出的方法调用在编程时并不确定，是在程序运行期间才确定，即一个引用变量到底会指向哪个类的实例对象，该引用变量发出的方法调用到底是哪个类中实现的方法，必须在由程序运行期间才能决定。</p><h2 id="jdk、jre、jvm" tabindex="-1"><a class="header-anchor" href="#jdk、jre、jvm"><span>JDK、JRE、JVM</span></a></h2><p>Java 虚拟机（JVM）是运行 Java 字节码的虚拟机。JVM 有针对不同系统的特定实现（Windows，Linux，macOS），目的是使用相同的字节码，它们都会给出相同的结果。字节码和不同系统的 JVM 实现是 Java 语言“一次编译，随处可以运行”的关键所在。</p><p>JDK 是 Java Development Kit，它是功能⻬全的 Java SDK。它拥有 JRE 所拥有的一切，还有编译器（javac）和工具（如 javadoc 和 jdb）。它能够创建和编译程序。</p><p>JRE 是 Java 运行时环境。它是运行已编译 Java 程序所需的所有内容的集合，包括 Java 虚拟机（JVM），Java 类库，java 命令和其他的⼀些基础构件。但是，它不能用于创建新程序</p><h2 id="instanceof关键字" tabindex="-1"><a class="header-anchor" href="#instanceof关键字"><span>instanceof关键字</span></a></h2><p><code>instanceof</code>严格来说是Java中的一个双目运算符，用来测试一个对象是否为一个类的实例，用法为： <code>boolean result = obj instanceof Class</code></p><p>其中 obj 为一个对象，Class 表示一个类或者一个接口，当 obj 为 Class 的对象，或者是其直接或间接子类，或者是其接口的实现类，结果result 都返回 true，否则返回false。</p><h2 id="自动装箱与拆箱" tabindex="-1"><a class="header-anchor" href="#自动装箱与拆箱"><span>自动装箱与拆箱</span></a></h2><p>装箱就是自动将基本数据类型转换为包装器类型（int--&gt;Integer）；调用方法：<code>Integer的valueOf(int)</code>方法</p><p>拆箱就是自动将包装器类型转换为基本数据类型（Integer--&gt;int）。调用方法：<code>Integer的intValue</code>方法</p>',27),l=[i];function c(r,o){return e(),n("div",null,l)}const d=a(s,[["render",c],["__file","1.html.vue"]]),h=JSON.parse('{"path":"/Doc/Java/Java/1.html","title":"Java八股文 --- 第一篇","lang":"zh-CN","frontmatter":{"category":"八股文"},"headers":[{"level":2,"title":"Java语言有哪些特点","slug":"java语言有哪些特点","link":"#java语言有哪些特点","children":[]},{"level":2,"title":"面向对象和面向过程的区别","slug":"面向对象和面向过程的区别","link":"#面向对象和面向过程的区别","children":[]},{"level":2,"title":"面向对象编程三大特性","slug":"面向对象编程三大特性","link":"#面向对象编程三大特性","children":[]},{"level":2,"title":"JDK、JRE、JVM","slug":"jdk、jre、jvm","link":"#jdk、jre、jvm","children":[]},{"level":2,"title":"instanceof关键字","slug":"instanceof关键字","link":"#instanceof关键字","children":[]},{"level":2,"title":"自动装箱与拆箱","slug":"自动装箱与拆箱","link":"#自动装箱与拆箱","children":[]}],"git":{"createdTime":1708330205000,"updatedTime":1708873062000,"contributors":[{"name":"zhanglinwei","email":"3498729975@qq.com","commits":2}]},"readingTime":{"minutes":3.64,"words":1092},"filePathRelative":"Doc/Java/Java/1.md","localizedDate":"2024年2月19日"}');export{d as comp,h as data};
