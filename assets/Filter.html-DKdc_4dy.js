import{_ as i,r as l,o as e,c as r,e as s,f as a,g as p,a as o}from"./app-Vg0IViah.js";const D={},t=s("h1",{id:"过滤器",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#过滤器"},[s("span",null,"过滤器")])],-1),d=s("p",null,"过滤器仅在 vue 2.x 和 1.x 中受支持，在 vue 3.x 的版本中剔除了过滤器相关的功能。",-1),c=s("p",null,"在企业级项目开发中：",-1),k=s("ul",null,[s("li",null,"如果使用的是 2.x 版本的 vue，则依然可以使用过滤器相关的功能"),s("li",null,"如果项目已经升级到了 3.x 版本的 vue，官方建议使用计算属性或方法代替被剔除的过滤器功能")],-1),h={href:"https://v3.vuejs.org/guide/migration/filters.html#migration-strategy",target:"_blank",rel:"noopener noreferrer"},v=o(`<h2 id="一、使用" tabindex="-1"><a class="header-anchor" href="#一、使用"><span>一、使用</span></a></h2><p>过滤器（Filters）是 <code>vue</code> 为开发者提供的功能，常用于文本的格式化。</p><p>过滤器可以用在两个地方：</p><ul><li>插值表达式</li><li>v-bind 属性绑定</li></ul><p>过滤器应该被添加在 <code>JavaScript</code> 表达式的尾部，由“管道符”进行调用</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">&lt;!-- 通过 “管道符” 调用 capitalize 过滤器，对 message 的值进行格式化 --&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">p</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">{{ message | capitalize }}</span><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">p</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">&lt;!-- 通过 “管道符” 调用 formatId 过滤器，对 rawId 的值进行格式化 --&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">div</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> v-bind</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">:</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">id</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">rawId</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> | </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">formatId</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#808080;--shiki-dark:#808080;">&gt;&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">div</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">&lt;!-- 串联调用过滤器 --&gt;</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">&lt;!-- 把 message 交给 filterA 进行处理，将处理结果交给 filterB继续处理 --&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">{{ message | filterA | filterB }}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">&lt;!-- 过滤器传参 --&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">p</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">{{ message | filterA(arg1,arg2) }}</span><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">p</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">&lt;!-- 第一个参数永远是 “管道符” 前面待处理的值，从第二个参数开始，才是调用过滤器时传递过来的 arg1 和 arg2 参数 --&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">Vue.filter(&#39;filterA&#39;,(msg,arg1,arg2) =&gt; {</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">	//过滤器代码逻辑</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、定义过滤器" tabindex="-1"><a class="header-anchor" href="#二、定义过滤器"><span>二、定义过滤器</span></a></h2><p>在创建 <code>vue</code> 实例期间，可以在 <code>filters</code> 节点中定义过滤器，示例代码如下：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">export</span><span style="color:#C586C0;--shiki-dark:#C586C0;"> default</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">  data</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> () {</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    return</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">      message:</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &#39;hello vue.js&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">      info:</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &#39;title info&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">  filters:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">    capitalize</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">str</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">){ </span><span style="color:#6A9955;--shiki-dark:#6A9955;">//str字符串转换成大写的过滤器</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">      return</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> str</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">toUpperCase</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 filters 节点下定义的过滤器，称为“私有过滤器”，因为它只能在当前 vm 实例所控制的 el 区域内使用</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">//全局过滤器</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">//第一个参数：全局过滤器的名字</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">//第二个参数：全局过滤器要处理的参数</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Vue</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">filter</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;capitalize&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">str</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="color:#569CD6;--shiki-dark:#569CD6;">=&gt;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    return</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> str</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">toUpperCase</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function C(u,y){const n=l("ExternalLinkIcon");return e(),r("div",null,[t,d,c,k,s("p",null,[a("具体的迁移指南，请参考 vue 3.x 的官方文档给出的说明： "),s("a",h,[a("https://v3.vuejs.org/guide/migration/filters.html#migration-strategy"),p(n)])]),v])}const b=i(D,[["render",C],["__file","Filter.html.vue"]]),g=JSON.parse('{"path":"/Grammar/Font/Vue2/Filter.html","title":"过滤器","lang":"zh-CN","frontmatter":{"order":7,"category":"语法"},"headers":[{"level":2,"title":"一、使用","slug":"一、使用","link":"#一、使用","children":[]},{"level":2,"title":"二、定义过滤器","slug":"二、定义过滤器","link":"#二、定义过滤器","children":[]}],"git":{"createdTime":1708330205000,"updatedTime":1708873062000,"contributors":[{"name":"zhanglinwei","email":"3498729975@qq.com","commits":2}]},"readingTime":{"minutes":1.71,"words":512},"filePathRelative":"Grammar/Font/Vue2/Filter.md","localizedDate":"2024年2月19日"}');export{b as comp,g as data};
