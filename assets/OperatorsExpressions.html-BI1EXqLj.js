import{_ as s,o as a,c as n,a as i}from"./app-Vg0IViah.js";const l={},D=i(`<h1 id="运算符与表达式" tabindex="-1"><a class="header-anchor" href="#运算符与表达式"><span>运算符与表达式</span></a></h1><ul><li><code>+ - * / % ** </code></li><li><code>+= -= *= /= %= **=</code></li><li><code>++ --</code></li><li>位运算、移位运算</li><li><code>== != &gt; &gt;= &lt; &lt;=</code></li><li><code>=== !==</code></li><li><code>&amp;&amp; || !</code></li><li><code>?? ?.</code></li><li><code>...</code></li><li>解构赋值</li></ul><p><code>**</code>：表示乘方</p><p><code>3 ** 2</code> 求3的平方</p><h2 id="一、算术运算符" tabindex="-1"><a class="header-anchor" href="#一、算术运算符"><span>一、算术运算符</span></a></h2><p>算术运算符：也叫数学运算符，主要包括加、减、乘、除、取余（求模）等</p><table><thead><tr><th>运算符</th><th>作用</th></tr></thead><tbody><tr><td>+</td><td>求和</td></tr><tr><td>-</td><td>求差</td></tr><tr><td>*</td><td>求积</td></tr><tr><td>/</td><td>求商</td></tr><tr><td><strong>%</strong></td><td>取模（取余数），开发中经常用于作为某个数字是否被整除</td></tr></tbody></table><p>在计算失败时，显示的结果是 <code>NaN</code> （not a number）</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 算术运算符</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> * </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> / </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="color:#6A9955;--shiki-dark:#6A9955;">//  4 </span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> num</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">10</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">num</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">10</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)  </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 20</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">num</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">num</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)  </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 20</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 取模(取余数)</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">4</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> % </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="color:#6A9955;--shiki-dark:#6A9955;">//  0  </span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">6</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> % </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="color:#6A9955;--shiki-dark:#6A9955;">//  0</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">5</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> % </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="color:#6A9955;--shiki-dark:#6A9955;">//  2</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> % </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">5</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="color:#6A9955;--shiki-dark:#6A9955;">//  3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 如果我们计算失败，则返回的结果是 NaN (not a number)</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;zhang&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> - </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)   </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// NaN</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;zhang&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> * </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)   </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// NaN</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;zhang&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)   </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// pink老师2</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、赋值运算符" tabindex="-1"><a class="header-anchor" href="#二、赋值运算符"><span>二、赋值运算符</span></a></h2><p>赋值运算符：对变量进行赋值的运算符</p><table><thead><tr><th>运算符</th><th>作用</th></tr></thead><tbody><tr><td>+=</td><td>加法赋值</td></tr><tr><td>-+</td><td>减法赋值</td></tr><tr><td>*=</td><td>乘法赋值</td></tr><tr><td>/=</td><td>除法赋值</td></tr><tr><td>%=</td><td>取余赋值</td></tr></tbody></table><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">let num = 1</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">// num = num + 1</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">// 采取赋值运算符</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">// num += 1</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">num += 3</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">console.log(num) // 4</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、自增-自减运算符" tabindex="-1"><a class="header-anchor" href="#三、自增-自减运算符"><span>三、自增/自减运算符</span></a></h2><table><thead><tr><th>符号</th><th>作用</th><th>说明</th></tr></thead><tbody><tr><td><code>++</code></td><td>自增</td><td>变量自身的值加1，例如: <code>x++</code></td></tr><tr><td><code>--</code></td><td>自减</td><td>变量自身的值减1，例如: <code>x--</code></td></tr></tbody></table><ul><li><code>++</code>在前和<code>++</code>在后在单独使用时二者并没有差别，而且一般开发中我们都是独立使用</li><li><code>++</code>在后（后缀式）我们会使用更多</li></ul><div class="hint-container warning"><p class="hint-container-title">注意</p><ul><li>只有变量能够使用自增和自减运算符</li><li><code>++</code>、<code>--</code> 可以在变量前面也可以在变量后面，比如: <code>x++</code> 或者 <code>++x</code></li></ul></div><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    let num = 10</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    num = num + 1 // 11</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    num += 1 // 12</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    // 1. 前置自增</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    let i = 1</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    i++ // 1</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    console.log(i) // 2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    let i = 1</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    i++ // 1</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    console.log(i++ + 1) // 3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    // 2. 后置自增</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    let i = 1</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    ++i // 2</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    console.log(i) // 2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    let i = 1</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    console.log(++i + 1) // 3</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">  &lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、比较运算符" tabindex="-1"><a class="header-anchor" href="#四、比较运算符"><span>四、比较运算符</span></a></h2><p>根据比较结果返回一个布尔值（true / false）</p><table><thead><tr><th>运算符</th><th>作用</th></tr></thead><tbody><tr><td><code>&gt;</code></td><td>左边是否大于右边</td></tr><tr><td><code>&lt;</code></td><td>左边是否小于右边</td></tr><tr><td><code>&gt;=</code></td><td>左边是否大于或等于右边</td></tr><tr><td><code>&lt;=</code></td><td>左边是否小于或等于右边</td></tr><tr><td><code>===</code></td><td>左右两边是否类型和值都相等（重点）</td></tr><tr><td><code>==</code></td><td>左右两边值是否相等</td></tr><tr><td><code>!=</code></td><td>左右值不相等</td></tr><tr><td><code>!==</code></td><td>左右两边是否不全等</td></tr></tbody></table><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  console.log(3 &gt; 5) // false</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  console.log(3 &gt;= 3) // true</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  console.log(2 == 2) // true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  // 比较运算符有隐式转换 把&#39;2&#39; 转换为 2  双等号 只判断值</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  console.log(2 == &#39;2&#39;)  // true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  // console.log(undefined === null)</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  // === 全等 判断 值 和 数据类型都一样才行</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  // 以后判断是否相等 请用 ===  </span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  console.log(2 === &#39;2&#39;) // false</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  console.log(NaN === NaN) // NaN 不等于任何人，包括他自己</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  console.log(2 !== &#39;2&#39;)  // true  </span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  console.log(2 != &#39;2&#39;) // false </span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  console.log(&#39;a&#39; &lt; &#39;b&#39;) // true</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  console.log(&#39;aa&#39; &lt; &#39;ab&#39;) // true</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  console.log(&#39;aa&#39; &lt; &#39;aac&#39;) // true</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、逻辑运算符" tabindex="-1"><a class="header-anchor" href="#五、逻辑运算符"><span>五、逻辑运算符</span></a></h2><p>可以把多个布尔值放到一起运算，最终返回一个布尔值</p><table><thead><tr><th>符号</th><th>名称</th><th>日常读法</th><th>特点</th><th>口诀</th></tr></thead><tbody><tr><td><code>&amp;&amp;</code></td><td>逻辑与</td><td>并且</td><td>符号两边有一个假的结果为假</td><td>一假则假</td></tr><tr><td>\`</td><td></td><td>\`</td><td>逻辑或</td><td>或者</td></tr><tr><td><code>!</code></td><td>逻辑非</td><td>取反</td><td>true变false false变true</td><td>真变假，假变真</td></tr></tbody></table><table><thead><tr><th>A</th><th>B</th><th>A &amp;&amp; B</th><th>A || B</th><th>!A</th></tr></thead><tbody><tr><td>false</td><td>false</td><td>false</td><td>false</td><td>true</td></tr><tr><td>false</td><td>true</td><td>false</td><td>true</td><td>true</td></tr><tr><td>true</td><td>false</td><td>false</td><td>true</td><td>false</td></tr><tr><td>true</td><td>true</td><td>true</td><td>true</td><td>false</td></tr></tbody></table><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    // 逻辑与 一假则假</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    console.log(true &amp;&amp; true) // true</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    console.log(false &amp;&amp; true) // false</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    console.log(3 &lt; 5 &amp;&amp; 3 &gt; 2) // true</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    console.log(3 &lt; 5 &amp;&amp; 3 &lt; 2) // false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    // 逻辑或 一真则真</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    console.log(true || true) // true</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    console.log(false || true) // true</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    console.log(false || false) // false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    // 逻辑非  取反</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    console.log(!true) // fasle</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    console.log(!false) // true</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1、" tabindex="-1"><a class="header-anchor" href="#_1、"><span>1、===</span></a></h3><p>严格相等运算符，用作逻辑判等</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> == </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#6A9955;--shiki-dark:#6A9955;">    	// 返回 true </span></span>
<span class="line"><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> == </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;1&#39;</span><span style="color:#6A9955;--shiki-dark:#6A9955;">	// 返回 true，会先将右侧的字符串转为数字，再做比较</span></span>
<span class="line"><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> === </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;1&#39;</span><span style="color:#6A9955;--shiki-dark:#6A9955;">	// 返回 false，类型不等，直接返回 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>typeof</code> 查看某个值的类型</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">typeof</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;"> 1</span><span style="color:#6A9955;--shiki-dark:#6A9955;">	// 返回 &#39;number&#39;</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">typeof</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &#39;1&#39;</span><span style="color:#6A9955;--shiki-dark:#6A9955;">	// 返回 &#39;string&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、" tabindex="-1"><a class="header-anchor" href="#_2、"><span>2、||</span></a></h3><p>需求，如果参数 <code>n</code> 没有传递，给它一个【男】</p><p><strong>推荐</strong>做法</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> test</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;男&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你可能的做法</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> test</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    if</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> === </span><span style="color:#569CD6;--shiki-dark:#569CD6;">undefined</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;男&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>还可能是这样</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> test</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = (</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> === </span><span style="color:#569CD6;--shiki-dark:#569CD6;">undefined</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) ? </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;男&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> : </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一些老旧代码中可能的做法（不推荐）</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> test</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> || </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;男&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>它的语法是</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">值1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> || </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">值2</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果值1 是 <code>Truthy</code>，返回值1，如果值1 是 <code>Falsy</code> 返回值 2</p><h3 id="_3、-与" tabindex="-1"><a class="header-anchor" href="#_3、-与"><span>3、?? 与 ?.</span></a></h3><h4 id="" tabindex="-1"><a class="header-anchor" href="#"><span>??</span></a></h4><p>需求，如果参数 <code>n</code> 没有传递或是 <code>null</code>，给它一个【男】</p><p>如果用传统办法</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> test</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    if</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> === </span><span style="color:#569CD6;--shiki-dark:#569CD6;">undefined</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> || </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> === </span><span style="color:#569CD6;--shiki-dark:#569CD6;">null</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;男&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用 <code>??</code></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> test</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> ?? </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;男&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>语法</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span>值1 ?? 值2</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>值1 是 <code>nullish</code>，返回值2</li><li>值1 不是 <code>nullish</code>，返回值1</li></ul><h4 id="-1" tabindex="-1"><a class="header-anchor" href="#-1"><span>?.</span></a></h4><p>需求，函数参数是一个对象，可能包含有子属性</p><p>例如，参数可能是</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> stu1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    name:</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;张三&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    address:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        city:</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &#39;北京&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> stu2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    name:</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;李四&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> stu3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    name:</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;李四&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    address:</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> null</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在要访问子属性（有问题）</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> test</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">stu</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">stu</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">address</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">city</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在希望当某个属性是 <code>nullish</code> 时，短路并返回 <code>undefined</code>，可以用 ?.</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> test</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">stu</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">stu</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">address</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">?.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">city</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用传统办法</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> test</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">stu</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    if</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">stu</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">address</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> === </span><span style="color:#569CD6;--shiki-dark:#569CD6;">undefined</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> || </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">stu</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">address</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> === </span><span style="color:#569CD6;--shiki-dark:#569CD6;">null</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">undefined</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">        return</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">stu</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">address</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">city</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、" tabindex="-1"><a class="header-anchor" href="#_4、"><span>4、...</span></a></h3><p>展开运算符</p><p>作用1：打散数组，把元素传递给多个参数</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = [</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> test</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">c</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">c</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需求，把数组元素依次传递给函数参数</p><p>传统写法</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">test</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">0</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">],</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">],</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">]);		</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 输出 1,2,3</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>展开运算符写法</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">test</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(...</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);					</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 输出 1,2,3</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>打散可以理解为【去掉了】数组外侧的中括号，只剩下数组元素</li></ul><p>作用2：复制数组或对象</p><p>数组</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> arr1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = [</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">];</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> arr2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = [...</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">];		</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 复制数组</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>对象</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> obj1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name:</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;张三&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">age:</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;"> 18</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> obj2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {...</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">obj1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">};		</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 复制对象</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意</strong>：展开运算符复制属于浅拷贝，例如</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> o1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name:</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;张三&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">address:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">city:</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &#39;北京&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">} }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> o2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {...</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">o1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>作用3：合并数组或对象</p><p>合并数组</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> a1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = [</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">];</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> a2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = [</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">4</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> b1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = [...</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">a1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,...</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">a2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">];		</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 结果 [1,2,3,4]</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> b2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = [...</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">a2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">5</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,...</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">a1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">]	</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 结果 [3,4,5,1,2]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>合并对象</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> o1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name:</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;张三&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">};</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> o2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">age:</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">18</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">};</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> o3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name:</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;李四&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> n1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {...</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">o1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, ...</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">o2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">};	</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 结果 {name:&#39;张三&#39;,age:18}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> n2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {...</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">o3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, ...</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">o2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, ...</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">o1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}; </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 结果{name:&#39;李四&#39;,age:18}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>复制对象时出现同名属性，后面的会覆盖前面的</code></li></ul><h3 id="_5、" tabindex="-1"><a class="header-anchor" href="#_5、"><span>5、[] {}</span></a></h3><p>解构赋值</p><h4 id="-2" tabindex="-1"><a class="header-anchor" href="#-2"><span>[]</span></a></h4><p>用在声明变量时</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = [</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> [</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">c</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">] = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;	</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 结果 a=1, b=2, c=3</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用在声明参数时</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = [</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> test</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">([</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">c</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">]) {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">c</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) 	</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 结果 a=1, b=2, c=3</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">test</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);				</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="-3" tabindex="-1"><a class="header-anchor" href="#-3"><span>{}</span></a></h4><p>用在声明变量时,变量名称要跟对象属性名一致才能赋值，否则就是undefined,顺序并不影响</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> obj</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name:</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;张三&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">age:</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">18</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">age</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">} = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">obj</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;	</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 结果 name=张三, age=18</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">//变量名称要跟对象属性名一致才能赋值，否则就是undefined</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">sex</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">} = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">obj</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;	</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 结果 name=张三, sex=undefined</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用在声明参数时</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> obj</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name:</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;张三&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">age:</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">18</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> test</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">({</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">age</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}) {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">age</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">); </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 结果 name=张三, age=18</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">test</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">obj</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,100),e=[D];function r(p,o){return a(),n("div",null,e)}const k=s(l,[["render",r],["__file","OperatorsExpressions.html.vue"]]),c=JSON.parse('{"path":"/Grammar/Font/JavaScript/OperatorsExpressions.html","title":"运算符与表达式","lang":"zh-CN","frontmatter":{"order":3,"category":"语法"},"headers":[{"level":2,"title":"一、算术运算符","slug":"一、算术运算符","link":"#一、算术运算符","children":[]},{"level":2,"title":"二、赋值运算符","slug":"二、赋值运算符","link":"#二、赋值运算符","children":[]},{"level":2,"title":"三、自增/自减运算符","slug":"三、自增-自减运算符","link":"#三、自增-自减运算符","children":[]},{"level":2,"title":"四、比较运算符","slug":"四、比较运算符","link":"#四、比较运算符","children":[]},{"level":2,"title":"五、逻辑运算符","slug":"五、逻辑运算符","link":"#五、逻辑运算符","children":[{"level":3,"title":"1、===","slug":"_1、","link":"#_1、","children":[]},{"level":3,"title":"2、||","slug":"_2、","link":"#_2、","children":[]},{"level":3,"title":"3、?? 与 ?.","slug":"_3、-与","link":"#_3、-与","children":[]},{"level":3,"title":"4、...","slug":"_4、","link":"#_4、","children":[]},{"level":3,"title":"5、[] {}","slug":"_5、","link":"#_5、","children":[]}]}],"git":{"createdTime":1708330205000,"updatedTime":1708873062000,"contributors":[{"name":"zhanglinwei","email":"3498729975@qq.com","commits":2}]},"readingTime":{"minutes":5.93,"words":1779},"filePathRelative":"Grammar/Font/JavaScript/OperatorsExpressions.md","localizedDate":"2024年2月19日"}');export{k as comp,c as data};
