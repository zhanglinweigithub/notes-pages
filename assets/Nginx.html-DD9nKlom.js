import{_ as s,r as d,o as i,c as r,e as t,f as a,g as e,a as l}from"./app-Vg0IViah.js";const p="/notes-pages/assets/image-20230421222921610-iBqDu2xW.png",o="/notes-pages/assets/image-20230421223314543-CHR_naEP.png",c="/notes-pages/assets/image-20230421223543668-CjpYHwzh.png",g={},m=t("h1",{id:"nginx",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#nginx"},[t("span",null,"Nginx")])],-1),h={href:"https://nginx.org/en/docs/",target:"_blank",rel:"noopener noreferrer"},_={href:"https://juejin.cn/post/7306041273822527514?searchId=20240120131836DEDE680FB13BC0C60A3E#heading-1",target:"_blank",rel:"noopener noreferrer"},u=l(`<h2 id="一、nginx目录" tabindex="-1"><a class="header-anchor" href="#一、nginx目录"><span>一、Nginx目录</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span>[root@localhost /]# tree  /usr/local/nginx/  -L 2</span></span>
<span class="line"><span>/usr/local/nginx/</span></span>
<span class="line"><span>├── conf                        #存放一系列配置文件的目录</span></span>
<span class="line"><span>│   ├── fastcgi.conf           #fastcgi程序相关配置文件</span></span>
<span class="line"><span>│   ├── fastcgi.conf.default   #fastcgi程序相关配置文件备份</span></span>
<span class="line"><span>│   ├── fastcgi_params         #fastcgi程序参数文件</span></span>
<span class="line"><span>│   ├── fastcgi_params.default #fastcgi程序参数文件备份</span></span>
<span class="line"><span>│   ├── koi-utf           #编码映射文件</span></span>
<span class="line"><span>│   ├── koi-win           #编码映射文件</span></span>
<span class="line"><span>│   ├── mime.types        #媒体类型控制文件</span></span>
<span class="line"><span>│   ├── mime.types.default#媒体类型控制文件备份</span></span>
<span class="line"><span>│   ├── nginx.conf        #主配置文件</span></span>
<span class="line"><span>│   ├── nginx.conf.default#主配置文件备份</span></span>
<span class="line"><span>│   ├── scgi_params      #scgi程序相关配置文件</span></span>
<span class="line"><span>│   ├── scgi_params.default #scgi程序相关配置文件备份</span></span>
<span class="line"><span>│   ├── uwsgi_params       #uwsgi程序相关配置文件</span></span>
<span class="line"><span>│   ├── uwsgi_params.default#uwsgi程序相关配置文件备份</span></span>
<span class="line"><span>│   └── win-utf          #编码映射文件</span></span>
<span class="line"><span>├── html                 #存放网页文档</span></span>
<span class="line"><span>│   ├── 50x.html         #错误页码显示网页文件</span></span>
<span class="line"><span>│   └── index.html       #网页的首页文件</span></span>
<span class="line"><span>├── logs                 #存放nginx的日志文件</span></span>
<span class="line"><span>├── sbin                #存放启动程序</span></span>
<span class="line"><span>    ├── nginx           #nginx启动程序</span></span>
<span class="line"><span>    └── nginx.old       </span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、全局变量" tabindex="-1"><a class="header-anchor" href="#二、全局变量"><span>二、全局变量</span></a></h2><table><thead><tr><th>变量</th><th>解释</th></tr></thead><tbody><tr><td>$time_local</td><td>本地时间：04/Nov/2022:09:27:05 +0800</td></tr><tr><td>$time_iso8601</td><td>ISO 8601 时间格式</td></tr><tr><td>$arg_name</td><td>请求中的的参数名，即“?”后面的arg_name=arg_value形式的arg_name</td></tr><tr><td>$args</td><td>与$query_string相同 等于当中URL的参数(GET)，如a=1&amp;b=2</td></tr><tr><td>$document_uri</td><td>与$uri相同 这个变量指当前的请求URI，不包括任何参数(见$args)</td></tr><tr><td>$request_uri</td><td>包含请求参数的原始URI，不包含主机名，如：/2013/81.html?a=1&amp;b=2</td></tr><tr><td>$is_args</td><td>如果有$args参数，这个变量等于”?”，否则等于”&quot;，空值，如?</td></tr><tr><td>$query_string</td><td>与$args相同 等于当中URL的参数(GET)，如a=1&amp;b=2</td></tr><tr><td>$uri</td><td>这个变量指当前的请求URL的location，不包含任何参数，如：/，/login</td></tr><tr><td>$remote_addr</td><td>获取客户端ip</td></tr><tr><td>$binary_remote_addr</td><td>客户端ip（二进制)</td></tr><tr><td>$remote_port</td><td>客户端port，如：50472</td></tr><tr><td>$remote_user</td><td>已经经过Auth Basic Module验证的用户名</td></tr><tr><td>$host</td><td>请求主机头字段，否则为服务器名称，如:http://blog.sakmon.com</td></tr><tr><td>$proxy_host</td><td>proxy_pass 指令设置的后端服务器的域名（或者IP地址）和端口。</td></tr><tr><td>$proxy_port</td><td>proxy_pass 指令设置的后端服务器的监听端口。</td></tr><tr><td>$http_host</td><td>是$host 和 $server_port 两个变量的结合</td></tr><tr><td>$request</td><td>用户请求信息，如：GET ?a=1&amp;b=2 HTTP/1.1</td></tr><tr><td>$request_time</td><td>请求所用时间，单位毫秒</td></tr><tr><td>$request_method</td><td>客户端请求的动作，通常为GET或POST,如：GET</td></tr><tr><td>$request_filename</td><td>当前请求的文件的路径名，由root或alias和URI request组合而成,如：/2013/81.html</td></tr><tr><td>$status</td><td>请求的响应状态码,如：200</td></tr><tr><td>$body_bytes_sent</td><td>响应时送出的body字节数数量。即使连接中断，这个数据也是精确的,如：40，传输给客户端的字节数，响应头不计算在内；这个变量和Apache的mod_log_config模块中的“%B”参数保持兼容</td></tr><tr><td>$content_length</td><td>等于请求行的“Content_Length”的值</td></tr><tr><td>$content_type</td><td>等于请求行的“Content_Type”的值</td></tr><tr><td>$http_referer</td><td>引用地址</td></tr><tr><td>$http_user_agent</td><td>客户端agent信息,如：Mozilla/5.0 (Windows NT5.1) AppleWebKit/537.36(KHTML, like Gecko) Chrome/29.0.1547.76 Safari/537.36；这个可以用来区分手机端还是pc端</td></tr><tr><td>$document_root</td><td>针对当前请求的根路径设置值</td></tr><tr><td>$hostname</td><td>如：centos53.localdomain</td></tr><tr><td>$http_cookie</td><td>客户端cookie信息</td></tr><tr><td>$cookie_COOKIE</td><td>cookie COOKIE变量的值</td></tr><tr><td>$limit_rate</td><td>这个变量可以限制连接速率，0表示不限速</td></tr><tr><td>$request_body</td><td>记录POST过来的数据信息</td></tr><tr><td>$request_body_file</td><td>客户端请求主体信息的临时文件名</td></tr><tr><td>$scheme</td><td>HTTP方法（如http，https）,如：http</td></tr><tr><td>$request_completion</td><td>如果请求结束，设置为OK. 当请求未结束或如果该请求不是请求链串的最后一个时，为空(Empty)，如：OK</td></tr><tr><td>$server_protocol</td><td>请求使用的协议，通常是HTTP/1.0或HTTP/1.1，如：HTTP/1.1</td></tr><tr><td>$server_addr</td><td>服务器IP地址，在完成一次系统调用后可以确定这个值</td></tr><tr><td>$server_name</td><td>服务器名称，如：http://blog.sakmon.com</td></tr><tr><td>$server_port</td><td>请求到达服务器的端口号，如：80</td></tr><tr><td>$connection</td><td>CP连接的序列号 (1.3.8, 1.2.5)</td></tr><tr><td>$connection_requests</td><td>CP连接当前的请求数量 (1.3.8, 1.2.5)</td></tr><tr><td>$nginx_version</td><td>nginx版本</td></tr><tr><td>$pid</td><td>工作进程的PID</td></tr><tr><td>$pipe</td><td>如果请求来自管道通信，值为“p”，否则为“.” (1.3.12, 1.2.7)</td></tr><tr><td>$proxy_protocol_addr</td><td>获取代理访问服务器的客户端地址，如果是直接访问，该值为空字符串。(1.5.12)</td></tr><tr><td>$realpath_root</td><td>当前请求的文档根目录或别名的真实路径，会将所有符号连接转换为真实路径。</td></tr></tbody></table><h2 id="三、基本概念" tabindex="-1"><a class="header-anchor" href="#三、基本概念"><span>三、基本概念</span></a></h2><figure><img src="`+p+'" alt="image-20230421222921610" tabindex="0" loading="lazy"><figcaption>image-20230421222921610</figcaption></figure><h3 id="_1、正向代理" tabindex="-1"><a class="header-anchor" href="#_1、正向代理"><span>1、正向代理</span></a></h3><p>意思是一个位于客户端和原始服务器(origin server)之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并指定目标(原始服务器)，然后代理向原始服务器转交请求并将获得的内容返回给客户端。</p><p>正向代理是为我们服务的，即为客户端服务的，客户端可以根据正向代理访问到它本身无法访问到的服务器资源。</p><p>正向代理对我们是透明的，对服务端是非透明的，即服务端并不知道自己收到的是来自代理的访问还是来自真实客户端的访问。</p><h3 id="_2、反向代理" tabindex="-1"><a class="header-anchor" href="#_2、反向代理"><span>2、反向代理</span></a></h3><p>是指以代理服务器来接受<code>internet</code>上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给<code>internet</code>上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。</p><p>反向代理是为服务端服务的，反向代理可以帮助服务器接收来自客户端的请求，帮助服务器做请求转发，负载均衡等。</p><p>反向代理对服务端是透明的，对我们是非透明的，即我们并不知道自己访问的是代理服务器，而服务器知道反向代理在为他服务。</p><h3 id="_3、动静分离" tabindex="-1"><a class="header-anchor" href="#_3、动静分离"><span>3、动静分离</span></a></h3><p>动静分离，是指在 <code>web </code>服务器架构中，将静态页面与动态页面或者静态内容接口和动态内容接口分开不同系统访问的架构设计方法，进而提示整个服务的访问性和可维护性。</p><figure><img src="'+o+'" alt="image-20230421223314543" tabindex="0" loading="lazy"><figcaption>image-20230421223314543</figcaption></figure><p>一般来说，都需要将动态资源和静态资源分开，由于 <code>Nginx </code>的高并发和静态资源缓存等特性，经常将静态资源部署在 <code>Nginx </code>上。如果请求的是静态资源，直接到静态资源目录获取资源，如果是动态资源的请求，则利用反向代理的原理，把请求转发给对应后台应用去处理，从而实现动静分离。</p><p>使用前后端分离后，可以很大程度提升静态资源的访问速度，即使动态服务不可用，静态资源的访问也不会受到影响。</p><h3 id="_4、负载均衡" tabindex="-1"><a class="header-anchor" href="#_4、负载均衡"><span>4、负载均衡</span></a></h3><p>请求爆发式增长的情况下，单个机器性能再强劲也无法满足要求了，这个时候集群的概念产生了，单个服务器解决不了的问题，可以使用多个服务器，然后将请求分发到各个服务器上，将负载分发到不同的服务器，这就是负载均衡，核心是「分摊压力」。 <code>Nginx </code>实现负载均衡，一般来说指的是将请求转发给服务器集群。</p><p>举个具体的例子，晚高峰乘坐地铁的时候，入站口经常会有地铁工作人员大喇叭“请走 <code>B </code>口， <code>B </code>口人少车空....”，这个工作人员的作用就是负载均衡。</p><figure><img src="'+c+'" alt="image-20230421223543668" tabindex="0" loading="lazy"><figcaption>image-20230421223543668</figcaption></figure>',23);function v(b,x){const n=d("ExternalLinkIcon");return i(),r("div",null,[m,t("p",null,[t("a",h,[a("官方文档"),e(n)])]),t("p",null,[t("a",_,[a("参考文章"),e(n)])]),u])}const $=s(g,[["render",v],["__file","Nginx.html.vue"]]),k=JSON.parse('{"path":"/Use/Java/Nginx/Nginx.html","title":"Nginx","lang":"zh-CN","frontmatter":{"order":1,"category":"使用篇"},"headers":[{"level":2,"title":"一、Nginx目录","slug":"一、nginx目录","link":"#一、nginx目录","children":[]},{"level":2,"title":"二、全局变量","slug":"二、全局变量","link":"#二、全局变量","children":[]},{"level":2,"title":"三、基本概念","slug":"三、基本概念","link":"#三、基本概念","children":[{"level":3,"title":"1、正向代理","slug":"_1、正向代理","link":"#_1、正向代理","children":[]},{"level":3,"title":"2、反向代理","slug":"_2、反向代理","link":"#_2、反向代理","children":[]},{"level":3,"title":"3、动静分离","slug":"_3、动静分离","link":"#_3、动静分离","children":[]},{"level":3,"title":"4、负载均衡","slug":"_4、负载均衡","link":"#_4、负载均衡","children":[]}]}],"git":{"createdTime":1708330205000,"updatedTime":1708873062000,"contributors":[{"name":"zhanglinwei","email":"3498729975@qq.com","commits":2}]},"readingTime":{"minutes":6.18,"words":1854},"filePathRelative":"Use/Java/Nginx/Nginx.md","localizedDate":"2024年2月19日"}');export{$ as comp,k as data};
