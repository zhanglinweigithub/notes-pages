import{_ as r,r as o,o as p,c as k,g as c,w as n,a as D,f as a,e as s}from"./app-Vg0IViah.js";const d="/notes-pages/assets/1673597595453-8d01fc04-a46c-4f7b-97b4-ac83240a6c47-CPzyyzlJ.png",t="/notes-pages/assets/1673597673348-1dc185af-d3f0-48e1-a913-226add5e7925-DnKOfy3k.png",C="/notes-pages/assets/1673599339071-21101306-a4f5-45de-9657-9d07b19d4d1d-BvRmddYf.png",h="/notes-pages/assets/1673597692507-9e2ad2aa-fb09-416b-ae72-2a568d905650-iGfE5NT3.png",y="/notes-pages/assets/1673599942085-e456187d-db7b-487c-a531-f1f7ea9f4bfa-DFxMRlIC.png",u={},E=D('<h1 id="java操作rabbitmq" tabindex="-1"><a class="header-anchor" href="#java操作rabbitmq"><span>Java操作RabbitMQ</span></a></h1><p>消息队列目前主要 5 种模式：</p><ul><li>基本消息队列（BasicQueue）</li><li>工作消息队列（WorkQueue）</li><li>发布订阅（Publish、Subscribe） <ul><li><code>Fanout Exchange</code>：广播，将消息交给所有绑定到交换机的队列</li><li><code>Direct Exchange</code>：路由，把消息交给符合指定<code>routing key</code> 的队列</li><li><code>Topic Exchange</code>：主题、通配符，把消息交给符合<code>routing pattern</code>（路由模式） 的队列</li></ul></li></ul><h2 id="一、基本消息队列-basicqueue" tabindex="-1"><a class="header-anchor" href="#一、基本消息队列-basicqueue"><span>一、基本消息队列 BasicQueue</span></a></h2><figure><img src="'+d+`" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><p><strong>发送端</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> class</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> Publisher</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Autowired</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    private</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> RabbitTemplate</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> rabbitTemplate</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> testSimpleQueue</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">        // 队列名称</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">        String</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> queueName</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;simple.queue&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">        // 消息</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">        String</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> message</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;hello, spring amqp!&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">        // 发送消息</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        rabbitTemplate</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">convertAndSend</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(queueName, message);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>接收端</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Component</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> class</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> SpringRabbitListener</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">RabbitListener</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(queues = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;simple.queue&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> listenSimpleQueueMessage</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">String</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> msg</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="color:#569CD6;--shiki-dark:#569CD6;">throws</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> InterruptedException</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        System</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">out</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">println</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;spring 消费者接收到消息：【&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + msg + </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;】&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、工作消息队列-workqueue" tabindex="-1"><a class="header-anchor" href="#二、工作消息队列-workqueue"><span>二、工作消息队列 WorkQueue</span></a></h2><p>让多个消费者绑定到一个队列，共同消费队列中的消息</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>多个消费者绑定到一个队列，同一条消息只会被一个消费者处理</p></div><p>当消息处理比较耗时的时候，可能生产消息的速度会远远大于消息的消费速度。长此以往，消息就会堆积越来越多，无法及时处理。</p><p>此时就可以使用<code>work</code> 模型，多个消费者共同处理消息处理，速度就能大大提高了</p><figure><img src="`+t+`" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><p><strong>配置</strong></p><p>若不添加配置，则消息是平均分配给每个消费者，并没有考虑到消费者的处理能力</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">spring</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">  rabbitmq</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    listener</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">      simple</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">        prefetch</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">: </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#6A9955;--shiki-dark:#6A9955;"> # 每次只能获取一条消息，处理完成才能获取下一个消息</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>发送端</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 循环向队列中不停发送消息，模拟消息堆积。</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> testWorkQueue</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() throws InterruptedException {</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 队列名称</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">    String</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> queueName</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;simple.queue&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 消息</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">    String</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> message</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;hello, message_&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    for</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> (</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">int</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> i</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">0</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">; i &lt; </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">50</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">; i++) {</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">        // 发送消息</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        rabbitTemplate</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">convertAndSend</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(queueName, message + i);</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        Thread</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">sleep</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">20</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>接收端</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">RabbitListener</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(queues = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;simple.queue&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> listenWorkQueue1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">String</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> msg) throws InterruptedException {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    System</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">out</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">println</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;消费者1接收到消息：【&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + msg + </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;】&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">LocalTime</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">now</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">());</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    Thread</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">sleep</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">20</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">RabbitListener</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(queues = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;simple.queue&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> listenWorkQueue2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">String</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> msg) throws InterruptedException {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    System</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">err</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">println</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;消费者2........接收到消息：【&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + msg + </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;】&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">LocalTime</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">now</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">());</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    Thread</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">sleep</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">200</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、声明队列和交换机" tabindex="-1"><a class="header-anchor" href="#三、声明队列和交换机"><span>三、声明队列和交换机</span></a></h2><p><code>Spring</code>提供了一个接口<code>Exchange</code>，来表示所有不同类型的交换机：</p><figure><img src="`+C+'" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><p><strong>消费端绑定队列和交换机</strong></p>',26),v=s("div",{class:"language-java line-numbers-mode","data-ext":"java","data-title":"java"},[s("pre",{class:"shiki shiki-themes dark-plus dark-plus",style:{"background-color":"#1E1E1E","--shiki-dark-bg":"#1E1E1E",color:"#D4D4D4","--shiki-dark":"#D4D4D4"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"@"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"Configuration")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"public"),s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}}," class"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}}," FanoutConfig"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}}," {")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"    /**")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"     * 声明交换机")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"     * "),s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"@return"),s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}}," Fanout类型交换机")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"     */")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    @"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"Bean")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"    public"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}}," FanoutExchange"),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}}," fanoutExchange"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(){")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0","--shiki-dark":"#C586C0"}},"        return"),s("span",{style:{color:"#C586C0","--shiki-dark":"#C586C0"}}," new"),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}}," FanoutExchange"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"("),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"zhang.fanout"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},");")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    }")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"    /**")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"     * 第1个队列")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"     */")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    @"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"Bean")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"    public"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}}," Queue"),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}}," fanoutQueue1"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(){")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0","--shiki-dark":"#C586C0"}},"        return"),s("span",{style:{color:"#C586C0","--shiki-dark":"#C586C0"}}," new"),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}}," Queue"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"("),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"fanout.queue1"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},");")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    }")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"    /**")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"     * 绑定队列和交换机")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"     */")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    @"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"Bean")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"    public"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}}," Binding"),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}}," bindingQueue1"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"("),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"Queue"),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}}," fanoutQueue1"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},", "),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"FanoutExchange"),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}}," fanoutExchange"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"){")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0","--shiki-dark":"#C586C0"}},"        return"),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}}," BindingBuilder"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"."),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}},"bind"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(fanoutQueue1)."),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}},"to"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(fanoutExchange);")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    }")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"    /**")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"     * 第2个队列")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"     */")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    @"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"Bean")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"    public"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}}," Queue"),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}}," fanoutQueue2"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(){")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0","--shiki-dark":"#C586C0"}},"        return"),s("span",{style:{color:"#C586C0","--shiki-dark":"#C586C0"}}," new"),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}}," Queue"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"("),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"fanout.queue2"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},");")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    }")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"    /**")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"     * 绑定队列和交换机")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"     */")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    @"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"Bean")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"    public"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}}," Binding"),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}}," bindingQueue2"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"("),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"Queue"),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}}," fanoutQueue2"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},", "),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"FanoutExchange"),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}}," fanoutExchange"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"){")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0","--shiki-dark":"#C586C0"}},"        return"),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}}," BindingBuilder"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"."),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}},"bind"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(fanoutQueue2)."),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}},"to"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(fanoutExchange);")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    }")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"}")]),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),m=s("div",{class:"language-java line-numbers-mode","data-ext":"java","data-title":"java"},[s("pre",{class:"shiki shiki-themes dark-plus dark-plus",style:{"background-color":"#1E1E1E","--shiki-dark-bg":"#1E1E1E",color:"#D4D4D4","--shiki-dark":"#D4D4D4"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"@"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"RabbitListener"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(bindings = @"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"QueueBinding"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    value = @"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"Queue"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(name = "),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"direct.queue1"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"),")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    exchange = @"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"Exchange"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(name = "),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"zhang.direct"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},", type = "),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}},"ExchangeTypes"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"."),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}},"DIRECT"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"),")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    key = {"),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"red"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},", "),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"blue"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"}")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"))")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"public"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}}," void"),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}}," listenDirectQueue1"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"("),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"String"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}}," msg){")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}},"    System"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"."),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}},"out"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"."),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}},"println"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"("),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"消费者接收到direct.queue1的消息：【"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}}," + msg + "),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"】"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},");")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"}")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"@"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"RabbitListener"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(bindings = @"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"QueueBinding"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    value = @"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"Queue"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(name = "),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"direct.queue2"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"),")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    exchange = @"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"Exchange"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(name = "),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"zhang.direct"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},", type = "),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}},"ExchangeTypes"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"."),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}},"DIRECT"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"),")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    key = {"),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"red"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},", "),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"yellow"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"}")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"))")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"public"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}}," void"),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}}," listenDirectQueue2"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"("),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"String"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}}," msg){")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}},"    System"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"."),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}},"out"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"."),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}},"println"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"("),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"消费者接收到direct.queue2的消息：【"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}}," + msg + "),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"】"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},");")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"}")]),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),b=D('<div class="hint-container tip"><p class="hint-container-title">提示</p><p>也可在控制台手动创建/绑定队列和交换机</p></div><h2 id="四、广播-fanout-exchange" tabindex="-1"><a class="header-anchor" href="#四、广播-fanout-exchange"><span>四、广播 Fanout Exchange</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>将消息交给所有绑定到交换机的队列，一条消息，会被所有订阅的队列都消费</p></div><figure><img src="'+h+`" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><p>在广播模式下，消息发送流程是这样的：</p><ul><li>1） 可以有多个队列</li><li>2） 每个队列都要绑定到<code>Exchange</code>（交换机）</li><li>3） 生产者发送的消息，只能发送到交换机，交换机来决定要发给哪个队列，生产者无法决定</li><li>4） 交换机把消息发送给绑定过的所有队列</li><li>5） 订阅队列的消费者都能拿到消息</li></ul><p><strong>发送端</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> testFanoutExchange</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 交换机名称</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">    String</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> exchangeName</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;zhang.fanout&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 消息</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">    String</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> message</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;hello, everyone!&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    rabbitTemplate</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">convertAndSend</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(exchangeName, </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, message);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>接收端</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">RabbitListener</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(bindings = @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">QueueBinding</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    value = @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Queue</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(name = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;fanout.queue1&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    exchange = @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Exchange</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(name = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;zhang.fanout&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, type = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">ExchangeTypes</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">FANOUT</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> listenDirectQueue1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">String</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> msg){</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    System</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">out</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">println</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;消费者接收到fanout.queue1的消息：【&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + msg + </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;】&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">RabbitListener</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(bindings = @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">QueueBinding</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    value = @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Queue</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(name = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;fanout.queue2&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    exchange = @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Exchange</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(name = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;zhang.fanout&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, type = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">ExchangeTypes</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">FANOUT</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> listenDirectQueue2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">String</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> msg){</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    System</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">out</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">println</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;消费者接收到fanout.queue2的消息：【&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + msg + </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;】&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、路由-direct-exchange" tabindex="-1"><a class="header-anchor" href="#五、路由-direct-exchange"><span>五、路由 Direct Exchange</span></a></h2><p>在某些场景下，我们希望不同的消息被不同的队列消费。这时就要用到<code>Direct</code>类型的<code>Exchange</code>。</p><p>在<code>Direct</code>模型下：</p><ul><li>队列与交换机的绑定，不能是任意绑定了，而是要指定一个<code>RoutingKey</code>（路由key）</li><li>消息的发送方在向 <code>Exchange</code>发送消息时，也必须指定消息的 <code>RoutingKey</code>。</li><li><code>Exchange</code>不再把消息交给每一个绑定的队列，而是根据消息的<code>Routing Key</code>进行判断，只有队列的<code>Routingkey</code>与消息的 <code>Routing key</code>完全一致，才会接收到消息</li></ul><figure><img src="`+y+`" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><p><strong>发送端</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> testSendDirectExchange</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 交换机名称</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">    String</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> exchangeName</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;zhang.direct&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 消息</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">    String</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> message</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;红色警报！日本乱排核废水，导致海洋生物变异，惊现哥斯拉！&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 发送消息</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    rabbitTemplate</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">convertAndSend</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(exchangeName, </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;red&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, message);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>消费端</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">RabbitListener</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(bindings = @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">QueueBinding</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    value = @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Queue</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(name = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;direct.queue1&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    exchange = @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Exchange</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(name = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;zhang.direct&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, type = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">ExchangeTypes</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">DIRECT</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    key = {</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;red&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;blue&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> listenDirectQueue1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">String</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> msg){</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    System</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">out</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">println</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;消费者接收到direct.queue1的消息：【&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + msg + </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;】&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">RabbitListener</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(bindings = @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">QueueBinding</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    value = @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Queue</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(name = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;direct.queue2&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    exchange = @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Exchange</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(name = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;zhang.direct&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, type = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">ExchangeTypes</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">DIRECT</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    key = {</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;red&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;yellow&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> listenDirectQueue2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">String</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> msg){</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    System</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">out</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">println</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;消费者接收到direct.queue2的消息：【&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + msg + </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;】&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="六、主题-topic-exchange" tabindex="-1"><a class="header-anchor" href="#六、主题-topic-exchange"><span>六、主题 Topic Exchange</span></a></h2><p>把消息交给符合<code>routing pattern</code>（路由模式) 的队列</p><p><code>Topic</code>类型的<code>Exchange</code>与<code>Direct</code>相比，都是可以根据<code>RoutingKey</code>把消息路由到不同的队列。只不过<code>Topic</code>类型<code>Exchange</code>可以让队列在绑定<code>Routing key</code> 的时候使用通配符</p><p><code>Routingkey</code> 一般都是有一个或多个单词组成，多个单词之间以”<code>.</code>”分割，例如： <code>item.insert</code></p><p><strong>通配符规则：</strong></p><p><code>#</code>：匹配一个或多个词</p><p><code>*</code>：匹配不多不少恰好1个词</p><p><strong>举例：</strong></p><p><code>item.#</code>：能够匹配<code>item.spu.insert</code> 或者 <code>item.spu</code></p><p><code>item.*</code>：只能匹配<code>item.spu</code></p><p><strong>发送端</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> testSendTopicExchange</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 交换机名称</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">    String</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> exchangeName</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;zhang.topic&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 消息</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">    String</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> message</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;喜报！孙悟空大战哥斯拉，胜!&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 发送消息</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    rabbitTemplate</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">convertAndSend</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(exchangeName, </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;china.news&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, message);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>消费端</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">RabbitListener</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(bindings = @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">QueueBinding</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    value = @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Queue</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(name = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;topic.queue1&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    exchange = @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Exchange</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(name = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;zhang.topic&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, type = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">ExchangeTypes</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">TOPIC</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    key = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;china.#&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> listenTopicQueue1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">String</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> msg){</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    System</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">out</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">println</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;消费者接收到topic.queue1的消息：【&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + msg + </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;】&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">RabbitListener</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(bindings = @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">QueueBinding</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    value = @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Queue</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(name = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;topic.queue2&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    exchange = @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Exchange</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(name = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;zhang.topic&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, type = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">ExchangeTypes</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">TOPIC</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    key = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;#.news&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> listenTopicQueue2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">String</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> msg){</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    System</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">out</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">println</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;消费者接收到topic.queue2的消息：【&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + msg + </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;】&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,33);function g(A,B){const e=o("CodeTabs");return p(),k("div",null,[E,c(e,{id:"101",data:[{id:"普通方式"},{id:"基于注解"}]},{title0:n(({value:i,isActive:l})=>[a("普通方式")]),title1:n(({value:i,isActive:l})=>[a("基于注解")]),tab0:n(({value:i,isActive:l})=>[v]),tab1:n(({value:i,isActive:l})=>[m]),_:1}),b])}const F=r(u,[["render",g],["__file","BasicOperations.html.vue"]]),x=JSON.parse('{"path":"/Use/Java/RabbitMQ/BasicOperations.html","title":"Java操作RabbitMQ","lang":"zh-CN","frontmatter":{"category":"使用篇"},"headers":[{"level":2,"title":"一、基本消息队列 BasicQueue","slug":"一、基本消息队列-basicqueue","link":"#一、基本消息队列-basicqueue","children":[]},{"level":2,"title":"二、工作消息队列 WorkQueue","slug":"二、工作消息队列-workqueue","link":"#二、工作消息队列-workqueue","children":[]},{"level":2,"title":"三、声明队列和交换机","slug":"三、声明队列和交换机","link":"#三、声明队列和交换机","children":[]},{"level":2,"title":"四、广播 Fanout Exchange","slug":"四、广播-fanout-exchange","link":"#四、广播-fanout-exchange","children":[]},{"level":2,"title":"五、路由 Direct Exchange","slug":"五、路由-direct-exchange","link":"#五、路由-direct-exchange","children":[]},{"level":2,"title":"六、主题 Topic Exchange","slug":"六、主题-topic-exchange","link":"#六、主题-topic-exchange","children":[]}],"git":{"createdTime":1708330205000,"updatedTime":1708873062000,"contributors":[{"name":"zhanglinwei","email":"3498729975@qq.com","commits":2}]},"readingTime":{"minutes":5.12,"words":1536},"filePathRelative":"Use/Java/RabbitMQ/BasicOperations.md","localizedDate":"2024年2月19日"}');export{F as comp,x as data};
