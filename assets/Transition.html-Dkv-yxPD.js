import{_ as e,r,o as D,c as p,e as s,f as n,g as i,a as l}from"./app-Vg0IViah.js";const o={},c=s("h1",{id:"transition",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#transition"},[s("span",null,"Transition")])],-1),d={href:"https://cn.vuejs.org/guide/built-ins/transition.html",target:"_blank",rel:"noopener noreferrer"},t=l('<p><code>&lt;Transition&gt;</code> 是一个内置组件</p><p>它可以将进入和离开动画应用到通过默认插槽传递给它的元素或组件上。</p><p>进入或离开可以由以下的条件之一触发：</p><ul><li>由 <code>v-if</code> 所触发的切换</li><li>由 <code>v-show</code> 所触发的切换</li><li>由特殊元素 <code>&lt;component&gt;</code> 切换的动态组件</li><li>改变特殊的 <code>key</code> 属性</li></ul><div class="hint-container warning"><p class="hint-container-title">注意</p><p><code>&lt;Transition&gt;</code> 仅支持单个元素或组件作为其插槽内容。如果内容是一个组件，这个组件 ==必须仅有一个根元素 ==</p></div><h2 id="一、调试器" tabindex="-1"><a class="header-anchor" href="#一、调试器"><span>一、调试器</span></a></h2>',6),k={href:"https://play.vuejs.org/#eNp9kUFLwzAUx7/KM5cqzBXR0+gGKgP1oKKCl1xG99ZlpklIXuag9Lv7krK5w9it7//7v/SXthP3zo23EcVEVKH2yhEEpOhm0qjWWU/QgccV9LDytoWCq4U00tTWBII2NDBN/LJ4Qq0tfFuvlxfFlTRVORzHB/FA2Dq9IOQJoFrfzLouL/d9VfKUU2VcJNhet3aJeioFcymgZFiVR/tiJCjw61eqGW+CNWzepX0pats6pdG/OVKsJ8UEMklswXa/LzkjH3G0z+s11j8n8k3YpUyKd48B/RalODBa+AZpwPPPV9zx8wGyfdTcPgM/MFgdk+NQe4hmydpHvWz7nL+/Ms1XmO8ITdhfKommZp/7UvA/eTxz9X/d2/Fd3pOmF/0fEx+nNQ==",target:"_blank",rel:"noopener noreferrer"},h=l(`<h2 id="二、基本使用" tabindex="-1"><a class="header-anchor" href="#二、基本使用"><span>二、基本使用</span></a></h2><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> setup</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">import</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> { </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">ref</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> } </span><span style="color:#C586C0;--shiki-dark:#C586C0;">from</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &#39;vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">const</span><span style="color:#4FC1FF;--shiki-dark:#4FC1FF;"> show</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">ref</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">true</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">template</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">  &lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">button</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> @</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">click</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">show</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = !</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">show</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">Toggle</span><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">button</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">  &lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">Transition</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">    &lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">p</span><span style="color:#C586C0;--shiki-dark:#C586C0;"> v-if</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">show</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">hello</span><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">p</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">  &lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">Transition</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">template</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">style</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D7BA7D;--shiki-dark:#D7BA7D;">.v-enter-active</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D7BA7D;--shiki-dark:#D7BA7D;">.v-leave-active</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">  transition</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">: opacity </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">0.5s</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> ease</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D7BA7D;--shiki-dark:#D7BA7D;">.v-enter-from</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D7BA7D;--shiki-dark:#D7BA7D;">.v-leave-to</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">  opacity</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">: </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">0</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">style</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当一个 <code>&lt;Transition&gt;</code> 组件中的元素被插入或移除时，会发生下面这些事情：</p><ol><li>Vue 会自动检测目标元素是否应用了 CSS 过渡或动画。如果是，则一些 CSS 过渡 class 会在适当的时机被添加和移除。</li><li>如果有作为监听器的 JavaScript 钩子，这些钩子函数会在适当时机被调用。</li><li>如果没有探测到 <code>CSS</code> 过渡或动画、也没有提供 <code>JavaScript</code> 钩子，那么 <code>DOM</code> 的插入、删除操作将在浏览器的下一个动画帧后执行。</li></ol><h2 id="三、基于css的过渡效果" tabindex="-1"><a class="header-anchor" href="#三、基于css的过渡效果"><span>三、基于CSS的过渡效果</span></a></h2><p>太高级了没研究，这个重任交给组件库了</p><h2 id="四、javascript钩子" tabindex="-1"><a class="header-anchor" href="#四、javascript钩子"><span>四、JavaScript钩子</span></a></h2><p>JavaScript动画库</p>`,8),C={href:"https://gsap.com/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://animejs.com/",target:"_blank",rel:"noopener noreferrer"},y={href:"https://motion.dev/",target:"_blank",rel:"noopener noreferrer"},u=l(`<p>可以通过监听 <code>&lt;Transition&gt;</code> 组件事件的方式在过渡过程中挂上钩子函数</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">Transition</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  @</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">before-enter</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">onBeforeEnter</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  @</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">enter</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">onEnter</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  @</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">after-enter</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">onAfterEnter</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  @</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">enter-cancelled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">onEnterCancelled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  @</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">before-leave</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">onBeforeLeave</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  @</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">leave</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">onLeave</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  @</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">after-leave</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">onAfterLeave</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  @</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">leave-cancelled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">onLeaveCancelled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">Transition</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 在元素被插入到 DOM 之前被调用</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 用这个来设置元素的 &quot;enter-from&quot; 状态</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> onBeforeEnter</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">el</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 在元素被插入到 DOM 之后的下一帧被调用</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 用这个来开始进入动画</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> onEnter</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">el</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">done</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">  // 调用回调函数 done 表示过渡结束</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">  // 如果与 CSS 结合使用，则这个回调是可选参数</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">  done</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 当进入过渡完成时调用。</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> onAfterEnter</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">el</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 当进入过渡在完成之前被取消时调用</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> onEnterCancelled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">el</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 在 leave 钩子之前调用</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 大多数时候，你应该只会用到 leave 钩子</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> onBeforeLeave</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">el</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 在离开过渡开始时调用</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 用这个来开始离开动画</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> onLeave</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">el</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">done</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">  // 调用回调函数 done 表示过渡结束</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">  // 如果与 CSS 结合使用，则这个回调是可选参数</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">  done</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 在离开过渡完成、</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 且元素已从 DOM 中移除时调用</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> onAfterLeave</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">el</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 仅在 v-show 过渡中可用</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> onLeaveCancelled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">el</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这些钩子可以与 CSS 过渡或动画结合使用，也可以单独使用。</p><p>在使用仅由 JavaScript 执行的动画时，最好是添加一个 <code>:css=&quot;false&quot;</code> prop。这显式地向 Vue 表明可以跳过对 CSS 过渡的自动探测。除了性能稍好一些之外，还可以防止 CSS 规则意外地干扰过渡效果。</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">Transition</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  ...</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  :</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">css</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">false</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  ...</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">Transition</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在有了 <code>:css=&quot;false&quot;</code> 后，我们就自己全权负责控制什么时候过渡结束了。这种情况下对于 <code>@enter</code> 和 <code>@leave</code> 钩子来说，回调函数 <code>done</code> 就是必须的。否则，钩子将被同步调用，过渡将立即完成。</p>`,7);function m(E,b){const a=r("ExternalLinkIcon");return D(),p("div",null,[c,s("p",null,[s("a",d,[n("官方文档"),i(a)])]),t,s("p",null,[s("a",k,[n("传送门"),i(a)])]),h,s("ul",null,[s("li",null,[s("a",C,[n("GreenSock"),i(a)])]),s("li",null,[s("a",v,[n("Anime.js"),i(a)])]),s("li",null,[s("a",y,[n("MotionOne"),i(a)])])]),u])}const F=e(o,[["render",m],["__file","Transition.html.vue"]]),g=JSON.parse('{"path":"/Use/Font/Vue3/Transition.html","title":"Transition","lang":"zh-CN","frontmatter":{"category":["使用篇"],"tag":["Vue3使用","Transition"]},"headers":[{"level":2,"title":"一、调试器","slug":"一、调试器","link":"#一、调试器","children":[]},{"level":2,"title":"二、基本使用","slug":"二、基本使用","link":"#二、基本使用","children":[]},{"level":2,"title":"三、基于CSS的过渡效果","slug":"三、基于css的过渡效果","link":"#三、基于css的过渡效果","children":[]},{"level":2,"title":"四、JavaScript钩子","slug":"四、javascript钩子","link":"#四、javascript钩子","children":[]}],"git":{"createdTime":1709384965000,"updatedTime":1709384965000,"contributors":[{"name":"zhanglinwei","email":"3498729975@qq.com","commits":1}]},"readingTime":{"minutes":2.97,"words":890},"filePathRelative":"Use/Font/Vue3/Transition.md","localizedDate":"2024年3月2日"}');export{F as comp,g as data};
