import{_ as i,r as l,o as e,c as t,e as s,f as r,g as d,a}from"./app-Vg0IViah.js";const D="/notes-pages/assets/image-20230820203427072-CULz3DDR.png",p="/notes-pages/assets/image-20230820203926858-Bj--sSmA.png",o="/notes-pages/assets/image-20230820204000358-BNeQd7T8.png",c="/notes-pages/assets/image-20230820204109050-yURFvLl2.png",k="/notes-pages/assets/image-20230820204330479-BMYp9osy.png",h={},C=a('<h1 id="java基础语法" tabindex="-1"><a class="header-anchor" href="#java基础语法"><span>Java基础语法</span></a></h1><div class="hint-container caution"><p class="hint-container-title">警告</p><p>仅记录了一些平时开发中不常用的语法</p></div><h2 id="一、安装环境" tabindex="-1"><a class="header-anchor" href="#一、安装环境"><span>一、安装环境</span></a></h2><p>1）下载、安装<code>JDK</code></p>',4),y={href:"http://www.oracle.com",target:"_blank",rel:"noopener noreferrer"},v=a(`<p>安装到 【自己能找到]】【纯英文】 的路径下。例如 <code>D:\\Develop\\jdk</code></p><p>校验是否安装成功</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">java</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> -version</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+D+'" alt="image-20230820203427072" tabindex="0" loading="lazy"><figcaption>image-20230820203427072</figcaption></figure><p>2）配置环境变量</p><p>右键单击我的电脑 <code>===&gt;</code> 属性 <code>===&gt;</code> 高级系统设置 <code>===&gt;</code> 环境变量</p><figure><img src="'+p+'" alt="image-20230820203926858" tabindex="0" loading="lazy"><figcaption>image-20230820203926858</figcaption></figure><figure><img src="'+o+'" alt="image-20230820204000358" tabindex="0" loading="lazy"><figcaption>image-20230820204000358</figcaption></figure><p>然后找到<code>Path</code>变量，双击进入</p><figure><img src="'+c+'" alt="image-20230820204109050" tabindex="0" loading="lazy"><figcaption>image-20230820204109050</figcaption></figure><p>输入 <code>%JAVA_HOME%/bin</code></p><figure><img src="'+k+`" alt="image-20230820204330479" tabindex="0" loading="lazy"><figcaption>image-20230820204330479</figcaption></figure><div class="hint-container warning"><p class="hint-container-title">注意</p><p>一定要一步一步的点确定、应用，否则会配置失败</p></div><h2 id="二、基础语法" tabindex="-1"><a class="header-anchor" href="#二、基础语法"><span>二、基础语法</span></a></h2><h3 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型"><span>数据类型</span></a></h3><p>1）基本数据类型</p><table><thead><tr><th style="text-align:center;">数据类型</th><th style="text-align:center;">关键字</th><th style="text-align:center;">取值范围</th><th style="text-align:center;">内存占用</th><th style="text-align:center;">默认值</th></tr></thead><tbody><tr><td style="text-align:center;">整型</td><td style="text-align:center;">byte（字节型）</td><td style="text-align:center;">-2^7 ~ 2^7-1</td><td style="text-align:center;">1</td><td style="text-align:center;">0</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">short（短整型）</td><td style="text-align:center;">-2^15 ~ 2^15-1</td><td style="text-align:center;">2</td><td style="text-align:center;">0</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">int（整型 <strong>默认</strong>）</td><td style="text-align:center;">-2^31 ~ 2^31-1</td><td style="text-align:center;">4</td><td style="text-align:center;">0</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">long（长整型）</td><td style="text-align:center;">-2^63 ~ 2^63-1</td><td style="text-align:center;">8</td><td style="text-align:center;">0L</td></tr><tr><td style="text-align:center;">浮点型</td><td style="text-align:center;">float（单精度浮点型）</td><td style="text-align:center;">-3.403E38 ~ 3.403E38</td><td style="text-align:center;">4</td><td style="text-align:center;">0.0F</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">double（双精度浮点型 <strong>默认</strong>）</td><td style="text-align:center;">-1.798E308 ~ 1.798E308</td><td style="text-align:center;">8</td><td style="text-align:center;">0.0D</td></tr><tr><td style="text-align:center;">字符型</td><td style="text-align:center;">char（字符型）</td><td style="text-align:center;">一个字符(&#39;a&#39;,&#39;A&#39;,&#39;我&#39;)</td><td style="text-align:center;">2</td><td style="text-align:center;">&#39;\\u0000&#39;</td></tr><tr><td style="text-align:center;">布尔型</td><td style="text-align:center;">boolean（布尔型）</td><td style="text-align:center;">true 或 false</td><td style="text-align:center;">1</td><td style="text-align:center;">false</td></tr></tbody></table><p>2）引用类型</p><p>除了基本数据类型，其它都是引用类型</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>String 是引用类型！！！</p></div><h3 id="scanner-键盘录入" tabindex="-1"><a class="header-anchor" href="#scanner-键盘录入"><span>Scanner 键盘录入</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">import</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> java.util.Scanner;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> class</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> Test</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    public</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> static</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> main</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">String</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[] </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">args</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {      </span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">		Scanner</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> sc</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#C586C0;--shiki-dark:#C586C0;">new</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> Scanner</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">System</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">in</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">        int</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> age</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">sc</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">nextInt</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        System</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">out</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">println</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(age);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="random-随机数" tabindex="-1"><a class="header-anchor" href="#random-随机数"><span>Random 随机数</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">import</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> java.util.Random;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> class</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> Test</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    public</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> static</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> main</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">String</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[] </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">args</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">        Random</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> r</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#C586C0;--shiki-dark:#C586C0;">new</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> Random</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">		int</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> num</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">r</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">nextInt</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">20</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">	}</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="类型转换" tabindex="-1"><a class="header-anchor" href="#类型转换"><span>类型转换</span></a></h3><ul><li><p>隐式转换：</p><ul><li>把一个取值范围小的数值或者变量，赋值给另一个取值范围大的变量</li><li>取值范围小的数据，和取值范围大的数据进行运算，小的会先提升为大的之后，再进行运算</li><li><code>byte</code> <code>short</code> <code>char</code> 三种数据在运算的时候，都会提升为<code>int</code>，然后再进行运算</li></ul></li><li><p>显示转换（强制转换）：</p><ul><li><p>把一个取值范围大的数值或者变量，赋值给另一个取值范围小的变量不允许直接赋值，需要强制转换</p></li><li><p>格式：<strong>目标数据类型 变量名 = (目标数据类型) 被强转的数据;</strong></p></li><li><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">double</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">12.3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">int</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = (</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">int</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) a;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><div class="hint-container warning"><p class="hint-container-title">注意</p><p>强转容易出现精度缺失，具体原理可以去补一下原反补码</p></div><h3 id="运算符" tabindex="-1"><a class="header-anchor" href="#运算符"><span>运算符</span></a></h3><h4 id="运算符优先级" tabindex="-1"><a class="header-anchor" href="#运算符优先级"><span>运算符优先级</span></a></h4><table><thead><tr><th>优先级</th><th>运算符</th></tr></thead><tbody><tr><td>1</td><td>. （） {}</td></tr><tr><td>2</td><td>!、~、++、--</td></tr><tr><td>3</td><td>*、/、%</td></tr><tr><td>4</td><td>+、-</td></tr><tr><td>5</td><td>&lt;&lt;、&gt;&gt;、&gt;&gt;&gt;</td></tr><tr><td>6</td><td>&lt;、&lt;=、&gt;、&gt;=、instanceof</td></tr><tr><td>7</td><td>==、!=</td></tr><tr><td>8</td><td>&amp;</td></tr><tr><td>9</td><td>^</td></tr><tr><td>10</td><td>|</td></tr><tr><td>11</td><td>&amp;&amp;</td></tr><tr><td>12</td><td>||</td></tr><tr><td>13</td><td>? :</td></tr><tr><td>14</td><td>=、+=、-=、*=、/=、%=、&amp;=</td></tr></tbody></table><h4 id="逻辑运算符" tabindex="-1"><a class="header-anchor" href="#逻辑运算符"><span>逻辑运算符</span></a></h4><p>逻辑运算符，可以用来整合多个条件, 为一段整体的逻辑</p><p>连接布尔类型的表达式, 或者是值</p><table><thead><tr><th style="text-align:center;">符号</th><th style="text-align:center;">作用</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">&amp;</td><td style="text-align:center;">逻辑与</td><td style="text-align:center;">并且, 遇 false 则 false</td></tr><tr><td style="text-align:center;">|</td><td style="text-align:center;">逻辑或</td><td style="text-align:center;">或者，遇 true 则 true</td></tr><tr><td style="text-align:center;">!</td><td style="text-align:center;">逻辑非</td><td style="text-align:center;">取反</td></tr><tr><td style="text-align:center;">^</td><td style="text-align:center;">逻辑异或</td><td style="text-align:center;">相同为 false，不同为 true</td></tr><tr><td style="text-align:center;">&amp;&amp;</td><td style="text-align:center;">短路与</td><td style="text-align:center;">作用和 &amp; 相同，但是有短路效果</td></tr><tr><td style="text-align:center;">||</td><td style="text-align:center;">短路或</td><td style="text-align:center;">作用和 | 相同，但是有短路效果</td></tr></tbody></table><h2 id="三、流程控制语句" tabindex="-1"><a class="header-anchor" href="#三、流程控制语句"><span>三、流程控制语句</span></a></h2><h3 id="switch" tabindex="-1"><a class="header-anchor" href="#switch"><span>switch</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">switch</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(表达式) {</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    case</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> 值1：</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">		语句体1;</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">		break</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    case</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> 值2：</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">		语句体2;</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">		break</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    …</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    default</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">：	</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">		语句体n+</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">		break</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>表达式：（将要匹配的值） 取值为<code>byte、short、int、char</code>JDK5以后可以是枚举，JDK7以后可以是<code>String</code>。</li><li><code>case</code>：后面跟的是要和表达式进行比较的值 （被匹配的值）。</li><li><code>break</code>：表示中断，结束的意思，用来结束<code>switch</code>语句。</li><li><code>default</code>：表示所有情况都不匹配的时候，就执行该处的内容，和<code>if</code>语句的<code>else</code>相似</li></ul><p>执行流程：</p><ul><li>拿着表达式的值，依次和<code>case</code>后面的值进行匹配，匹配成功，就会执行对应的语句，在执行的过程中，遇到<code>break</code>就会结束。</li><li>如果所有的<code>case</code>都不匹配，就会执行<code>default</code>里面的语句体，然后程序结束掉。</li></ul><div class="hint-container warning"><p class="hint-container-title">注意</p><ul><li><code>case</code>给出的值不允许重复</li><li><code>case</code>后面的值只能是常量，不能是变量</li><li>如果不写<code>break</code>，则会在执行完对应的语句体后继续向下执行，直到遇到<code>break</code>为止</li></ul></div><h3 id="循环语句" tabindex="-1"><a class="header-anchor" href="#循环语句"><span>循环语句</span></a></h3><h4 id="for" tabindex="-1"><a class="header-anchor" href="#for"><span>for</span></a></h4><p>条件为<code>true</code>时会执行循环体，否则不会执行</p><p>每一次循环完毕都会进行判断</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">for</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> (初始化语句;条件判断语句;条件控制语句) {</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    循环体语句;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">for</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> (</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">int</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> i</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">0</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">; i &lt; </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">5</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">; i++) {</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // something...</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    System</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">out</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">println</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;第&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + i + </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;次循环&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><ul><li>循环 <code>{ }</code> 中定义的变量，在每一轮循环结束后，都会从内存中释放</li><li>循环 <code>( )</code> 中定义的变量，在整个循环结束后，都会从内存中释放</li><li>循环语句 <code>( )</code> 和 <code>{ }</code> 之间不要写分号</li></ul></div><p><strong>嵌套循环</strong></p><p>在循环语句中, 继续出现循环语句，外循环执行一次, 内循环执行一圈</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">for</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> (</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">int</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> i</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">0</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">; i &lt; </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">5</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">; i++) {</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // something...</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    System</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">out</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">println</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;第&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + i + </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;次循环&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    for</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> (</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">int</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> j</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">0</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">; j &lt; </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">5</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">; i++) {</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    	// something...</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">	}</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="while" tabindex="-1"><a class="header-anchor" href="#while"><span>while</span></a></h4><p>与<code>for</code>一样，只是写法不同</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">while</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> (条件判断语句) {</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    循环体语句;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    条件控制语句;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">int</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> i</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">= </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">0</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">；</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">while</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> (i &lt; </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">5</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    循环体语句;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    i++;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="do-while" tabindex="-1"><a class="header-anchor" href="#do-while"><span>do...while</span></a></h4><p>无论判断条件是否满足都至少执行一次循环体</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">do</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    循环体语句;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    条件控制语句;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">} </span><span style="color:#C586C0;--shiki-dark:#C586C0;">while</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> (条件判断语句);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">int</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> i</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">0</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">do</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    循环体语句;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    i++;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">} </span><span style="color:#C586C0;--shiki-dark:#C586C0;">while</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> (i &lt; </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">5</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="三种循环的区别" tabindex="-1"><a class="header-anchor" href="#三种循环的区别"><span>三种循环的区别</span></a></h4><ul><li><p><code>for</code>循环 和 <code>while</code>循环（先判断后执行）</p></li><li><p><code>do...while</code> （先执行后判断）</p></li><li><p><code>for</code>循环中，控制循环的变量，在<code>for</code>循环结束后，就不能再次被访问到了</p></li><li><p><code>while</code>循环中，控制循环的变量，在<code>while</code>循环结束后，该变量还可以继续使用</p></li></ul><h4 id="跳转控制语句" tabindex="-1"><a class="header-anchor" href="#跳转控制语句"><span>跳转控制语句</span></a></h4><ul><li><code>break</code> : 终止循环体内容的执行，也就是说结束当前的整个循环</li><li><code>continue</code>: 跳过某次循环体内容的执行，继续下一次的执行</li></ul><div class="hint-container warning"><p class="hint-container-title">注意</p><ul><li><code>break</code> : 只能在循环, 和 <code>switch</code> 当中进行使用</li><li><code>continue</code> : 只能在循环中进行使用</li></ul></div><h2 id="四、数组" tabindex="-1"><a class="header-anchor" href="#四、数组"><span>四、数组</span></a></h2><h3 id="一维数组" tabindex="-1"><a class="header-anchor" href="#一维数组"><span>一维数组</span></a></h3><h4 id="数组定义" tabindex="-1"><a class="header-anchor" href="#数组定义"><span>数组定义</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 格式一：数据类型[] 数组名;</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">int</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[] </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">array</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 格式二：数据类型 数组名[];</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">int</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> array</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">/* 静态初始化 */</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 完整格式：数据类型[] 数组名 = new 数据类型[] { 元素1，元素2，元素3… };</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">int</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[] </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">array</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#C586C0;--shiki-dark:#C586C0;">new</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> int</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[]{ </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">11</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">22</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">33</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> };</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">double</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[] </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">array2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#C586C0;--shiki-dark:#C586C0;">new</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> double</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[] { </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">11.1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">22.2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">33.3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 简化格式：数据类型[] 数组名 = { 元素1，元素2，元素3… };</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">int</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[] </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">array</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = { </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">11</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">22</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">33</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> };</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">double</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[] </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">array2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = { </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">11.1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">22.2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">33.3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">/* 动态初始化 */</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 数据类型[] 数组名 = new 数据类型[数组长度];</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">int</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[] </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  = </span><span style="color:#C586C0;--shiki-dark:#C586C0;">new</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> int</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">];</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>数据类型</th><th>明细</th><th>默认值</th></tr></thead><tbody><tr><td>基本数据类型</td><td>整数</td><td>0</td></tr><tr><td></td><td>小数</td><td>0.0</td></tr><tr><td></td><td>字符</td><td>&#39;\\u0000&#39; 常见体现为空白字符</td></tr><tr><td></td><td>布尔</td><td>false</td></tr><tr><td>引用数据类型</td><td>类、接口、数组</td><td>null</td></tr></tbody></table><h3 id="二维数组" tabindex="-1"><a class="header-anchor" href="#二维数组"><span>二维数组</span></a></h3><p>二维数组是一种容器，该容器用于存储一维数组</p><h4 id="数组定义-1" tabindex="-1"><a class="header-anchor" href="#数组定义-1"><span>数组定义</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">/* 静态初始化 */</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 数据类型[][] 数组名 = new 数据类型[][] {{元素1,元素2},{元素1, 元素2}};</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">int</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[][] </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#C586C0;--shiki-dark:#C586C0;">new</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> int</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[][]{{</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">11</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">22</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">},{</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">33</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">44</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 简化格式：数据类型[][] 数组名 = {{元素1,元素2}, {元素1, 元素2}};</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">int</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[][] </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {{</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">11</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">22</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">},{</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">33</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">44</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">/* 动态初始化 */</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 数据类型[][] 数组名 = new 数据类型[m][n];</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// m表示这个二维数组，可以存放多少个一维数组</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// n表示每一个一维数组，可以存放多少个元素</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">int</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[][] </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#C586C0;--shiki-dark:#C586C0;">new</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> int</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">][</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">4</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">];</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 相当于三行四列的一个矩阵</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 1  2  3  4</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 7  8  9  6</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 2  5  8  9</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="访问元素" tabindex="-1"><a class="header-anchor" href="#访问元素"><span>访问元素</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 数组名[索引][索引];</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">int</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[][] </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#C586C0;--shiki-dark:#C586C0;">new</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> int</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[][]{{</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">11</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">22</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">},{</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">33</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">44</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}};</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">int</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = arr[</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">][</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">0</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">]; </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 33</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">int</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = arr[</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">0</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">][</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">]; </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 22</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,72);function E(u,b){const n=l("ExternalLinkIcon");return e(),t("div",null,[C,s("p",null,[s("a",y,[r("JDK官网"),d(n)])]),v])}const g=i(h,[["render",E],["__file","JavaBase.html.vue"]]),A=JSON.parse('{"path":"/Grammar/Java/Java/JavaBase.html","title":"Java基础语法","lang":"zh-CN","frontmatter":{"order":1,"category":"语法"},"headers":[{"level":2,"title":"一、安装环境","slug":"一、安装环境","link":"#一、安装环境","children":[]},{"level":2,"title":"二、基础语法","slug":"二、基础语法","link":"#二、基础语法","children":[{"level":3,"title":"数据类型","slug":"数据类型","link":"#数据类型","children":[]},{"level":3,"title":"Scanner 键盘录入","slug":"scanner-键盘录入","link":"#scanner-键盘录入","children":[]},{"level":3,"title":"Random 随机数","slug":"random-随机数","link":"#random-随机数","children":[]},{"level":3,"title":"类型转换","slug":"类型转换","link":"#类型转换","children":[]},{"level":3,"title":"运算符","slug":"运算符","link":"#运算符","children":[]}]},{"level":2,"title":"三、流程控制语句","slug":"三、流程控制语句","link":"#三、流程控制语句","children":[{"level":3,"title":"switch","slug":"switch","link":"#switch","children":[]},{"level":3,"title":"循环语句","slug":"循环语句","link":"#循环语句","children":[]}]},{"level":2,"title":"四、数组","slug":"四、数组","link":"#四、数组","children":[{"level":3,"title":"一维数组","slug":"一维数组","link":"#一维数组","children":[]},{"level":3,"title":"二维数组","slug":"二维数组","link":"#二维数组","children":[]}]}],"git":{"createdTime":1708330205000,"updatedTime":1709218334000,"contributors":[{"name":"zhanglinwei","email":"3498729975@qq.com","commits":3}]},"readingTime":{"minutes":6.23,"words":1869},"filePathRelative":"Grammar/Java/Java/JavaBase.md","localizedDate":"2024年2月19日"}');export{g as comp,A as data};
