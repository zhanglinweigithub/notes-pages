import{_ as r,r as p,o,c as k,g as c,w as n,a as D,f as a,e as s}from"./app-Vg0IViah.js";const d="/notes-pages/assets/image-20231128224350173-DBncQngd.png",t={},C=D('<h1 id="自定义注解" tabindex="-1"><a class="header-anchor" href="#自定义注解"><span>自定义注解</span></a></h1><p>注解是一种能被添加到<code>java</code>源代码中的元数据 ，方法、类、参数和包都可以用注解来修饰。</p><p>注解可以看作是一种特殊的标记，可以用在方法、类、参数和包上，程序在编译或者运行时可以检测到这些标记而进行一些特殊的处理。</p><h2 id="一、元注解" tabindex="-1"><a class="header-anchor" href="#一、元注解"><span>一、元注解</span></a></h2><p>元注解的作用就是负责注解其他注解。<code>Java5.0</code>定义了4个标准的<code>meta-annotation</code>类型，它们被用来提供对其它<code>annotation</code>类型作说明。</p><ul><li><code>@Target</code>：表明该注解可以应用的<code>Java</code>元素类型</li><li><code>@Retention</code>：表明该注解的生命周期</li><li><code>@Documented</code>：表明该注解标记的元素可以被<code>Javadoc</code>或类似的工具文档化</li><li><code>@Inherited</code>：表明使用了<code>@Inherited</code>注解的注解，所标记的类的子类也会拥有这个注解</li></ul>',6),h=s("div",{class:"language-java line-numbers-mode","data-ext":"java","data-title":"java"},[s("pre",{class:"shiki shiki-themes dark-plus dark-plus",style:{"background-color":"#1E1E1E","--shiki-dark-bg":"#1E1E1E",color:"#D4D4D4","--shiki-dark":"#D4D4D4"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"public"),s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}}," enum"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}}," ElementType"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}}," {")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    ")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    TYPE, "),s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"// 可应用于【类、接口、枚举】")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    FIELD, "),s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"// 可应用于【属性、枚举中的常量】")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    METHOD, "),s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"// 可应用于【方法】")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    PARAMETER, "),s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"// 可应用于【方法的形参】")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    CONSTRUCTOR, "),s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"// 可应用于【构造函数】")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    LOCAL_VARIABLE, "),s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"// 可应用于【局部变量】")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    ANNOTATION_TYPE, "),s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"// 可应用于【注解类型】")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    PACKAGE, "),s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"// 可应用于【包】")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    TYPE_PARAMETER, "),s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"// 可应用于【类型变量】")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    TYPE_USE "),s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"// 可应用于【任何使用类型的语句中】(如：声明语句、泛型和强制转换语句中的类型)")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"}")]),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),y=s("div",{class:"language-java line-numbers-mode","data-ext":"java","data-title":"java"},[s("pre",{class:"shiki shiki-themes dark-plus dark-plus",style:{"background-color":"#1E1E1E","--shiki-dark-bg":"#1E1E1E",color:"#D4D4D4","--shiki-dark":"#D4D4D4"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"public"),s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}}," enum"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}}," RetentionPolicy"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}}," {")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    ")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    SOURCE, "),s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"// 编译时丢弃，不包含在类文件中")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    CLASS, "),s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"// JVM加载时丢弃，包含在类文件中(默认值)")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    RUNTIME "),s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"// 由JVM加载，包含在类文件中，在运行时可以被获取到")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"}")]),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),E=D(`<h2 id="二、自定义注解" tabindex="-1"><a class="header-anchor" href="#二、自定义注解"><span>二、自定义注解</span></a></h2><ol><li>访问修饰符必须为 <mark>public</mark> ，不写默认为<code>public</code></li><li>关键字 <mark>@interface</mark></li></ol><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Target</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">ElementType</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">TYPE</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Documented</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Retention</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">RetentionPolicy</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">RUNTIME</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> @</span><span style="color:#569CD6;--shiki-dark:#569CD6;">interface</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> MyAnnotation</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    //设置默认值 zhang</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">    String</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() </span><span style="color:#C586C0;--shiki-dark:#C586C0;">default</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &quot;zhang&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">    int</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> age</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、自定义注解使用案例" tabindex="-1"><a class="header-anchor" href="#三、自定义注解使用案例"><span>三、自定义注解使用案例</span></a></h2><h3 id="_1、记录日志" tabindex="-1"><a class="header-anchor" href="#_1、记录日志"><span>1、记录日志</span></a></h3><p><a href="">传送门</a></p><h3 id="_2、接口防刷" tabindex="-1"><a class="header-anchor" href="#_2、接口防刷"><span>2、接口防刷</span></a></h3><p>接口防刷就是控制器在一定时间内的访问次数，只需要一个注解就搞定</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>这里用的是自定义注解实现防刷，也可以使用<code>AOP</code>等其它方式，思路都差不多</p></div><p><strong>实现思路：</strong></p><ol><li>自定义一个注解，用于标注哪些接口需要防刷</li><li>使用<code>Redis</code>实现计数器功能 <ol><li>未到最大请求数放行</li><li>达到则拦截</li></ol></li><li>通过拦截器实现拦截请求</li></ol><p><strong>整体流程：</strong></p><figure><img src="`+d+`" alt="image-20231128224350173" tabindex="0" loading="lazy"><figcaption>image-20231128224350173</figcaption></figure><p><strong>1）自定义注解</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Retention</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(RUNTIME)</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Target</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(METHOD)</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> @</span><span style="color:#569CD6;--shiki-dark:#569CD6;">interface</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> AccessLimit</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">    int</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> minutes</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(); </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 设置时间</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">    int</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> maxCount</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(); </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 最大请求数</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">    boolean</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> needLogin</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() </span><span style="color:#C586C0;--shiki-dark:#C586C0;">default</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> true</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">; </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 需要登录</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2）Interceptor拦截器</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Slf4j</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Component</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> class</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> RefreshInterceptor</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> extends</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> HandlerInterceptorAdapter</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Autowired</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    private</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> RedisTemplate</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> redisTemplate</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Override</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> boolean</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> preHandle</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">HttpServletRequest</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> request</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">HttpServletResponse</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> response</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Object</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> handler</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="color:#569CD6;--shiki-dark:#569CD6;">throws</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> Exception</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        System</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">out</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">println</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;进入拦截器&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">        //判断请求是否属于方法的请求</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">        if</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(handler </span><span style="color:#569CD6;--shiki-dark:#569CD6;">instanceof</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> HandlerMethod){</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">            System</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">out</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">println</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;判断请求是否属于方法的请求&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">            HandlerMethod</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> hm</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = (HandlerMethod) handler;</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">            //获取方法中的注解,看是否有该注解</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">            AccessLimit</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> accessLimit</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">hm</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getMethodAnnotation</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">AccessLimit</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">class</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">            if</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(accessLimit == </span><span style="color:#569CD6;--shiki-dark:#569CD6;">null</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">){</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">                return</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> true</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">            }</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">            //@AccessLimit(seconds=5, maxCount=5, needLogin=true)</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">            int</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> minutes</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">accessLimit</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">minutes</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">            int</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> maxCount</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">accessLimit</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">maxCount</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">            boolean</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> login</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">accessLimit</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">needLogin</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">            Map</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">String</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Object</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&gt; </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">mp</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#C586C0;--shiki-dark:#C586C0;">new</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> HashMap</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">            mp</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">put</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;seconds&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,minutes);</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">            mp</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">put</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;maxCount&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,maxCount);</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">            mp</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">put</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;login&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,login);</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">            String</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> key</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">IPUtil</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getIpAddr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(request)+</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;_&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">+</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">request</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getRequestURI</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">            log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">info</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;Key:{}&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,key);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">            //从redis中获取用户访问的次数</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">            String</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> value</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">redisTemplate</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">get</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(key);</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">            //判断value是否为null</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">            if</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(value == </span><span style="color:#569CD6;--shiki-dark:#569CD6;">null</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">){</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">                System</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">out</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">println</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;第1次访问，设置有效期&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">+minutes +</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;分钟&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">                redisTemplate</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">set</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(key, </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;1&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,minutes);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">            }</span><span style="color:#C586C0;--shiki-dark:#C586C0;">else</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">                Long</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> count</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">redisService</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">incr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(key);</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">                System</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">out</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">println</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;第&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">+count+</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;次访问，设置有效期&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">+minutes +</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;分钟&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">                System</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">out</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">println</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;{count :&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">+count + </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;, maxCount :&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">+maxCount+</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;}&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">                if</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">count</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">intValue</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() &gt; maxCount){</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">                    System</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">out</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">println</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;超出访问次数&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">                    redisTemplate</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">set</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(key, </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;999&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">                    renderError</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(response);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">                }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">            }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">        return</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> true</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    private</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> renderError</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">HttpServletResponse</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> response</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="color:#569CD6;--shiki-dark:#569CD6;">throws</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> Exception</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        response</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">setContentType</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;application/json;charset=UTF-8&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">        OutputStream</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> out</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">response</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getOutputStream</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">        String</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> str</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">JSON</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">toJSONString</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">ResultT</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">error</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;250&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;超出访问次数&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">));</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        out</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">write</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">str</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getBytes</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;UTF-8&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">));</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        out</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">flush</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        out</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">close</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3）注册拦截器</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Configuration</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> class</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> WebConfig</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> extends</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> WebMvcConfigurerAdapter</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Autowired</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    private</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> RefreshInterceptor</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> interceptor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Override</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> addInterceptors</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">InterceptorRegistry</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> registry</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        System</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">out</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">println</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;进入拦截器配置类&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        registry</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">addInterceptor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(interceptor);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4）Controller标注注解</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">RestController</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> class</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> RefreshController</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">AccessLimit</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(minutes=</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, maxCount=</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">10</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, needLogin=</span><span style="color:#569CD6;--shiki-dark:#569CD6;">true</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">RequestMapping</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;/testRefresh&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">ResponseBody</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> ResultT</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> fangshua</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(){</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">        return</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> ResultT</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">ok</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;请求成功&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21);function u(v,A){const e=p("CodeTabs");return o(),k("div",null,[C,c(e,{id:"37",data:[{id:"@Target"},{id:"@Retention"}]},{title0:n(({value:i,isActive:l})=>[a("@Target")]),title1:n(({value:i,isActive:l})=>[a("@Retention")]),tab0:n(({value:i,isActive:l})=>[h]),tab1:n(({value:i,isActive:l})=>[y]),_:1}),E])}const b=r(t,[["render",u],["__file","DiyAnnotation.html.vue"]]),F=JSON.parse('{"path":"/Use/Java/SpringBoot/DiyAnnotation.html","title":"自定义注解","lang":"zh-CN","frontmatter":{"category":"使用篇"},"headers":[{"level":2,"title":"一、元注解","slug":"一、元注解","link":"#一、元注解","children":[]},{"level":2,"title":"二、自定义注解","slug":"二、自定义注解","link":"#二、自定义注解","children":[]},{"level":2,"title":"三、自定义注解使用案例","slug":"三、自定义注解使用案例","link":"#三、自定义注解使用案例","children":[{"level":3,"title":"1、记录日志","slug":"_1、记录日志","link":"#_1、记录日志","children":[]},{"level":3,"title":"2、接口防刷","slug":"_2、接口防刷","link":"#_2、接口防刷","children":[]}]}],"git":{"createdTime":1708330205000,"updatedTime":1708873062000,"contributors":[{"name":"zhanglinwei","email":"3498729975@qq.com","commits":2}]},"readingTime":{"minutes":3.28,"words":984},"filePathRelative":"Use/Java/SpringBoot/DiyAnnotation.md","localizedDate":"2024年2月19日"}');export{b as comp,F as data};
