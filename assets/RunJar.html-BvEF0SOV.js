import{_ as s,o as a,c as i,a as n}from"./app-Vg0IViah.js";const l={},e=n(`<h1 id="运行jar包" tabindex="-1"><a class="header-anchor" href="#运行jar包"><span>运行Jar包</span></a></h1><h2 id="常用启动命令" tabindex="-1"><a class="header-anchor" href="#常用启动命令"><span>常用启动命令</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">nohup</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> java</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> -jar</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> -Dspring.profiles.active=test</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> xxx.jar</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> &gt; </span><span style="color:#CE9178;--shiki-dark:#CE9178;">out.log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  &amp;;</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">nohup</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> java</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> -jar</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> -Dspring.profiles.active=test</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> xxx.jar</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> &gt; </span><span style="color:#CE9178;--shiki-dark:#CE9178;">out.log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> 2&gt;&amp;1 &amp;;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>nohup</code>：关闭<code>SSH</code>客户端连接，程序不会中止运行</li><li><code>-Dspring.profiles.active=test</code>：手动指定配置文件</li><li><code>&gt; out.log</code>：不在当前窗口输出日志，而是将输出内容输入到<code>out.log</code>中</li><li><code>&amp;</code>：后台运行</li><li><code>&gt; out.log 2&gt;&amp;1</code>： 1指向<code>out.log</code>，2指向1，所以2也指向<code>out.log</code><ul><li>本来<code>1—–&gt;屏幕</code> （1指向屏幕）</li><li>执行<code>&gt;out.log</code>后，<code>1—–&gt;out.log</code> (1指向<code>out.log</code>)</li><li>执行<code>2&gt;&amp;1</code>后， <code>2—–&gt;1</code> (2指向1，而1指向<code>out.log</code>，因此2也指向了<code>out.log</code>)</li></ul></li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><ul><li><p><code>&gt;&amp;</code>是一个整体代表将【标准错误2】重定向到【标准输出1】，如果是<code>2&gt;1</code>的话，代表将标准错误输出到文件1，而不是重定向到标准输出流</p></li><li><p><code>/dev/null</code> 可以看作<code>黑洞</code>，等价于一个只写文件。所有写入它的内容都会永远丢失，尝试从它那儿读取内容则什么也读不到。也就是将所有产生的日志将被丢弃</p></li><li><p>为什么需要将标准错误重定向到标准输出的原因，是因为标准错误没有缓冲区，而<code>STDOUT</code>有</p></li><li><p>当<code>Linux</code>执行一个程序时，会自动打开三个流</p><p><code>0</code>：标准输入流（默认是键盘） <code>1</code>：标准输出流（默认是屏幕） <code>2</code>：标准错误流（默认是屏幕）</p></li></ul></div><h2 id="常用启动脚本" tabindex="-1"><a class="header-anchor" href="#常用启动脚本"><span>常用启动脚本</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">#!/bin/sh</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;"># 重新加载系统环境变量文件</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">source</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> /etc/profile</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> killproject</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">  # 以端口号来找应用</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">  project_pid</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">$(</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">netstat</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> -lnp</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> |</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> grep</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;"> 8190</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">|</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">awk</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &#39;{print $7}&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">|</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">cut</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> -d/</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> -f1</span><span style="color:#CE9178;--shiki-dark:#CE9178;">)</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">  if</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> [  </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">$project_pid</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> &gt; </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">0</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> ];</span><span style="color:#C586C0;--shiki-dark:#C586C0;">then</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">        echo</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &quot;旧服务已经启动了，先关闭旧服务，服务pid为: </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">$project_pid</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &quot;</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">        kill</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> -9</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> $(</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">netstat</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> -lnp</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> |</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> grep</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;"> 8190</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">|</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">awk</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &#39;{print $7}&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">|</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">cut</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> -d/</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> -f1</span><span style="color:#CE9178;--shiki-dark:#CE9178;">)</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">        echo</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &#39;项目关闭成功！&#39;</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">  else</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">        echo</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &quot;项目未启动，直接启动新版本&gt;...&quot;</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">  fi</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">killproject</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">JAVA_OPTS</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">-Dspring.profiles.active=pro</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">APP_PATH</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">/data/java/xxx/xxx.jar</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">nohup</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> java</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> -jar</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> \${</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">JAVA_OPTS</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">} \${</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">APP_PATH</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">} &gt; </span><span style="color:#CE9178;--shiki-dark:#CE9178;">out.log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> 2&gt;&amp;1 &amp;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1、普通运行" tabindex="-1"><a class="header-anchor" href="#_1、普通运行"><span>1、普通运行</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">java</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> -jar</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> xxx.jar</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>当前<code>ssh</code>窗口被锁定，可按<code>CTRL + C</code>打断程序运行，或直接关闭窗口，程序退出</li></ul><h2 id="_2、后台运行" tabindex="-1"><a class="header-anchor" href="#_2、后台运行"><span>2、后台运行</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">java</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> -jar</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> xxx.jar</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> &amp;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>&amp;</code>代表在后台运行 ，<code>ctrl+c</code> 后程序也会继续运行</li></ul><h2 id="_3、nohup" tabindex="-1"><a class="header-anchor" href="#_3、nohup"><span>3、nohup</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">nohup</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> java</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> -jar</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> xxx.jar</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> &amp;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>nohup</code>：不挂断</li><li>关闭<code>SSH</code>客户端连接，程序不会中止运行</li><li><code>&amp;</code>：后台运行</li></ul>`,16),o=[e];function r(p,d){return a(),i("div",null,o)}const D=s(l,[["render",r],["__file","RunJar.html.vue"]]),t=JSON.parse('{"path":"/Use/Java/Linux/RunJar.html","title":"运行Jar包","lang":"zh-CN","frontmatter":{"category":"使用篇"},"headers":[{"level":2,"title":"常用启动命令","slug":"常用启动命令","link":"#常用启动命令","children":[]},{"level":2,"title":"常用启动脚本","slug":"常用启动脚本","link":"#常用启动脚本","children":[]},{"level":2,"title":"1、普通运行","slug":"_1、普通运行","link":"#_1、普通运行","children":[]},{"level":2,"title":"2、后台运行","slug":"_2、后台运行","link":"#_2、后台运行","children":[]},{"level":2,"title":"3、nohup","slug":"_3、nohup","link":"#_3、nohup","children":[]}],"git":{"createdTime":1708330205000,"updatedTime":1708873062000,"contributors":[{"name":"zhanglinwei","email":"3498729975@qq.com","commits":2}]},"readingTime":{"minutes":1.87,"words":562},"filePathRelative":"Use/Java/Linux/RunJar.md","localizedDate":"2024年2月19日"}');export{D as comp,t as data};
