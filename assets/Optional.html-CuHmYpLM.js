import{_ as s,o as a,c as l,a as e}from"./app-Vg0IViah.js";const i={},n=e(`<h1 id="optional" tabindex="-1"><a class="header-anchor" href="#optional"><span>Optional</span></a></h1><p><code>Optional</code> 类主要解决的问题是臭名昭著的空指针异常（<code>NullPointerException</code>）</p><p>本质上，这是一个包含有可选值的包装类，这意味着 <code>Optional</code> 类既可以含有对象也可以为空</p><h2 id="一、常用方法" tabindex="-1"><a class="header-anchor" href="#一、常用方法"><span>一、常用方法</span></a></h2><h3 id="_1、optional-of-t-t" tabindex="-1"><a class="header-anchor" href="#_1、optional-of-t-t"><span>1、Optional.of(T t)</span></a></h3><p>创建一个 <code>Optional</code> 对象，参数必须非空，否则<code>of()</code> 方法会抛出 <code>NullPointerException</code></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Optional</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">User</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&gt; </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">opt</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Optional</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">of</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(user);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2、optional-empty" tabindex="-1"><a class="header-anchor" href="#_2、optional-empty"><span>2、Optional.empty()</span></a></h3><p>创建一个空的 <code>Optional</code> 实例</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Optional</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">User</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&gt; </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">emptyOpt</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Optional</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">empty</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3、optional-ofnullable-t-t" tabindex="-1"><a class="header-anchor" href="#_3、optional-ofnullable-t-t"><span>3、Optional.ofNullable(T t)</span></a></h3><p>创建一个 <code>Optional</code> 对象，如果参数 <code>t</code> 为非空，返回 <code>Optional</code> 描述的指定值，否则返回空的 <code>Optional</code></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Optional</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">User</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&gt; </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">opt</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Optional</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">ofNullable</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(user);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>of()</code> 和 <code>ofNullable()</code>区别</p><ul><li>如果<code>of()</code> 方法的参数值为 <code>null</code>，会抛出 <code>NullPointerException</code>，并没有完全摆脱 <code>NullPointerException</code>。因此，你【应该明确对象不为 <code>null</code> 的时候使用 <code>of()</code>】</li><li>如果对象即【可能是 <code>null</code> 也可能是非 <code>null</code>】，你就应该使用 <code>ofNullable()</code> 方法</li></ul></div><h3 id="_4、ispresent" tabindex="-1"><a class="header-anchor" href="#_4、ispresent"><span>4、isPresent()</span></a></h3><p>如果值存在则方法会返回 <code>true</code>，否则返回 <code>false</code></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">User</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> user</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#C586C0;--shiki-dark:#C586C0;">new</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> User</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;zlw@gmail.com&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;1234&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Optional</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">User</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&gt; </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">opt</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Optional</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">ofNullable</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(user);</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">opt</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">isPresent</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(); </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果值存在则使用该值调用 <code>consumer</code> , 否则不做任何事情</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">User</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> user</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#C586C0;--shiki-dark:#C586C0;">new</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> User</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;zlw@gmail.com&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;1234&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Optional</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">User</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&gt; </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">opt</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Optional</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">ofNullable</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(user);</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">opt</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">ifPresent</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">( u </span><span style="color:#569CD6;--shiki-dark:#569CD6;">-&gt;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> System</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">out</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">println</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">u</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getEmail</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">()));</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5、get" tabindex="-1"><a class="header-anchor" href="#_5、get"><span>5、get()</span></a></h3><p>如果在这个 <code>Optional</code> 中包含这个值，返回值，否则抛出异常：<code>NoSuchElementException</code></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Optional</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">User</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&gt; </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">emptyOpt</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Optional</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">empty</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">emptyOpt</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">get</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(); </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// NoSuchElementException</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6、orelse-t-other" tabindex="-1"><a class="header-anchor" href="#_6、orelse-t-other"><span>6、orElse(T other)</span></a></h3><p>如果存在该值，返回值， 否则返回 <code>other</code></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">User</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> user</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#569CD6;--shiki-dark:#569CD6;">null</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Optional</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">User</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&gt; </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">opt</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Optional</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">ofNullable</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(user).</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">orElse</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#C586C0;--shiki-dark:#C586C0;">new</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> User</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">()); </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 返回 new User()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">User</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> user</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#C586C0;--shiki-dark:#C586C0;">new</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> User</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;zlw@gmail.com&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;1234567&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Optional</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">User</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&gt; </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">opt</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Optional</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">ofNullable</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(user).</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">orElse</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(user2);</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 返回User</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7、orelseget-supplier-extends-t-other" tabindex="-1"><a class="header-anchor" href="#_7、orelseget-supplier-extends-t-other"><span>7、orElseGet(Supplier&lt;? extends T&gt; other)</span></a></h3><p>如果存在该值，返回值， 否则触发 <code>other</code>，并返回 <code>other</code> 调用的结果。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">User</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> user</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#569CD6;--shiki-dark:#569CD6;">null</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 因为user为null，所以会执行 createNewUser 方法，将返回值返回</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">User</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> result</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Optional</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">ofNullable</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(user).</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">orElseGet</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(() </span><span style="color:#569CD6;--shiki-dark:#569CD6;">-&gt;</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> createNewUser</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">User</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> user</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#C586C0;--shiki-dark:#C586C0;">new</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> User</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;zlw@gmail.com&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;1234&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 因为user不为null，所以【不会】执行 createNewUser 方法，返回 User</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">User</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> result</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Optional</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">ofNullable</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(user).</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">orElseGet</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(() </span><span style="color:#569CD6;--shiki-dark:#569CD6;">-&gt;</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> createNewUser</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">());</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>orElse</code>与<code>orElseGet</code>区别</p><p>两个方法都会返回非空值，区别在于:</p><ul><li><code>orElse</code>方法：在值不为空的情况下仍然会执行后面传的参数</li><li><code>orElseGet</code>方法：在值不为空的情况下，不会执行后面传的参数，所以性能更高一些</li></ul></div><h3 id="_8、orelsethrow-supplier-extends-x-exceptionsupplier" tabindex="-1"><a class="header-anchor" href="#_8、orelsethrow-supplier-extends-x-exceptionsupplier"><span>8、orElseThrow(Supplier&lt;? extends X&gt; exceptionSupplier)</span></a></h3><p>如果存在该值，返回包含的值，否则抛出由 <code>Supplier</code> 继承的异常</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">User</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> user</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#569CD6;--shiki-dark:#569CD6;">null</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 值为空，则抛出指定异常</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">User</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> result</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Optional</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">ofNullable</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(user)</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">      .</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">orElseThrow</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">( () </span><span style="color:#569CD6;--shiki-dark:#569CD6;">-&gt;</span><span style="color:#C586C0;--shiki-dark:#C586C0;"> new</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> IllegalArgumentException</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">());</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、常用组合" tabindex="-1"><a class="header-anchor" href="#二、常用组合"><span>二、常用组合</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// userMapper.selectList(null)结果为null, 则创建一个List</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">List</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">User</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&gt; </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">userList</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Optional</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">ofNullable</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">userMapper</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">selectList</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">null</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)).</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">orElseGet</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(ArrayList</span><span style="color:#C586C0;--shiki-dark:#C586C0;">::new</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,34),D=[n];function o(r,p){return a(),l("div",null,D)}const d=s(i,[["render",o],["__file","Optional.html.vue"]]),k=JSON.parse('{"path":"/Use/Java/Java/Optional.html","title":"Optional","lang":"zh-CN","frontmatter":{"category":"使用篇"},"headers":[{"level":2,"title":"一、常用方法","slug":"一、常用方法","link":"#一、常用方法","children":[{"level":3,"title":"1、Optional.of(T t)","slug":"_1、optional-of-t-t","link":"#_1、optional-of-t-t","children":[]},{"level":3,"title":"2、Optional.empty()","slug":"_2、optional-empty","link":"#_2、optional-empty","children":[]},{"level":3,"title":"3、Optional.ofNullable(T t)","slug":"_3、optional-ofnullable-t-t","link":"#_3、optional-ofnullable-t-t","children":[]},{"level":3,"title":"4、isPresent()","slug":"_4、ispresent","link":"#_4、ispresent","children":[]},{"level":3,"title":"5、get()","slug":"_5、get","link":"#_5、get","children":[]},{"level":3,"title":"6、orElse(T other)","slug":"_6、orelse-t-other","link":"#_6、orelse-t-other","children":[]},{"level":3,"title":"7、orElseGet(Supplier<? extends T> other)","slug":"_7、orelseget-supplier-extends-t-other","link":"#_7、orelseget-supplier-extends-t-other","children":[]},{"level":3,"title":"8、orElseThrow(Supplier<? extends X> exceptionSupplier)","slug":"_8、orelsethrow-supplier-extends-x-exceptionsupplier","link":"#_8、orelsethrow-supplier-extends-x-exceptionsupplier","children":[]}]},{"level":2,"title":"二、常用组合","slug":"二、常用组合","link":"#二、常用组合","children":[]}],"git":{"createdTime":1708330205000,"updatedTime":1708873062000,"contributors":[{"name":"zhanglinwei","email":"3498729975@qq.com","commits":2}]},"readingTime":{"minutes":2.08,"words":624},"filePathRelative":"Use/Java/Java/Optional.md","localizedDate":"2024年2月19日"}');export{d as comp,k as data};
