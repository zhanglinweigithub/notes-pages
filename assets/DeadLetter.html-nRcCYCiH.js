import{_ as d,r as o,o as c,c as t,e as s,f as a,g as n,w as i,a as r}from"./app-Vg0IViah.js";const k="/notes-pages/assets/image-20210718174506856-CmXNSEgC.png",C="/notes-pages/assets/image-20210821073801398-BXebnm_u.png",h="/notes-pages/assets/image-20210718182643311-BpWTxnlq.png",y="/notes-pages/assets/image-20210718192529342-CMpLnQfW.png",u={},A=r('<h1 id="死信交换机-延迟队列" tabindex="-1"><a class="header-anchor" href="#死信交换机-延迟队列"><span>死信交换机（延迟队列）</span></a></h1><div class="hint-container tip"><p class="hint-container-title">提示</p><p>利用<code>TTL</code>结合死信交换机可以实现，延迟队列（Delay Queue）模式</p></div><p>当一个队列中的消息满足下列情况之一时，可以成为死信（dead letter）：</p><ul><li>消费者使用<code>basic.reject</code>或 <code>basic.nack</code>声明消费失败，并且消息的<code>requeue</code>参数设置为<code>false</code></li><li>消息是一个过期消息，超时无人消费</li><li>要投递的队列消息满了，无法投递</li></ul><p>如果这个包含死信的队列配置了<code>dead-letter-exchange</code>属性，指定了一个交换机，那么队列中的死信就会投递到这个交换机中，而这个交换机称为<strong>死信交换机</strong>（Dead Letter Exchange，简称DLX）。</p><ol><li>一个消息被消费者拒绝了，变成了死信</li><li>因为<code>simple.queue</code>绑定了死信交换机 <code>dl.direct</code>，因此死信会投递给这个交换机</li><li>这个死信交换机也绑定了一个队列，则消息最终会进入这个存放死信的队列</li></ol><figure><img src="'+k+'" alt="image-20210718174506856" tabindex="0" loading="lazy"><figcaption>image-20210718174506856</figcaption></figure><p>另外，队列将死信投递给死信交换机时，必须知道两个信息：</p><ul><li>死信交换机名称</li><li>死信交换机与死信队列绑定的<code>RoutingKey</code></li></ul><p>这样才能确保投递的消息能到达死信交换机，并且正确的路由到死信队列。</p><figure><img src="'+C+`" alt="image-20210821073801398" tabindex="0" loading="lazy"><figcaption>image-20210821073801398</figcaption></figure><h2 id="一、利用死信交换机接收死信" tabindex="-1"><a class="header-anchor" href="#一、利用死信交换机接收死信"><span>一、利用死信交换机接收死信</span></a></h2><p>在失败重试策略中，默认的<code>RejectAndDontRequeueRecoverer</code>会在本地重试次数耗尽后，发送<code>reject</code>给<code>RabbitMQ</code>，消息变成死信，被丢弃。</p><p>我们可以给<code>simple.queue</code>添加一个死信交换机，给死信交换机绑定一个队列。这样消息变成死信后也不会丢弃，而是最终投递到死信交换机，路由到与死信交换机绑定的队列。</p><p><strong>消费端</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 声明普通的 simple.queue队列，并且为其指定死信交换机：dl.direct</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Bean</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> Queue</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> simpleQueue2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(){</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    return</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> QueueBuilder</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">durable</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;simple.queue&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 指定队列名称，并持久化</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">        .</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">deadLetterExchange</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;dl.direct&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 指定死信交换机</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">        .</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">build</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 声明死信交换机 dl.direct</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Bean</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> DirectExchange</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> dlExchange</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(){</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    return</span><span style="color:#C586C0;--shiki-dark:#C586C0;"> new</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> DirectExchange</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;dl.direct&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#569CD6;--shiki-dark:#569CD6;">true</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#569CD6;--shiki-dark:#569CD6;">false</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 声明存储死信的队列 dl.queue</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Bean</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> Queue</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> dlQueue</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(){</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    return</span><span style="color:#C586C0;--shiki-dark:#C586C0;"> new</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> Queue</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;dl.queue&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#569CD6;--shiki-dark:#569CD6;">true</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 将死信队列 与 死信交换机绑定</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Bean</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> Binding</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> dlBinding</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(){</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    return</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> BindingBuilder</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">bind</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">dlQueue</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">()).</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">to</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">dlExchange</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">()).</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">with</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;simple&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、接收超时死信的死信交换机" tabindex="-1"><a class="header-anchor" href="#二、接收超时死信的死信交换机"><span>二、接收超时死信的死信交换机</span></a></h2><p>一个队列中的消息如果超时未消费，则会变为死信，超时分为两种情况：</p><ul><li>消息所在的队列设置了超时时间</li><li>消息本身设置了超时时间</li></ul><figure><img src="`+h+`" alt="image-20210718182643311" tabindex="0" loading="lazy"><figcaption>image-20210718182643311</figcaption></figure><p><strong>消费端</strong></p><p>声明 死信交换机、死信队列</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">RabbitListener</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(bindings = @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">QueueBinding</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    value = @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Queue</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(name = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;dl.ttl.queue&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, durable = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;true&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    exchange = @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Exchange</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(name = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;dl.ttl.direct&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    key = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;ttl&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> listenDlQueue</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">String</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> msg){</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">info</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;接收到 dl.ttl.queue的延迟消息：{}&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, msg);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>声明一个队列并指定<code>ttl</code>，并指定将死信转发到的死信交换机</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Bean</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> Queue</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> ttlQueue</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(){</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    return</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> QueueBuilder</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">durable</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;ttl.queue&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 指定队列名称，并持久化</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">        .</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">ttl</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">10000</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 设置队列的超时时间，10秒</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">        .</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">deadLetterExchange</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;dl.ttl.direct&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 指定死信交换机</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">        .</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">build</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>声明交换机，并与<code>ttl</code>队列绑定</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Bean</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> DirectExchange</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> ttlExchange</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(){</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    return</span><span style="color:#C586C0;--shiki-dark:#C586C0;"> new</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> DirectExchange</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;ttl.direct&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Bean</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> Binding</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> ttlBinding</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(){</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    return</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> BindingBuilder</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">bind</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">ttlQueue</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">()).</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">to</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">ttlExchange</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">()).</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">with</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;ttl&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>发送消息，但是不要指定<code>TTL</code>：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Test</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> testTTLQueue</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 创建消息</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">    String</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> message</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;hello, ttl queue&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 消息ID，需要封装到CorrelationData中</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">    CorrelationData</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> correlationData</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#C586C0;--shiki-dark:#C586C0;">new</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> CorrelationData</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">UUID</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">randomUUID</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">().</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">toString</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">());</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 发送消息</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    rabbitTemplate</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">convertAndSend</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;ttl.direct&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;ttl&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, message, correlationData);</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 记录日志</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">debug</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;发送消息成功&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>10秒后，因为没有消费者与<code>ttl.queue</code>队列绑定，所以消息会被转发到死信交换机，然后路由到死信队列</p><p>在发送消息时，也可以指定<code>TTL</code></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Test</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> testTTLMsg</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 创建消息</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">    Message</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> message</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">MessageBuilder</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">        .</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">withBody</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;hello, ttl message&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getBytes</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">StandardCharsets</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">UTF_8</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">        .</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">setExpiration</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;5000&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">        .</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">build</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 消息ID，需要封装到CorrelationData中</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">    CorrelationData</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> correlationData</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#C586C0;--shiki-dark:#C586C0;">new</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> CorrelationData</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">UUID</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">randomUUID</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">().</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">toString</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">());</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 发送消息</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    rabbitTemplate</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">convertAndSend</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;ttl.direct&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;ttl&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, message, correlationData);</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">debug</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;发送消息成功&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>当队列、消息都设置了<code>TTL</code>时，任意一个到期就会成为死信</p></div><h2 id="三、安装delayexchange插件" tabindex="-1"><a class="header-anchor" href="#三、安装delayexchange插件"><span>三、安装DelayExchange插件</span></a></h2>`,34),E={href:"https://blog.rabbitmq.com/posts/2015/04/scheduling-messages-with-rabbitmq",target:"_blank",rel:"noopener noreferrer"},v=s("code",null,"RabbitMQ",-1),b={href:"https://www.rabbitmq.com/community-plugins.html",target:"_blank",rel:"noopener noreferrer"},m=s("code",null,"GitHub",-1),g={href:"https://github.com/rabbitmq/rabbitmq-delayed-message-exchange/releases/tag/3.8.9",target:"_blank",rel:"noopener noreferrer"},B=r('<figure><img src="'+y+'" alt="image-20210718192529342" tabindex="0" loading="lazy"><figcaption>image-20210718192529342</figcaption></figure><h2 id="四、使用delayexchange插件" tabindex="-1"><a class="header-anchor" href="#四、使用delayexchange插件"><span>四、使用DelayExchange插件</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>声明一个交换机，交换机的类型可以是任意类型，只需要设定<code>delayed</code>属性为<code>true</code>即可，然后声明队列与其绑定即可</p></div><p><code>DelayExchange</code>需要将一个交换机声明为<code>delayed</code>类型。当我们发送消息到<code>delayExchange</code>时，流程如下：</p><ul><li>接收消息</li><li>判断消息是否具备x-delay属性</li><li>如果有<code>x-delay</code>属性，说明是延迟消息，持久化到硬盘，读取<code>x-delay</code>值，作为延迟时间</li><li>返回<code>routing not found</code>结果给消息发送者</li><li><code>x-delay</code>时间到期后，重新投递消息到指定队列</li></ul><h3 id="_1、声明delayexchange交换机" tabindex="-1"><a class="header-anchor" href="#_1、声明delayexchange交换机"><span>1、声明DelayExchange交换机</span></a></h3><p><strong>消费端</strong></p>',7),x=s("div",{class:"language-java line-numbers-mode","data-ext":"java","data-title":"java"},[s("pre",{class:"shiki shiki-themes dark-plus dark-plus",style:{"background-color":"#1E1E1E","--shiki-dark-bg":"#1E1E1E",color:"#D4D4D4","--shiki-dark":"#D4D4D4"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"@"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"RabbitListener"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(bindings = @"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"QueueBinding"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"value = @"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"Queue"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(name = "),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"delay.queue"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},", durable = "),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"true"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"),")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"exchange = @"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"Exchange"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    	name = "),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"delay.direct"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},",")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    	delayed = "),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"true"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},", "),s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"// 注意这里")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    	key = "),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"delay"')]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"	)")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},")")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"public"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}}," void"),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}}," listenDelayedQueue"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"("),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"String"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}}," msg){")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}},"	log"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"."),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}},"info"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"("),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"接收到delay.queue的延迟消息:{}"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"，msg);")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"}")]),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),q=s("div",{class:"language-java line-numbers-mode","data-ext":"java","data-title":"java"},[s("pre",{class:"shiki shiki-themes dark-plus dark-plus",style:{"background-color":"#1E1E1E","--shiki-dark-bg":"#1E1E1E",color:"#D4D4D4","--shiki-dark":"#D4D4D4"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"@"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"Bean")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"public"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}}," DirectExchange"),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}}," delayedExchange"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(){")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0","--shiki-dark":"#C586C0"}},"	return"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}}," ExchangeBuilder")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"			."),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}},"directExchange"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"("),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"delay.direct"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},") "),s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"//指定交换机类型和名称")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"        	."),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}},"delayed"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"() "),s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"// 设置delay属性为 true")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"        	."),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}},"durable"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"("),s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"true"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},") "),s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"// 持久化")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"        	."),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}},"build"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"();")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"}")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"@"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"Bean")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"public"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}}," Queue"),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}}," delayedQueue"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(){")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0","--shiki-dark":"#C586C0"}},"	return"),s("span",{style:{color:"#C586C0","--shiki-dark":"#C586C0"}}," new"),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}}," Queue"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"( name"),s("span",{style:{color:"#C586C0","--shiki-dark":"#C586C0"}},":"),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},' "delay.queue"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},");")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"}")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"@"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"Bean")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"public"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}}," Binding"),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}}," delayedBinding"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(){")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0","--shiki-dark":"#C586C0"}},"	return"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}}," BindingBuilder")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"        ."),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}},"bind"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"("),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}},"delayedQueue"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"())")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"        ."),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}},"to"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"("),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}},"delayedExchange"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"())")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"        ."),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}},"with"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(routingKey"),s("span",{style:{color:"#C586C0","--shiki-dark":"#C586C0"}},":"),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},' "delay"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},");")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"}")]),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),_=r(`<h3 id="_2、发送消息" tabindex="-1"><a class="header-anchor" href="#_2、发送消息"><span>2、发送消息</span></a></h3><p>发送消息时，一定要携带<code>x-delay</code>属性，指定延迟的时间：</p><p><strong>发送端</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Test</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> testDelayedMsg</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">	</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">	Message</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> message</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">MessageBuilder</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">		.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">withBody</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;hello, delayed message&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getBytes</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">StandardCharsets</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">UTF_8</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">        .</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">setHeader</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;x-delay&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">，</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">10000</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 注意这里</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">        .</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">build</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">	</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">	CorrelationData</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> correlationData</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#C586C0;--shiki-dark:#C586C0;">new</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> CorrelationData</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">UUID</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">randomUUID</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">().</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">toString</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">());</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">	rabbitTemplate</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">convertAndSend</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;delay.direct&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;delay&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, message, correlationData); </span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function F(f,j){const l=o("ExternalLinkIcon"),p=o("CodeTabs");return c(),t("div",null,[A,s("p",null,[a("使用方式可以参考官网地址："),s("a",E,[a("https://blog.rabbitmq.com/posts/2015/04/scheduling-messages-with-rabbitmq"),n(l)])]),s("p",null,[v,a("官方的插件社区列表页面："),s("a",b,[a("https://www.rabbitmq.com/community-plugins.html"),n(l)])]),s("p",null,[m,a("下载："),s("a",g,[a("https://github.com/rabbitmq/rabbitmq-delayed-message-exchange/releases/tag/3.8.9"),n(l)])]),B,n(p,{id:"196",data:[{id:"基于注解"},{id:"@Bean"}]},{title0:i(({value:D,isActive:e})=>[a("基于注解")]),title1:i(({value:D,isActive:e})=>[a("@Bean")]),tab0:i(({value:D,isActive:e})=>[x]),tab1:i(({value:D,isActive:e})=>[q]),_:1}),_])}const T=d(u,[["render",F],["__file","DeadLetter.html.vue"]]),w=JSON.parse('{"path":"/Use/Java/RabbitMQ/DeadLetter.html","title":"死信交换机（延迟队列）","lang":"zh-CN","frontmatter":{"category":"使用篇"},"headers":[{"level":2,"title":"一、利用死信交换机接收死信","slug":"一、利用死信交换机接收死信","link":"#一、利用死信交换机接收死信","children":[]},{"level":2,"title":"二、接收超时死信的死信交换机","slug":"二、接收超时死信的死信交换机","link":"#二、接收超时死信的死信交换机","children":[]},{"level":2,"title":"三、安装DelayExchange插件","slug":"三、安装delayexchange插件","link":"#三、安装delayexchange插件","children":[]},{"level":2,"title":"四、使用DelayExchange插件","slug":"四、使用delayexchange插件","link":"#四、使用delayexchange插件","children":[{"level":3,"title":"1、声明DelayExchange交换机","slug":"_1、声明delayexchange交换机","link":"#_1、声明delayexchange交换机","children":[]},{"level":3,"title":"2、发送消息","slug":"_2、发送消息","link":"#_2、发送消息","children":[]}]}],"git":{"createdTime":1708330205000,"updatedTime":1708873062000,"contributors":[{"name":"zhanglinwei","email":"3498729975@qq.com","commits":2}]},"readingTime":{"minutes":4.64,"words":1391},"filePathRelative":"Use/Java/RabbitMQ/DeadLetter.md","localizedDate":"2024年2月19日"}');export{T as comp,w as data};
