import{_ as o,r,o as D,c as t,g as c,w as e,a as d,f as a,e as s}from"./app-Vg0IViah.js";const k="/notes-pages/assets/image-20210718194040498-CRwsc403.png",u={},p=d('<h1 id="惰性队列" tabindex="-1"><a class="header-anchor" href="#惰性队列"><span>惰性队列</span></a></h1><p>当生产者发送消息的速度超过了消费者处理消息的速度，就会导致队列中的消息堆积，直到队列存储消息达到上限。之后发送的消息就会成为死信，可能会被丢弃，这就是消息堆积问题。</p><figure><img src="'+k+`" alt="image-20210718194040498" tabindex="0" loading="lazy"><figcaption>image-20210718194040498</figcaption></figure><p>解决消息堆积有两种思路：</p><ul><li>增加更多消费者，提高消费速度。也就是我们之前说的<code>work queue</code>模式</li><li>扩大队列容积，提高堆积上限</li></ul><p>要提升队列容积，把消息保存在内存中显然是不行的。</p><p>惰性队列的特征如下：</p><ul><li>接收到消息后直接存入磁盘而非内存</li><li>消费者要消费消息时才会从磁盘中读取并加载到内存</li><li>支持数百万条的消息存储</li></ul><h2 id="一、基于命令行设置lazy-queue" tabindex="-1"><a class="header-anchor" href="#一、基于命令行设置lazy-queue"><span>一、基于命令行设置lazy-queue</span></a></h2><p>要设置一个队列为惰性队列，只需要在声明队列时，指定<code>x-queue-mode</code>属性为<code>lazy</code>即可</p><p>可以通过命令行将一个运行中的队列修改为惰性队列：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">rabbitmqctl</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> set_policy</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> Lazy</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &quot;^lazy-queue$&quot;</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &#39;{&quot;queue-mode&quot;:&quot;lazy&quot;}&#39;</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> --apply-to</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> queues</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>rabbitmqctl</code> ：<code>RabbitMQ</code>的命令行工具</li><li><code>set_policy</code> ：添加一个策略</li><li><code>Lazy</code> ：策略名称，可以自定义</li><li><code>&quot;^lazy-queue$&quot;</code> ：用正则表达式匹配队列的名字</li><li><code>&#39;{&quot;queue-mode&quot;:&quot;lazy&quot;}&#39;</code> ：设置队列模式为<code>lazy</code>模式</li><li><code>--apply-to queues </code>：策略的作用对象，是所有的队列</li></ul><h2 id="二、java声明lazy-queue" tabindex="-1"><a class="header-anchor" href="#二、java声明lazy-queue"><span>二、Java声明lazy-queue</span></a></h2><p><strong>消费端</strong></p>`,15),h=s("div",{class:"language-java line-numbers-mode","data-ext":"java","data-title":"java"},[s("pre",{class:"shiki shiki-themes dark-plus dark-plus",style:{"background-color":"#1E1E1E","--shiki-dark-bg":"#1E1E1E",color:"#D4D4D4","--shiki-dark":"#D4D4D4"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"@"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"RabbitListener"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(queuesToDeclare = @"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"Queue"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"	name = "),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"lazy.queue"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},", durable = "),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"true"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},",")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"	arguments = @"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"Argument"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(name = "),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"x-queue-mode"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},", value = "),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"lazy"'),s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}}," // 注意这里")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"))")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"public"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}}," void"),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}}," listenLazyQueue"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"("),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"String"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}}," msg){")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}},"	log"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"."),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}},"info"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"("),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"接收到 lazy.queue的消息:{}"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"，msg);")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"}")]),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),y=s("div",{class:"language-java line-numbers-mode","data-ext":"java","data-title":"java"},[s("pre",{class:"shiki shiki-themes dark-plus dark-plus",style:{"background-color":"#1E1E1E","--shiki-dark-bg":"#1E1E1E",color:"#D4D4D4","--shiki-dark":"#D4D4D4"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"@"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"Bean")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"public"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}}," Queue"),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}}," lazyQueue"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"(){")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0","--shiki-dark":"#C586C0"}},"	return"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}}," QueueBuilder")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"		."),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}},"durable"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"("),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"lazy.queue"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},")")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"		."),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}},"lazy"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"() "),s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"// 开启x-queue-mode为lazy")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"        ."),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}},"build"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"();")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"}")]),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1);function C(m,E){const n=r("CodeTabs");return D(),t("div",null,[p,c(n,{id:"95",data:[{id:"基于注解"},{id:"基于@Bean"}]},{title0:e(({value:l,isActive:i})=>[a("基于注解")]),title1:e(({value:l,isActive:i})=>[a("基于@Bean")]),tab0:e(({value:l,isActive:i})=>[h]),tab1:e(({value:l,isActive:i})=>[y]),_:1})])}const v=o(u,[["render",C],["__file","LazyQueue.html.vue"]]),q=JSON.parse('{"path":"/Use/Java/RabbitMQ/LazyQueue.html","title":"惰性队列","lang":"zh-CN","frontmatter":{"category":"使用篇"},"headers":[{"level":2,"title":"一、基于命令行设置lazy-queue","slug":"一、基于命令行设置lazy-queue","link":"#一、基于命令行设置lazy-queue","children":[]},{"level":2,"title":"二、Java声明lazy-queue","slug":"二、java声明lazy-queue","link":"#二、java声明lazy-queue","children":[]}],"git":{"createdTime":1708330205000,"updatedTime":1708873062000,"contributors":[{"name":"zhanglinwei","email":"3498729975@qq.com","commits":2}]},"readingTime":{"minutes":1.46,"words":438},"filePathRelative":"Use/Java/RabbitMQ/LazyQueue.md","localizedDate":"2024年2月19日"}');export{v as comp,q as data};
