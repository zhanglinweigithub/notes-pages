import{_ as s,o as a,c as n,a as i}from"./app-Vg0IViah.js";const l={},D=i(`<h1 id="变量-数据类型" tabindex="-1"><a class="header-anchor" href="#变量-数据类型"><span>变量&amp;数据类型</span></a></h1><h2 id="一、变量" tabindex="-1"><a class="header-anchor" href="#一、变量"><span>一、变量</span></a></h2><h3 id="_1、let" tabindex="-1"><a class="header-anchor" href="#_1、let"><span>1、let</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> 变量名</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">值</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>let 声明的变量可以被多次赋值，例如</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">100</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;  </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 初始值是 100</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">200</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;	  </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// ok, 被重新赋值为 200</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>允许声明和赋值同时进行</li><li>不允许重复声明</li><li>允许同时声明多个变量并赋值</li><li><code>JavaScript</code> 中内置的一些关键字不能被当做变量名</li></ul><h3 id="_2、const" tabindex="-1"><a class="header-anchor" href="#_2、const"><span>2、const</span></a></h3><ul><li>const 修饰的叫常量，只能赋值一次</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">const</span><span style="color:#4FC1FF;--shiki-dark:#4FC1FF;"> b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">300</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">; </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 初始值是 300</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">400</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;	   </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// error, 不能再次赋值</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>const 并不意味着它引用的内容不可修改，例如</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">const</span><span style="color:#4FC1FF;--shiki-dark:#4FC1FF;"> c</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = [</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">];</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">c</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">] = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">4</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">; 	        </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// ok, 数组内容被修改成 [1,2,4]</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">c</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = [</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">5</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">6</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">];			</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// error, 不能再次赋值</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、var" tabindex="-1"><a class="header-anchor" href="#_3、var"><span>3、var</span></a></h3><p>var 声明的变量可以被多次赋值，例如</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">var</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> f</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">100</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">f</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">200</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>允许声明和赋值同时进行</li><li>允许重复声明</li><li>允许同时声明多个变量并赋值</li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p><strong>能用 <code>let</code> 就不要用 <code>var</code></strong></p></div><h3 id="_4、变量名命名规则" tabindex="-1"><a class="header-anchor" href="#_4、变量名命名规则"><span>4、变量名命名规则</span></a></h3><p>关于变量的名称（标识符）有一系列的规则需要遵守：</p><ol><li>只能是字母、数字、下划线、<code>$</code>，且不能能数字开头</li><li>字母区分大小写，如 <code>Age</code> 和 <code>age</code> 是不同的变量</li><li><code>JavaScript</code> 内部已占用于单词（关键字或保留字）不允许使用</li><li>尽量保证变量具有一定的语义，见名知意</li></ol><h2 id="二、数据类型" tabindex="-1"><a class="header-anchor" href="#二、数据类型"><span>二、数据类型</span></a></h2><h3 id="_1、undefined-和-null" tabindex="-1"><a class="header-anchor" href="#_1、undefined-和-null"><span>1、undefined 和 null</span></a></h3><ul><li>执行表达式或函数，没有返回结果，出现 <code>undefined</code></li><li>访问数组不存在的元素，访问对象不存在的属性，出现 <code>undefined</code></li><li>定义变量，没有初始化，出现 <code>undefined</code></li></ul><p>例</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);  	</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 函数没有返回值, 结果是  undefined</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">10</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;		 	</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 表达式没有返回值, 结果是 undefined</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = [</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">];</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">10</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">]); </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 数组未定义元素是 undefined</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> c</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;name&quot;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">:</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;张三&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">};</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">c</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">age</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">); </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 对象未定义属性是 undefined</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> d</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">d</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);		</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 变量未初始化是 undefined</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>二者共同点</p><ul><li>都没有属性、方法</li><li>二者合称 <code>Nullish</code></li></ul><p>二者区别</p><ul><li><code>undefined</code> 由 js 产生</li><li><code>null</code> 由程序员提供</li></ul><h3 id="_2、string" tabindex="-1"><a class="header-anchor" href="#_2、string"><span>2、string</span></a></h3><p><code>js</code> 字符串三种写法</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;hello&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;  </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 双引号</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;world&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;  </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 单引号</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> c</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">\`hello\`</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;  </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 反引号</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>模板字符串（Template strings）</p><p>需求：拼接 URI 的请求参数，如</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span>/test?name=zhang&amp;age=18</span></span>
<span class="line"><span>/test?name=li&amp;age=20</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>传统方法拼接</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = ; </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// zhang li ...</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> age</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = ; </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 18 20 ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> uri</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;/test?name=&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;&amp;age=&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">age</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>模板字符串方式</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = ; </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// zhang li ...</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> age</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = ; </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 18 20 ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> uri</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">\`/test?name=</span><span style="color:#569CD6;--shiki-dark:#569CD6;">\${</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#569CD6;--shiki-dark:#569CD6;">}</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&amp;age=</span><span style="color:#569CD6;--shiki-dark:#569CD6;">\${</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">age</span><span style="color:#569CD6;--shiki-dark:#569CD6;">}</span><span style="color:#CE9178;--shiki-dark:#CE9178;">\`</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、number-和-bigint" tabindex="-1"><a class="header-anchor" href="#_3、number-和-bigint"><span>3、number 和 bigint</span></a></h3><p><strong>number</strong></p><p><code>number</code> 类型标识的是双精度浮动小数，例如</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">10</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> / </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;   </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 结果 3.3333333333333335</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>既然是浮点小数，那么可以除零</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">10</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> / </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">0</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;	  </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 结果 Infinity 正无穷大</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">-</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">10</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> / </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">0</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;  </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 结果 -Infinity 负无穷大</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>浮点小数都有运算精度问题，例如</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2.0</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> - </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1.1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">; </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 结果 0.8999999999999999</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>字符串转数字</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">parseInt</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;10&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">); 	</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 结果是数字 10 </span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">parseInt</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;10.5&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);	</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 结果是数字 10, 去除了小数部分</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">parseInt</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;10&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) / </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">; </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 结果仍视为 number 浮点数, 因此结果为 3.3333333333333335</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;10&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> - </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">0</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">; </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 结果为数字 10 ，由JavaScript进行了类型转换</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">parseInt</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;abc&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);	</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 转换失败，结果是特殊值 NaN (Not a Number)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>bigint</strong></p><p>要表示真正的整数，需要用 bigint，数字的结尾用 n 表示它是一个 bigint 类型</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">10</span><span style="color:#569CD6;--shiki-dark:#569CD6;">n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> / </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">3</span><span style="color:#569CD6;--shiki-dark:#569CD6;">n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;			</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 结果 3n, 按整数除法处理</span></span>
<span class="line"><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">10</span><span style="color:#569CD6;--shiki-dark:#569CD6;">n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> / </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">0</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;			</span><span style="color:#6A9955;--shiki-dark:#6A9955;">//会报错</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、boolean" tabindex="-1"><a class="header-anchor" href="#_4、boolean"><span>4、boolean</span></a></h3><p>在 <code>js</code> 中，并不是 <code>boolean</code> 才能用于条件判断，你可以在 <code>if</code> 语句中使用【数字】、【字符串】... 作为判断条件</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">if</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) { </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// true</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;进入了&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这时就有一个规则，当需要条件判断时，这个值被当作 <code>true</code> 还是 <code>false</code>，当作 <code>true</code> 的值归类为 <code>truthy</code>，当作 <code>false</code> 的值归类为 <code>falsy</code></p><p>下面值都是 <code>falsy</code></p><ul><li><code>false</code></li><li><code>Nullish (null, undefined)</code></li><li><code>0, 0n, NaN</code></li><li><code>&quot;&quot; &#39;&#39; \`\`</code> 即长度为零的字符串</li></ul><p>剩余的值绝大部分都是 <code>truthy</code></p><p>有几个容易被当作 <code>falsy</code> 实际是 <code>truthy</code> 的</p><ul><li><code>&quot;false&quot;, &quot;0&quot;</code> 即字符串的 <code>false</code> 和 字符串的零</li><li><code>[]</code> 空数组</li><li><code>{}</code> 空对象</li></ul><h3 id="_5、function" tabindex="-1"><a class="header-anchor" href="#_5、function"><span>5、Function</span></a></h3><h4 id="定义函数" tabindex="-1"><a class="header-anchor" href="#定义函数"><span>定义函数</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> 函数名</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">参数</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 函数体</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    return</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> 结果</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> add</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    return</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="调用函数" tabindex="-1"><a class="header-anchor" href="#调用函数"><span>调用函数</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">函数名</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">实参</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">add</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);     </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 返回 3</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>js</code> 中的函数调用特点：对参数的<strong>类型</strong>和<strong>个数</strong>都没有限制，例如</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">add</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;a&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;b&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);  </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 返回 ab</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">add</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">4</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">5</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">6</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);   </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 返回 9, 第三个参数没有被用到, 不会报错</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">add</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);			</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 返回 NaN, 这时 b 没有定义是 undefined, undefined 做数学运算结果就是 NaN</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="默认参数" tabindex="-1"><a class="header-anchor" href="#默认参数"><span>默认参数</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> pagination</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">page</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">size</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">10</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">page</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">size</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果只传一个参数，并且想指定这个参数传给谁，需要用<code>undefined</code></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">pagination</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">undefined</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">10</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="匿名函数" tabindex="-1"><a class="header-anchor" href="#匿名函数"><span>匿名函数</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> (</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">参数</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 函数体</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    return</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> 结果</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">){</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    return</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第一种场景：定义完毕后立刻调用</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">){</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    return</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">})(</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第二种场景：作为其它对象的方法，例如</p><p>页面有元素</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">p</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> id</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;p1&quot;</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">点我啊</span><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">p</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此元素有一个 <code>onclick</code> 方法，会在鼠标单击这个元素后被执行，<code>onclick</code> 方法刚开始是 <code>null</code>，需要赋值后才能使用</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">document</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;p1&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">).</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">onclick</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = (</span><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(){</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;鼠标单击了...&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="箭头函数" tabindex="-1"><a class="header-anchor" href="#箭头函数"><span>箭头函数</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">参数</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="color:#569CD6;--shiki-dark:#569CD6;">=&gt;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 函数体</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    return</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> 结果</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>如果没有参数，() 还是要保留</li><li>如果只有一个参数，() 可以省略</li><li>如果函数体内只有一行代码，{} 可以省略</li><li>如果这一行代码就是结果，return 可以省略</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">document</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;p1&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">).</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">onclick</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = () </span><span style="color:#569CD6;--shiki-dark:#569CD6;">=&gt;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">  console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;aa&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="函数式对象" tabindex="-1"><a class="header-anchor" href="#函数式对象"><span>函数式对象</span></a></h4><p>以下形式在 <code>js</code> 中非常常见！</p><ol><li>可以参与赋值</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> abc</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;bb&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">document</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;p1&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">).</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">onclick</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">abc</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>有属性、有方法，执行 <code>console.dir(abc)</code>，输出结果如下</li></ol><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span>ƒ abc()</span></span>
<span class="line"><span>    arguments: null</span></span>
<span class="line"><span>    caller: null</span></span>
<span class="line"><span>    length: 0</span></span>
<span class="line"><span>    name: &quot;abc&quot;</span></span>
<span class="line"><span>    ➡prototype: {constructor: ƒ}</span></span>
<span class="line"><span>    [[FunctionLocation]]: VM1962:1</span></span>
<span class="line"><span>    ➡[[Prototype]]: ƒ ()</span></span>
<span class="line"><span>    ➡[[Scopes]]: Scopes[1]</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>其中带有 f 标记的是方法，不带的是属性</p></li><li><p>带有 ➡ 符号的可以继续展开，限于篇幅省略了</p></li><li><p>带有 <code>[[ ]]</code> 的是内置属性，不能访问，只能查看</p></li><li><p>相对重要的是 <code>[[Prototype]]</code> 和 <code>[[Scopes]]</code> 会在后面继承和作用域时讲到</p></li></ul><ol start="3"><li>可以作为方法参数</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;a&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">fn</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {          </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// fn 将来可以是一个函数对象</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;b&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">    fn</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();                 </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 调用函数对象</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">//结果	b</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">//		 a</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>可以作为方法返回值</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> c</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;c&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> d</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;d&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    return</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> d</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">c</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">()()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">//结果	c</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">//		 d</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="函数作用域" tabindex="-1"><a class="header-anchor" href="#函数作用域"><span>函数作用域</span></a></h4><p>函数可以嵌套（js 代码中很常见，只是嵌套的形式更多是匿名函数，箭头函数）</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {        </span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>看下面的例子</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> c</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    var</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> z</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">30</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">var</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> x</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">10</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    var</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> y</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">20</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">        // 看这里</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">x</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">y</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">    b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>以函数为分界线划定作用域，所有函数之外是全局作用域</li><li>查找变量时，由内向外查找 <ul><li>在内层作用域找到变量，就会停止查找，不会再找外层</li><li>所有作用域都找不到变量，报错</li></ul></li><li>作用域本质上是函数对象的属性，可以通过 <code>console.dir</code> 来查看调试</li></ul><h4 id="回调函数" tabindex="-1"><a class="header-anchor" href="#回调函数"><span>回调函数</span></a></h4><p>如果将函数 A 做为参数传递给函数 B 时，我们称函数 A 为回调函数。</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">  // 声明 foo 函数</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">  function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> foo</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arg</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arg</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">  // 普通的值做为参数</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">  foo</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">10</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">  foo</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;hello world!&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">  foo</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">([</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;html&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;css&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;javascript&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">  function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> bar</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;函数也能当参数...&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">  // 函数也可以做为参数！！！！</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">  foo</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">bar</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>函数 <code>bar</code> 做参数传给了 <code>foo</code> 函数，<code>bar</code> 就是所谓的回调函数了！！！</p><p>我们回顾一下间歇函数 <code>setInterval</code></p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">	function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> fn</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;我是回调函数...&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">  // 调用定时器</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">  setInterval</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">fn</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1000</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>fn</code> 函数做为参数传给了 <code>setInterval</code> ，这便是回调函数的实际应用了，结合刚刚学习的函数表达式上述代码还有另一种更常见写法。</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">  // 调用定时器，匿名函数做为参数</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">  setInterval</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> () {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;我是回调函数...&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  }, </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1000</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结论：</p><ol><li>回调函数本质还是函数，只不过把它当成参数使用</li><li>使用匿名函数做为回调函数比较常见</li></ol><h4 id="闭包" tabindex="-1"><a class="header-anchor" href="#闭包"><span>闭包</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">var</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> x</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">10</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    var</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> y</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">20</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">x</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">y</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    return</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">()();  </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 在外面执行了 b</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>函数定义时，它的作用域已经确定好了，因此无论函数将来去了哪，都能从它的作用域中找到当时那些变量</li><li>别被概念忽悠了，闭包就是指<strong>函数能够访问自己的作用域中变量</strong></li></ul><h4 id="let、var-与作用域" tabindex="-1"><a class="header-anchor" href="#let、var-与作用域"><span>let、var 与作用域</span></a></h4><p>如果函数外层引用的是 let 变量，那么外层普通的 {} 也会作为作用域边界，最外层的 let 也占一个 script 作用域</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> x</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">10</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">; </span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">if</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">true</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> y</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">20</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">x</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">y</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">dir</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果函数外层引用的是 <code>var</code> 变量，外层普通的 {} 不会视为边界</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">var</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> x</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">10</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">; </span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">if</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">true</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    var</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> y</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">20</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">x</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">y</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">dir</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果 <code>var</code> 变量出现了重名，则他俩会被视为同一作用域中的同一个变量</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">var</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> e</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">10</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">; </span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">if</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">true</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    var</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> e</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">20</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">e</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);	</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 打印 20</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">e</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);		</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 因为是同一个变量，还是打印 20</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果是 <code>let</code>，则视为两个作用域中的两个变量</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> e</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">10</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">; </span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">if</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">true</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> e</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">20</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;	</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">e</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);	</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 打印 20</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">e</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);		</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 打印 10</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>要想里面的 <code>e</code> 和外面的 <code>e</code> 能区分开来，最简单的办法是改成 <code>let</code>，或者用函数来界定作用域范围</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">var</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> e</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">10</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">; </span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">if</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">true</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">        var</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> e</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">20</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    	console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">e</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">    b</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">e</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);	</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6、array" tabindex="-1"><a class="header-anchor" href="#_6、array"><span>6、Array</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 创建数组</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = [</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">]; </span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 获取数组元素</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">0</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">]); </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 输出 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 修改数组元素</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">array</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">0</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">] = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">5</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;		 </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 数组元素变成了 [5,2,3]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 遍历数组元素，其中 length 是数组属性，代表数组长度</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">for</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> i</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">0</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">; </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">i</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> &lt; </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">length</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">; </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">i</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">++) {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">i</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">]);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>API</strong></p><ul><li>push、shift、unshift、splice、pop</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = [</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">]; </span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">push</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">4</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);    	</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 向数组尾部(右侧)添加元素, 结果 [1,2,3,4]</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">shift</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();		</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 从数组头部(左侧)移除元素, 结果 [2,3,4]</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">unshift</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">0</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);		</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 向数组的开头添加一个或多个元素，并返回新的数组长度</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">splice</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);	</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 删除【参数1】索引位置的【参数2】个元素，结果 [2,4]</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">pop</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();			</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 删除并返回数组的最后一个元素，若该数组为空，则返回 undefined</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>join</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = [</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;a&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;b&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;c&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">join</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(); 		</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 默认使用【,】作为连接符，结果 &#39;a,b,c&#39;</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">join</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);		</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 结果 &#39;abc&#39;</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">join</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;-&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);		</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 结果 &#39;a-b-c&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>map、filter、forEach</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = [</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">6</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">i</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {   </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 代表的新旧元素之间的变换规则</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    return</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> i</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> * </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">10</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// arr.map(a) // 具名函数，结果 [10,20,30,60]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// arr.map( (i) =&gt; {return i * 10} ); // 箭头函数</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">map</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">( </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">i</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> =&gt;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> i</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> * </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">10</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> ); </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 箭头函数</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>传给 map 的函数，参数代表旧元素，返回值代表新元素</li></ul><p>map 的内部实现（伪代码）</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> map</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) { </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 参数是一个函数</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> narr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = [];</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    for</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> i</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">0</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">; </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">i</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> &lt; </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">length</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">; </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">i</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">++) {</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">        let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> o</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">i</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">]; </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 旧元素</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">        let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">a</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">o</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);   </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 新元素</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        narr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">push</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">n</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">    return</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> narr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">} </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>filter 例子</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = [</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">6</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">];</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">filter</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">( (</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">i</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span><span style="color:#569CD6;--shiki-dark:#569CD6;">=&gt;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> i</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> % </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> == </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> ); </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 结果 [1,3]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>传给 filter 的函数，参数代表旧元素，返回 true 表示要留下的元素</li></ul><p>forEach 例子</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = [</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">6</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">/*for(let i = 0; i &lt; arr.length; i++) {</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    console.log(arr[i]);</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">}*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">arr</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">forEach</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">( (</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">i</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="color:#569CD6;--shiki-dark:#569CD6;">=&gt;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">i</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) );</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>map和filter不会改变旧元素的值，而是产生新的值</p><h3 id="_7、object" tabindex="-1"><a class="header-anchor" href="#_7、object"><span>7、Object</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> obj</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    属性名:</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> 值</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    方法名:</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> 函数</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    get</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> 属性名</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {},</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    set</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> 属性名</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">新值</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {}</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例1</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> stu1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    name:</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &quot;小明&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    age:</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;"> 18</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">    study</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">:</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> function</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(){</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">this</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;爱学习&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }    </span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例2</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;小黑&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> age</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">20</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> study</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(){</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">this</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;爱学习&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> stu2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = { </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">age</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">study</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例3（重点）</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> stu3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    name:</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &quot;小白&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    age:</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;"> 18</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">    study</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(){</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">this</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;爱学习&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }    </span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>注意</strong>：对象方法这么写，仅限于对象内部</li></ul><p>例4</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> stu4</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    _name:</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> null</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#6A9955;--shiki-dark:#6A9955;">/*类似于java中私有成员变量*/</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    get</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;进入了get&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">        return</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> this</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">_name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    set</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;进入了set&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">        this</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">_name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>调用 get，set</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">stu4</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;小白&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">stu4</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="特色-属性增删" tabindex="-1"><a class="header-anchor" href="#特色-属性增删"><span>特色：属性增删</span></a></h4><ul><li>js 的对象，不需要什么模板，它的属性和方法可以随时加减</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> stu</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name:</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;张三&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">};</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">stu</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">age</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">18</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;					</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 添加属性</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">delete</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> stu</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">age</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;					</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 删除属性</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">stu</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">study</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {		</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 添加方法</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">this</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;在学习&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加 get，set，需要借助 Object.definePropery</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> stu</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">_name:</span><span style="color:#569CD6;--shiki-dark:#569CD6;">null</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Object</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">defineProperty</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">stu</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;name&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">    get</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(){</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">        return</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> this</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">_name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">    set</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">){</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">        this</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">_name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数1：目标对象</li><li>参数2：属性名</li><li>参数3：get，set 的定义</li></ul><h4 id="特色-this" tabindex="-1"><a class="header-anchor" href="#特色-this"><span>特色：this</span></a></h4><p><code>js</code> 中的 <code>this</code> 也是隐式参数，但它与函数运行时上下文相关</p><p>例如，一个“落单”的函数</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> study</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">subject</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">this</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;在学习 &quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">subject</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试一下</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">study</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;js&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);  </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 输出 在学习 js</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这是因为此时函数执行，全局对象 window 被当作了 this，window 对象的 name 属性是空串</p><p>同样的函数，如果作为对象的方法</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> stu</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    name:</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;小白&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    study</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种情况下，会将当前对象作为 this</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">stu</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">study</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;js&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">); 	</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 输出 小白在学习 js</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>还可以动态改变 this</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> stu</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name:</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;小黑&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">};</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">study</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">call</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">stu</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;js&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);	</span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 输出 小黑在学习 js</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这回 study 执行时，就把 call 的第一个参数 stu 作为 this</p><p>一个例外是，在<strong>箭头函数</strong>内出现的 <code>this</code>，以外层 <code>this</code> 理解</p><p>用匿名函数</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> stu</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    name:</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &quot;小花&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    friends:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> [</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;小白&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;小黑&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;小明&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">    play</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">        this</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">friends</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">forEach</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">e</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">){</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">            console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">this</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;与&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">e</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;在玩耍&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">        });</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">stu</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">play</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>this.name 所在的函数是【落单】的函数，因此 this 代表 window</li></ul><p>输出结果为</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span>与小白在玩耍</span></span>
<span class="line"><span>与小黑在玩耍</span></span>
<span class="line"><span>与小明在玩耍</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用箭头函数</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> stu</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    name:</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &quot;小花&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    friends:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> [</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;小白&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;小黑&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;小明&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">    play</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">        this</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">friends</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">forEach</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">e</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">            console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">this</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;与&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">e</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;在玩耍&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">        })</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }    </span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>this.name 所在的函数是箭头函数，因此 this 要看它外层的 play 函数，play 又是属于 stu 的方法，因此 this 代表 stu 对象</li></ul><p>输出结果为</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span>小花与小白在玩耍</span></span>
<span class="line"><span>小花与小黑在玩耍</span></span>
<span class="line"><span>小花与小明在玩耍</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不用箭头函数的做法</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> stu</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    name:</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &quot;小花&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    friends:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> [</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;小白&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;小黑&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;小明&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">    play</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">        let</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> me</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#569CD6;--shiki-dark:#569CD6;">this</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">        this</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">friends</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">forEach</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">function</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">e</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">){</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">            console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">me</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;与&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">e</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;在玩耍&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">        });</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,190),r=[D];function e(p,o){return a(),n("div",null,r)}const k=s(l,[["render",e],["__file","DataType.html.vue"]]),c=JSON.parse('{"path":"/Grammar/Font/JavaScript/DataType.html","title":"变量&数据类型","lang":"zh-CN","frontmatter":{"order":2,"category":"语法"},"headers":[{"level":2,"title":"一、变量","slug":"一、变量","link":"#一、变量","children":[{"level":3,"title":"1、let","slug":"_1、let","link":"#_1、let","children":[]},{"level":3,"title":"2、const","slug":"_2、const","link":"#_2、const","children":[]},{"level":3,"title":"3、var","slug":"_3、var","link":"#_3、var","children":[]},{"level":3,"title":"4、变量名命名规则","slug":"_4、变量名命名规则","link":"#_4、变量名命名规则","children":[]}]},{"level":2,"title":"二、数据类型","slug":"二、数据类型","link":"#二、数据类型","children":[{"level":3,"title":"1、undefined 和 null","slug":"_1、undefined-和-null","link":"#_1、undefined-和-null","children":[]},{"level":3,"title":"2、string","slug":"_2、string","link":"#_2、string","children":[]},{"level":3,"title":"3、number 和 bigint","slug":"_3、number-和-bigint","link":"#_3、number-和-bigint","children":[]},{"level":3,"title":"4、boolean","slug":"_4、boolean","link":"#_4、boolean","children":[]},{"level":3,"title":"5、Function","slug":"_5、function","link":"#_5、function","children":[]},{"level":3,"title":"6、Array","slug":"_6、array","link":"#_6、array","children":[]},{"level":3,"title":"7、Object","slug":"_7、object","link":"#_7、object","children":[]}]}],"git":{"createdTime":1708330205000,"updatedTime":1708873062000,"contributors":[{"name":"zhanglinwei","email":"3498729975@qq.com","commits":2}]},"readingTime":{"minutes":11.77,"words":3532},"filePathRelative":"Grammar/Font/JavaScript/DataType.md","localizedDate":"2024年2月19日"}');export{k as comp,c as data};
