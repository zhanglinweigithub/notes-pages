import{_ as e,r as p,o as r,c as D,e as s,f as n,g as i,a as l}from"./app-Vg0IViah.js";const o={},d=s("h1",{id:"props",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#props"},[s("span",null,"props")])],-1),c={href:"https://cn.vuejs.org/guide/components/props.html",target:"_blank",rel:"noopener noreferrer"},k=l(`<ol><li><code>props</code>命名推荐使用<code>camelCase</code>、<code>props</code>传递推荐使用<code>kebab-case</code></li></ol><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">命名：userName</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">传递：</span><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">MyComponent</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> user-name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;zlw&quot;</span><span style="color:#808080;--shiki-dark:#808080;"> /&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="一、调试器" tabindex="-1"><a class="header-anchor" href="#一、调试器"><span>一、调试器</span></a></h2>`,3),t={href:"https://play.vuejs.org/#eNp9kUFLwzAUx7/KM5cqzBXR0+gGKgP1oKKCl1xG99ZlpklIXuag9Lv7krK5w9it7//7v/SXthP3zo23EcVEVKH2yhEEpOhm0qjWWU/QgccV9LDytoWCq4U00tTWBII2NDBN/LJ4Qq0tfFuvlxfFlTRVORzHB/FA2Dq9IOQJoFrfzLouL/d9VfKUU2VcJNhet3aJeioFcymgZFiVR/tiJCjw61eqGW+CNWzepX0pats6pdG/OVKsJ8UEMklswXa/LzkjH3G0z+s11j8n8k3YpUyKd48B/RalODBa+AZpwPPPV9zx8wGyfdTcPgM/MFgdk+NQe4hmydpHvWz7nL+/Ms1XmO8ITdhfKommZp/7UvA/eTxz9X/d2/Fd3pOmF/0fEx+nNQ==",target:"_blank",rel:"noopener noreferrer"},C=l(`<h2 id="二、props声明" tabindex="-1"><a class="header-anchor" href="#二、props声明"><span>二、props声明</span></a></h2><p>在使用 <code>&lt;script setup&gt;</code> 的单文件组件中，<code>props</code> 可以使用 <code>defineProps()</code> 宏来声明</p><ul><li><code>type</code>：类型</li><li><code>required</code>：是否必传</li><li><code>default</code>：默认值</li></ul><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> setup</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">const</span><span style="color:#4FC1FF;--shiki-dark:#4FC1FF;"> props</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">defineProps</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">  tooltip:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    type:</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> String</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    required:</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> false</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    default:</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &quot;我是标题&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">  name:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    type:</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> String</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    required:</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> false</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    default:</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &quot;我是名字&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">});</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">template</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">	&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">p</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">        {{ </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">props</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">tooltip</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> }} 、 {{ </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">props</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> }}</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">    &lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">p</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">template</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>所有 <code>prop</code> 默认都是可选的，除非声明了 <code>required: true</code></li><li>除 <code>Boolean</code> 外的未传递的可选 <code>prop</code> 将会有一个默认值 <code>undefined</code></li><li><code>Boolean</code> 类型的未传递 <code>prop</code> 将被转换为 <code>false</code>。这可以通过为它设置 <code>default</code> 来更改</li><li>如果声明了 <code>default</code> 值，那么在 <code>prop</code> 的值被解析为 <code>undefined</code> 时，无论 <code>prop</code> 是未被传递还是显式指明的 <code>undefined</code>，都会改为 <code>default</code> 值</li></ol><div class="hint-container warning"><p class="hint-container-title">注意</p><ul><li>如果解构了 <code>props</code> 对象，解构出的变量将会丢失响应性</li><li>如果确实需要解构 <code>props</code> 对象，并保持响应性，可以使用 <code>toRefs()</code> 和 <code>toRef()</code> 这两个工具函数</li></ul></div><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> setup</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">import</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> { </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">toRefs</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">toRef</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> } </span><span style="color:#C586C0;--shiki-dark:#C586C0;">from</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &#39;vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">const</span><span style="color:#4FC1FF;--shiki-dark:#4FC1FF;"> props</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">defineProps</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">  tooltip:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    type:</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> String</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    required:</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> false</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    default:</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &quot;我是标题&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">  name:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    type:</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> String</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    required:</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> false</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    default:</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &quot;我是名字&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 将 props 转为一个其中全是 ref 的对象，然后解构</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">const</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> { </span><span style="color:#4FC1FF;--shiki-dark:#4FC1FF;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> } = </span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">toRefs</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">props</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// name 是一个追踪着 props.name 的 ref</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">console</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">value</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 或者，将 props 的单个属性转为一个 ref</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">const</span><span style="color:#4FC1FF;--shiki-dark:#4FC1FF;"> title</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">toRef</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">props</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;tooltip&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">template</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">	&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">p</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">        {{ </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> }} 、 {{ </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">title</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> }}</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">    &lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">p</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">template</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、props传递" tabindex="-1"><a class="header-anchor" href="#三、props传递"><span>三、props传递</span></a></h2><h3 id="_1、静态传递" tabindex="-1"><a class="header-anchor" href="#_1、静态传递"><span>1、静态传递</span></a></h3><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">MyComponent</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">  title</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;My journey with Vue&quot;</span><span style="color:#808080;--shiki-dark:#808080;"> /&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2、动态传递" tabindex="-1"><a class="header-anchor" href="#_2、动态传递"><span>2、动态传递</span></a></h3><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">&lt;!-- 变量的值动态传入 --&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">MyComponent</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> :</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">title</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">user</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#808080;--shiki-dark:#808080;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">&lt;!-- 复杂表达式的值动态传入 --&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">MyComponent</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> :</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">title</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">user</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">firstName</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39; by &#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> + </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">user</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">lastName</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#808080;--shiki-dark:#808080;"> /&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、传递不同的值类型" tabindex="-1"><a class="header-anchor" href="#_3、传递不同的值类型"><span>3、传递不同的值类型</span></a></h3><p><strong>Number</strong></p><p>虽然 <code>18</code> 是个常量，还是需要使用 <code>v-bind</code>，因为这是一个 <code>JavaScript</code> 表达式而不是一个字符串</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">MyComponent</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> :</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">age</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">18</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#808080;--shiki-dark:#808080;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">&lt;!-- 变量的值动态传入 --&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">MyComponent</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> :</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">age</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">user</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">age</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#808080;--shiki-dark:#808080;"> /&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Boolean</strong></p><p>虽然 <code>false</code> 是个常量，还是需要使用 <code>v-bind</code>，因为这是一个 <code>JavaScript</code> 表达式而不是一个字符串</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">&lt;!-- 仅写上 prop 但不传值，会隐式转换为 true --&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">MyComponent</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> handsome-guy</span><span style="color:#808080;--shiki-dark:#808080;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">MyComponent</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> :</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">handsome-guy</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">false</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#808080;--shiki-dark:#808080;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">&lt;!-- 变量的值动态传入 --&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">MyComponent</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> :</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">handsome-guy</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">user</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">isHandsomeGuy</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#808080;--shiki-dark:#808080;"> /&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Array</strong></p><p>虽然 <mark>数组</mark> 是个常量，还是需要使用 <code>v-bind</code>，因为这是一个 <code>JavaScript</code> 表达式而不是一个字符串</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">MyComponent</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> :</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">comment-ids</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">234</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">266</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">273</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">]</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#808080;--shiki-dark:#808080;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">&lt;!-- 变量的值动态传入 --&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">MyComponent</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> :</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">comment-ids</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">user</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">commentIds</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#808080;--shiki-dark:#808080;"> /&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Object</strong></p><p>虽然 <mark>对象字面量</mark> 是个常量，还是需要使用 <code>v-bind</code>，因为这是一个 <code>JavaScript</code> 表达式而不是一个字符串</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">MyComponent</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  :</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">author</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#C8C8C8;--shiki-dark:#C8C8C8;">    name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">: </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;zlw&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#C8C8C8;--shiki-dark:#C8C8C8;">    company</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">: </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;China&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  }</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;!-- 根据一个变量的值动态传入 --&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;MyComponent :author=&quot;user.author&quot; /&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、一个对象绑定多个-prop" tabindex="-1"><a class="header-anchor" href="#_4、一个对象绑定多个-prop"><span>4、一个对象绑定多个 prop</span></a></h3><p>要将一个对象的所有属性都当作 <code>props</code> 传入，你可以使用没有参数的 <code>v-bind</code>，即只使用 <code>v-bind</code> 而非 <code>:prop-name</code></p><p><strong>对象</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">const</span><span style="color:#4FC1FF;--shiki-dark:#4FC1FF;"> user</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">  name:</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &#39;zlw&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">  age:</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;"> 18</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>模板</strong></p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">MyComponent</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> v-bind</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">user</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#808080;--shiki-dark:#808080;"> /&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>等价于</strong></p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">MyComponent</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> :</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">age</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">user</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">age</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> :</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">user</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">name</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#808080;--shiki-dark:#808080;"> /&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="四、props校验" tabindex="-1"><a class="header-anchor" href="#四、props校验"><span>四、props校验</span></a></h2><div class="hint-container warning"><p class="hint-container-title">注意</p><p><code>defineProps()</code> 宏中的参数 <mark>不可以访问 <code>&lt;script setup&gt;</code> 中定义的其他变量</mark> ，因为在编译时整个表达式都会被移到外部的函数中</p></div><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> setup</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">defineProps</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">  // 基础类型检查</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">  // （给出 \`null\` 和 \`undefined\` 值则会跳过任何类型检查）</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">  propA:</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> Number</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">  // 多种可能的类型</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">  propB:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> [</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">String</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Number</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">  // 必传，且为 String 类型</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">  propC:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    type:</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> String</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    required:</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> true</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">  // Number 类型的默认值</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">  propD:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    type:</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> Number</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    default:</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;"> 100</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">  // 对象类型的默认值</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">  propE:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    type:</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> Object</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 对象或数组的默认值</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 必须从一个工厂函数返回。</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 该函数接收组件所接收到的原始 prop 作为参数。</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">    default</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">rawProps</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">      return</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> { </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">message:</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &#39;hello&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">  // 自定义类型校验函数</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">  // 完整的 props 作为第二个参数传入</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">  propF:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">    validator</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">value</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">props</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">      // The value must match one of these strings</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">      return</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> [</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;success&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;warning&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;danger&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">].</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">includes</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">value</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">  // 函数类型的默认值</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">  propG:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">    type:</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> Function</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 不像对象或数组的默认，这不是一个工厂函数</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 这会是一个用来作为默认值的函数</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">    default</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">      return</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &#39;Default function&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当同时允许 <code>String</code> 和 <code>Boolean</code> 时，有一种边缘情况 —— 只有当 <code>Boolean</code> 出现在 <code>String</code> 之前时，<code>Boolean</code> 转换规则才适用</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> setup</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// disabled 将被转换为 true</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">defineProps</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">  disabled:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> [</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Boolean</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Number</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// disabled 将被转换为 true</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">defineProps</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">  disabled:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> [</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Boolean</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">String</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// disabled 将被转换为 true</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">defineProps</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">  disabled:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> [</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Number</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Boolean</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// disabled 将被解析为空字符串 (disabled=&quot;&quot;)</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">defineProps</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">  disabled:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> [</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">String</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Boolean</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Boolean转换规则</p><p>声明为 <code>Boolean</code> 类型的 <code>props</code> 有特别的类型转换规则</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> setup</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">defineProps</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">  disabled:</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> Boolean</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">template</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">	&lt;!-- 等同于传入 :disabled=&quot;true&quot; --&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">	&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">MyComponent</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> disabled</span><span style="color:#808080;--shiki-dark:#808080;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">	&lt;!-- 等同于传入 :disabled=&quot;false&quot; --&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">	&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">MyComponent</span><span style="color:#808080;--shiki-dark:#808080;"> /&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">template</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="五、修改props" tabindex="-1"><a class="header-anchor" href="#五、修改props"><span>五、修改props</span></a></h2><p><code>props</code> 是只读的，不可手动更改，否则会抛出警告</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> setup</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">const</span><span style="color:#4FC1FF;--shiki-dark:#4FC1FF;"> props</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">defineProps</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">([</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;abc&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">props</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">foo</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;def&#39;</span><span style="color:#6A9955;--shiki-dark:#6A9955;"> // 警告！prop 是只读的！</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若要更改可以这样做</p><ul><li>新定义一个局部数据属性，从 <code>props</code> 上获取初始值</li></ul><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> setup</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">const</span><span style="color:#4FC1FF;--shiki-dark:#4FC1FF;"> props</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">defineProps</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">([</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;age&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">]) </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// [!code error]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 只是将 props.age 作为初始值，这样做就使 prop 和后续更新无关了</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">const</span><span style="color:#4FC1FF;--shiki-dark:#4FC1FF;"> _age</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">ref</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">props</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">age</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>基于该 <code>props</code> 值定义一个计算属性</li></ul><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> setup</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">const</span><span style="color:#4FC1FF;--shiki-dark:#4FC1FF;"> props</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">defineProps</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">([</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&#39;size&#39;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 该 prop 变更时计算属性也会自动更新</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">const</span><span style="color:#4FC1FF;--shiki-dark:#4FC1FF;"> _size</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">computed</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(() </span><span style="color:#569CD6;--shiki-dark:#569CD6;">=&gt;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> props</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">size</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">trim</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">().</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">toLowerCase</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">())</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,47);function h(y,v){const a=p("ExternalLinkIcon");return r(),D("div",null,[d,s("p",null,[s("a",c,[n("官方文档"),i(a)])]),k,s("p",null,[s("a",t,[n("传送门"),i(a)])]),C])}const E=e(o,[["render",h],["__file","Props.html.vue"]]),m=JSON.parse('{"path":"/Use/Font/Vue3/Props.html","title":"props","lang":"zh-CN","frontmatter":{"category":["使用篇"],"tag":["Vue3使用","props"]},"headers":[{"level":2,"title":"一、调试器","slug":"一、调试器","link":"#一、调试器","children":[]},{"level":2,"title":"二、props声明","slug":"二、props声明","link":"#二、props声明","children":[]},{"level":2,"title":"三、props传递","slug":"三、props传递","link":"#三、props传递","children":[{"level":3,"title":"1、静态传递","slug":"_1、静态传递","link":"#_1、静态传递","children":[]},{"level":3,"title":"2、动态传递","slug":"_2、动态传递","link":"#_2、动态传递","children":[]},{"level":3,"title":"3、传递不同的值类型","slug":"_3、传递不同的值类型","link":"#_3、传递不同的值类型","children":[]},{"level":3,"title":"4、一个对象绑定多个 prop","slug":"_4、一个对象绑定多个-prop","link":"#_4、一个对象绑定多个-prop","children":[]}]},{"level":2,"title":"四、props校验","slug":"四、props校验","link":"#四、props校验","children":[]},{"level":2,"title":"五、修改props","slug":"五、修改props","link":"#五、修改props","children":[]}],"git":{"createdTime":1709218334000,"updatedTime":1709384965000,"contributors":[{"name":"zhanglinwei","email":"3498729975@qq.com","commits":3}]},"readingTime":{"minutes":4.43,"words":1329},"filePathRelative":"Use/Font/Vue3/Props.md","localizedDate":"2024年2月29日"}');export{E as comp,m as data};
