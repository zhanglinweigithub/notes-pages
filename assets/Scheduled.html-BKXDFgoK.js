import{_ as s,o as a,c as n,a as i}from"./app-Vg0IViah.js";const l={},e=i(`<h1 id="定时任务" tabindex="-1"><a class="header-anchor" href="#定时任务"><span>定时任务</span></a></h1><p><code>SpringBoot</code>定时任务可以直接使用<code>SpringBoot</code>自带的<code>@Scheduled</code>来实现，简单方便快捷</p><h2 id="一、单线程示例" tabindex="-1"><a class="header-anchor" href="#一、单线程示例"><span>一、单线程示例</span></a></h2><p><code>@Scheduled</code> 注解用于标注这个方法是一个定时任务的方法</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>访问修饰符必须为<code>public</code></p></div><h3 id="_1、创建定时任务" tabindex="-1"><a class="header-anchor" href="#_1、创建定时任务"><span>1、创建定时任务</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Component</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Slf4j</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> class</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> ScheduleTaskTest</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 每隔5秒钟执行一次任务</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0/5 * * * * ?&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> task1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(){</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">        Thread</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> current</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Thread</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">currentThread</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">info</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;定时任务1:  taskId=&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">+</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">current</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getId</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">()+ </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;,name=&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">+</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">current</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getName</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">());</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 每隔3秒钟执行一次任务</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0/3 * * * * ?&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> task2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(){</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">        Thread</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> current</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Thread</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">currentThread</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">info</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;定时任务2:  taskId=&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">+</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">current</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getId</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">()+ </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;,name=&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">+</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">current</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getName</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">());</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、开启定时任务" tabindex="-1"><a class="header-anchor" href="#_2、开启定时任务"><span>2、开启定时任务</span></a></h3><p>然后在启动类上面加上<code>@EnableScheduling</code>注解， 作用是发现组件里面带<code>@Scheduled</code>注解的任务并在后台执行该任务。并扫描定时任务所在包</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">SpringBootApplication</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">((scanBasePackages = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;com.zhang.task&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> ))</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">EnableScheduling</span><span style="color:#6A9955;--shiki-dark:#6A9955;"> //开启定时任务</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> class</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> Springboot2Test02Application</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    public</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> static</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> main</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">String</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[] </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">args</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        SpringApplication</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">run</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">TestApplication</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">class</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, args);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、启动项目" tabindex="-1"><a class="header-anchor" href="#_3、启动项目"><span>3、启动项目</span></a></h3><p>启动项目，看到控制台会有如下信息，表明控制台里面已经定时执行我们的任务了</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">定时任务2</span><span style="color:#C586C0;--shiki-dark:#C586C0;">:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  taskId=</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">23</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,name=scheduling-</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">定时任务1</span><span style="color:#C586C0;--shiki-dark:#C586C0;">:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  taskId=</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">23</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,name=scheduling-</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">定时任务2</span><span style="color:#C586C0;--shiki-dark:#C586C0;">:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  taskId=</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">23</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,name=scheduling-</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">定时任务2</span><span style="color:#C586C0;--shiki-dark:#C586C0;">:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  taskId=</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">23</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,name=scheduling-</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">定时任务1</span><span style="color:#C586C0;--shiki-dark:#C586C0;">:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  taskId=</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">23</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,name=scheduling-</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">定时任务2</span><span style="color:#C586C0;--shiki-dark:#C586C0;">:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  taskId=</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">23</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,name=scheduling-</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>两个任务的<code>id</code>和<code>name</code>都是相同的，也就是说我们只有一个线程来执行任务。</p><p><code>springboot</code>默认就是单线程</p></div><h2 id="二、多线程示例" tabindex="-1"><a class="header-anchor" href="#二、多线程示例"><span>二、多线程示例</span></a></h2><p>使用<code>@Async</code>和<code>@EnableAsync</code>来创建异步任务和开启多线程</p><h3 id="_1、创建任务配置类" tabindex="-1"><a class="header-anchor" href="#_1、创建任务配置类"><span>1、创建任务配置类</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Configuration</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> class</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> TaskConfig</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    //核心线程数，默认是1，为1的时候就是单线程</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    private</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> int</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> corePoolSize</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">5</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    //最大线程数，核心线程不够用的时候会创建新的线程</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    private</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> int</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> maxPoolSize</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">20</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    //队列最大长度（容量）</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    private</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> int</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> queueCapacity</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">5</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Bean</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> Executor</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> taskExecutor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">        ThreadPoolTaskExecutor</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> executor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#C586C0;--shiki-dark:#C586C0;">new</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> ThreadPoolTaskExecutor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        executor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">setCorePoolSize</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(corePoolSize);</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        executor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">setMaxPoolSize</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(maxPoolSize);</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        executor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">setQueueCapacity</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(queueCapacity);</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        executor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">initialize</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">        return</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> executor;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、创建定时任务" tabindex="-1"><a class="header-anchor" href="#_2、创建定时任务"><span>2、创建定时任务</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Component</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Slf4j</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> class</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> AsyncTaskTest</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 每隔5秒钟执行一次任务</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Async</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0/5 * * * * ?&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> task3</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(){</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">        Thread</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> current</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Thread</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">currentThread</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">info</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;定时任务3:  taskId=&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">+</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">current</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getId</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">()+ </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;,name=&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">+</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">current</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getName</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">());</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 每隔3秒钟执行一次任务</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Async</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0/3 * * * * ?&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> task4</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(){</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">        Thread</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> current</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Thread</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">currentThread</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">info</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;定时任务4:  taskId=&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">+</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">current</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getId</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">()+ </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;,name=&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">+</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">current</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getName</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">());</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、开启多线程" tabindex="-1"><a class="header-anchor" href="#_3、开启多线程"><span>3、开启多线程</span></a></h3><p>在启动类上加<code>@EnableAsync</code>表示开启多线程，也就是异步任务</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">SpringBootApplication</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(scanBasePackages = </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;com.ezhang.task&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> )</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">EnableScheduling</span><span style="color:#6A9955;--shiki-dark:#6A9955;"> // 开启定时任务</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">EnableAsync</span><span style="color:#6A9955;--shiki-dark:#6A9955;"> // 开启多线程</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> class</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> Springboot2Test02Application</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    public</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> static</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> main</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">String</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">[] </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">args</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        SpringApplication</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">run</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">TestApplication</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">class</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, args);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、启动项目" tabindex="-1"><a class="header-anchor" href="#_4、启动项目"><span>4、启动项目</span></a></h3><p>启动项目，可以在控制台看到如下信息，表明任务有5个线程在执行，也就是我们在<code>TaskConfig</code>里面配置的<code>corePoolSize = 5</code></p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span>定时任务3:  taskId=46,name=taskExecutor-2</span></span>
<span class="line"><span>定时任务4:  taskId=47,name=taskExecutor-3</span></span>
<span class="line"><span>定时任务4:  taskId=48,name=taskExecutor-4</span></span>
<span class="line"><span>定时任务3:  taskId=49,name=taskExecutor-5</span></span>
<span class="line"><span>定时任务4:  taskId=45,name=taskExecutor-1</span></span>
<span class="line"><span>定时任务4:  taskId=46,name=taskExecutor-2</span></span>
<span class="line"><span>定时任务3:  taskId=47,name=taskExecutor-3</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、配置多个线程池" tabindex="-1"><a class="header-anchor" href="#三、配置多个线程池"><span>三、配置多个线程池</span></a></h2><p>因为有些定时任务是比较重要，有些则是不太重要，我们可以把定时任务分别放到不同的线程池中。</p><p>通过<code>@Async</code>指定线程池</p><h3 id="_1、创建线程池" tabindex="-1"><a class="header-anchor" href="#_1、创建线程池"><span>1、创建线程池</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Configuration</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> class</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> TaskConfig</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    //核心线程数，默认是1，为1的时候就是单线程</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    private</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> int</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> corePoolSize</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">5</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    //最大线程数，核心线程不够用的时候会创建新的线程</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    private</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> int</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> maxPoolSize</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">20</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    //队列最大长度（容量）</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    private</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> int</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> queueCapacity</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">5</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">	</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    //线程池1</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Bean</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> Executor</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> taskExecutor1</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">        ThreadPoolTaskExecutor</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> executor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#C586C0;--shiki-dark:#C586C0;">new</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> ThreadPoolTaskExecutor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        executor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">setCorePoolSize</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(corePoolSize);</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        executor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">setMaxPoolSize</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(maxPoolSize);</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        executor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">setQueueCapacity</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(queueCapacity);</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        executor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">initialize</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">        return</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> executor;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">	</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    //线程池2</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Bean</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> Executor</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> taskExecutor2</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">        ThreadPoolTaskExecutor</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> executor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#C586C0;--shiki-dark:#C586C0;">new</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> ThreadPoolTaskExecutor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        executor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">setCorePoolSize</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(corePoolSize);</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        executor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">setMaxPoolSize</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(maxPoolSize);</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        executor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">setQueueCapacity</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(queueCapacity);</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        executor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">initialize</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">        return</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> executor;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、创建任务" tabindex="-1"><a class="header-anchor" href="#_2、创建任务"><span>2、创建任务</span></a></h3><p>在任务的<code>@Async</code>注解里面添加线程池的名字，表示该任务在哪个线程池里面</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Component</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Slf4j</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> class</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> AsyncTaskTest</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 每隔5秒钟执行一次任务</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Async</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;taskExecutor1&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0/5 * * * * ?&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> task5</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(){</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">        Thread</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> current</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Thread</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">currentThread</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">info</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;定时任务3:  taskId=&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">+</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">current</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getId</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">()+ </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;,name=&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">+</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">current</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getName</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">());</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    // 每隔3秒钟执行一次任务</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Async</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;taskExecutor2&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0/3 * * * * ?&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> task6</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(){</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">        Thread</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> current</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">Thread</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">currentThread</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        log</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">info</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;定时任务4:  taskId=&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">+</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">current</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getId</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">()+ </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;,name=&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">+</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">current</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getName</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">());</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、启动项目-1" tabindex="-1"><a class="header-anchor" href="#_3、启动项目-1"><span>3、启动项目</span></a></h3><p>启动项目后，在控制台可以看到，两个任务分别在各自的线程池内执行。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">定时任务3</span><span style="color:#C586C0;--shiki-dark:#C586C0;">:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  taskId=</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">45</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,name=taskExecutor1-</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">定时任务4</span><span style="color:#C586C0;--shiki-dark:#C586C0;">:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  taskId=</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">46</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,name=taskExecutor2-</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">定时任务4</span><span style="color:#C586C0;--shiki-dark:#C586C0;">:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  taskId=</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">47</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,name=taskExecutor2-</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">定时任务3</span><span style="color:#C586C0;--shiki-dark:#C586C0;">:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  taskId=</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">48</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,name=taskExecutor1-</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">2</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">定时任务4</span><span style="color:#C586C0;--shiki-dark:#C586C0;">:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  taskId=</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">49</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,name=taskExecutor2-</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">3</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">定时任务4</span><span style="color:#C586C0;--shiki-dark:#C586C0;">:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  taskId=</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">50</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,name=taskExecutor2-</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">4</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">定时任务3</span><span style="color:#C586C0;--shiki-dark:#C586C0;">:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  taskId=</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">51</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,name=taskExecutor1-</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">3</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">定时任务4</span><span style="color:#C586C0;--shiki-dark:#C586C0;">:</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  taskId=</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">52</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">,name=taskExecutor2-</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">5</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、cron详解" tabindex="-1"><a class="header-anchor" href="#四、cron详解"><span>四、cron详解</span></a></h2><p><code>cron</code>表达式是一个字符串，由6或7个表达式组成，每个表达式中间有个空格，每个表达式代表一个含义，<code>cron</code>有两种语法格式</p><ul><li><code>Seconds</code>（秒） <code>Minutes</code>（分） <code>Hours</code>（时） <code>DayofMonth</code>（月份中的日期） <code>Month</code>（月） <code>DayofWeek</code>（星期中的日期） <code>Year</code>（年）</li><li><code>Seconds</code>（秒） <code>Minutes</code>（分） <code>Hours</code>（时） <code>DayofMonth</code>（月份中的日期） <code>Month</code>（月） <code>DayofWeek</code>（星期中的日期）</li></ul><table><thead><tr><th style="text-align:center;">位置</th><th style="text-align:center;">表达式名称</th><th style="text-align:center;">允许值</th><th style="text-align:center;">允许的特殊字符</th></tr></thead><tbody><tr><td style="text-align:center;">1</td><td style="text-align:center;"><code>Seconds</code>（秒）</td><td style="text-align:center;">0-59的整数</td><td style="text-align:center;"><code>, - * /</code></td></tr><tr><td style="text-align:center;">2</td><td style="text-align:center;"><code>Minutes</code>（分）</td><td style="text-align:center;">0-59的整数</td><td style="text-align:center;"><code>, - * /</code></td></tr><tr><td style="text-align:center;">3</td><td style="text-align:center;"><code>Hours</code>（时）</td><td style="text-align:center;">0-23的整数</td><td style="text-align:center;"><code>, - * /</code></td></tr><tr><td style="text-align:center;">4</td><td style="text-align:center;"><code>DayofMonth</code>（月份中的日期）</td><td style="text-align:center;">1-31的整数</td><td style="text-align:center;"><code>, - * / ? L W C</code></td></tr><tr><td style="text-align:center;">5</td><td style="text-align:center;"><code>Month</code>（月）</td><td style="text-align:center;">1-12的整数或JAN-DEc</td><td style="text-align:center;"><code>, - * /</code></td></tr><tr><td style="text-align:center;">6</td><td style="text-align:center;"><code>DayofWeek</code>（星期中的日期）</td><td style="text-align:center;">1-7的整数（1表示星期天，2表示星期一）</td><td style="text-align:center;"><code>, - * / ? L C #</code></td></tr><tr><td style="text-align:center;">7</td><td style="text-align:center;"><code>Year</code>（年）（可选）</td><td style="text-align:center;">1970-2099年</td><td style="text-align:center;"><code>, - * /</code></td></tr></tbody></table><ul><li><code>*</code>：表示对应时间表达式的每一个时刻， 例如， 在秒字段时， 表示“每秒”；</li><li><code>?</code>：表明不想设置的那个字段。 例如想在每月的10日触发任务调度，不管10日到底是星期几，则只能使用如下写法： <code>0 0 0 10 * ?</code>, 其中最后一位只能用<code>？</code>，而不能使用<code>*</code>，如果使用<code>*</code>表示不管星期几都会触发， 与在每月10号触发矛盾了。</li><li><code>-</code>：表达一个范围，例如在<code>Hours</code>表达式使用<code>8-12</code>，表示从8点到12点每小时触发一次任务</li><li><code>,</code>：表达一个列表值， 如在星期字段中使用“<code>2,3,6</code>”， 则表示星期一， 星期二和星期五；</li><li><code>/</code>：<code>x/y</code> 表达一个等步长序列， <code>x</code> 为起始值， <code>y</code> 为增量步长值。 如在秒字段中使用 <code>0/15</code>， 则表示为 0,15,30 和 45 秒，都要执行调度任务。 而<code>5/15</code> 在分钟字段使用则表示在5,20,35,50分钟的时候都要执行调度任务。你也可以使用<code>/y</code>， 它等同于 <code>0/y</code>；</li><li><code>L</code>：表示最后，只能出现在<code>DayofWeek</code>和<code>DayofMonth</code>表达式，如果在<code>DayofWeek</code>表达式使用<code>2L</code>,表示在最后的一个星期一触发调度任务；</li><li><code>W</code>：表示有效工作日(周一到周五),只能出现在<code>DayofMonth</code>表达式，系统将在离指定日期的最近的有效工作日触发事件。例如：在 <code>DayofMonth</code>使用<code>10W</code>，如果10号是星期六，则将在最近的工作日：星期五，即14号触发。 如果15号是星期天，则在16号(周一)触发；如果15号在星期一到星期五中的一天，则就在15号当天触发。但必须注意匹配日期不能够跨月， 如你指定<code>1W</code>， 如果1号是星期六， 正确匹配的是 3 号星期一， 而不是上个月最后的那天（星期五）。 <code>W</code> 字符串只能指定单一日期， 而不能指定日期范围；</li><li><code>LW</code>:在<code>DayofMonth</code>表达式可以组合使用 <code>LW</code>， 它的意思是当月的最后一个工作日</li><li><code>#</code>: 用于确定每个月第几个星期几，只能出现在DayofMonth表达式。例如在<code>2#3</code>，表示某月的第三个星期一。</li><li><code>C</code>： 该字符只在<code>DayofWeek</code>和<code>DayofMonth</code>表达式中使用， 代表“<code>Calendar</code>”的意思。 它的意思是计划所关联的日期，如果日期没有被关联， 则相当于日历中所有日期。 例如 <code>5C</code> 在<code>DayofMonth</code>字段中就相当于日历 5 日以后的第一天。<code>1C</code> 在<code>DayofWeek</code>字段中相当于星期日后的第一天</li></ul><h3 id="_1、示例" tabindex="-1"><a class="header-anchor" href="#_1、示例"><span>1、示例</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 每隔5秒钟执行一次任务</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0/5 * * * * ?&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 每隔1分钟执行一次任务</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0 0/1 * * * ?&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 每天中午12点行一次任务</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0 0 12 * * ?&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 每天上午10:25行一次任务</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0 25 10 ? * *&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 每天上午10:25行一次任务</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0 25 10 * * ?&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 每天上午10:25行一次任务</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0 25 10 * * ? *&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 2005年的每天上午10:15行一次任务</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0 15 10 * * ? 2005&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 在每天下午6点到下午6:59期间的每1分钟行一次任务</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0 * 18 * * ?&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 在每天下午6点到下午6:55期间的每5分钟行一次任务</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0 0/5 18 * * ?&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0 0/5 14,18 * * ?&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 在每天下午6点到下午6:05期间的每1分钟行一次任务</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0 0-5 18 * * ?&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 每天上午8点，10点，12点行一次任务</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0 0 8,10,12 * * ?&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 朝九晚五工作时间内每半小时行一次任务</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0 0/30 9-17 * * ?&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 表示每个星期一中午12点行一次任务</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0 0 12 ? * 2&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 每年二月的星期二的下午2:10和2:50行一次任务</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0 10,50 14 ? 2 3&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 周一至周五的上午10:20行一次任务</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0 20 10 ? * 2-6&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 每月20日上午10:35行一次任务</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0 35 10 20 * ?&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 每月最后一日的上午10:35行一次任务</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0 35 10 L * ?&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 每月的最后一个星期五上午10:35行一次任务</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0 35 10 ? * 6L&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 2020年至2025年的每月的最后一个星期五上午10:35</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0 35 10 ? * 6L 2020-2025&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// 每月的第二个星期五上午10:35行一次任务</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Scheduled</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(cron=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;0 35 10 ? * 6#2&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、线程池配置详解" tabindex="-1"><a class="header-anchor" href="#五、线程池配置详解"><span>五、线程池配置详解</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Configuration</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> class</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> TaskConfig</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    //核心线程数，默认是1，为1的时候就是单线程</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    private</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> int</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> corePoolSize</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">5</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    //最大线程数，核心线程不够用的时候会创建新的线程，最大不超过maxPoolSize</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    private</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> int</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> maxPoolSize</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">20</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    //队列最大长度（容量）</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    private</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> int</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> queueCapacity</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">5</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    //非核心线程闲置时的超时时长，单位时秒</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    private</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> int</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> keepAliveTime</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">60</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Bean</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> Executor</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> taskExecutor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">        ThreadPoolTaskExecutor</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> executor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#C586C0;--shiki-dark:#C586C0;">new</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> ThreadPoolTaskExecutor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">        //设置核心线程数</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        executor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">setCorePoolSize</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(corePoolSize);</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">        //设置最大线程数</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        executor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">setMaxPoolSize</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(maxPoolSize);</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">        //设置队列最大长度（容量）</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        executor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">setQueueCapacity</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(queueCapacity);</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">        //设置闲置时的超时时长</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        executor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">setKeepAliveSeconds</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(keepAliveTime);</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">        //允许核心线程超时，默认时false，当设置为true后，核心线程超时也会销毁</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        executor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">setAllowCoreThreadTimeOut</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">true</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">        // 线程池对拒绝任务（无线程可用）的处理策略，目前有4种方式，分别如下</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">        // AbortPolicy 丢弃任务，抛运行时异常，CallerRunsPolicy 执行任务</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">        // DiscardPolicy 忽视，什么都不会发生，DiscardOldestPolicy 从队列中踢出最先进入队列（最后一个执行）的任务</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        executor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">setRejectedExecutionHandler</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#C586C0;--shiki-dark:#C586C0;">new</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> ThreadPoolExecutor.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">CallerRunsPolicy</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">());</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">        //等待所有线程执行完关闭线程池，默认为false</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        executor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">setWaitForTasksToCompleteOnShutdown</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">true</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">        //设置等待关闭线程池的时间，因为不能无限的等待下去</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        executor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">setAwaitTerminationSeconds</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">60</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">        //设置线程名字的前缀</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        executor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">setThreadNamePrefix</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;test-task-&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        executor</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">initialize</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">        return</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> executor;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><code>corePoolSize</code>：核心线程数。</li></ol><ul><li>核心线程会一直存活，及时没有任务需要执行</li><li>当线程数小于核心线程数时，即使有线程空闲，线程池也会优先创建新线程处理</li><li>设置<code>allowCoreThreadTimeout</code>=<code>true</code>（默认false）时，核心线程会超时关闭</li></ul><ol start="2"><li><code>maxPoolSize</code>：最大线程数。</li></ol><ul><li>当线程数<code>&gt;=\`\`corePoolSize</code>，且任务队列已满时。线程池会创建新线程来处理任务</li><li>当线程数<code>=\`\`maxPoolSize</code>，且任务队列已满时，线程池会拒绝处理任务而抛出异常或根据 <code>RejectedExecutionHandler</code> 来进行拒绝策略处理。</li></ul><ol start="3"><li><p><code>queueCapacity</code>：任务队列容量（阻塞队列） +当核心线程数达到最大时，新任务会放在队列中排队等待执行</p></li><li><p><code>keepAliveTime</code>：线程空闲时间</p></li></ol><ul><li>当线程空闲时间达到<code>keepAliveTime</code>时，线程会退出，直到线程数量<code>=\`\`corePoolSize</code></li><li>如果<code>allowCoreThreadTimeout</code>=<code>true</code>，则会直到线程数量<code>=0</code></li></ul><ol start="5"><li><p><code>allowCoreThreadTimeout</code>：允许核心线程超时</p></li><li><p><code>rejectedExecutionHandler</code>：任务拒绝处理器</p></li></ol><ul><li>两种情况会拒绝处理任务： <ul><li>当线程数已经达到<code>maxPoolSize</code>，切队列已满，会拒绝新任务</li><li>当线程池被调用<code>shutdown()</code>后，会等待线程池里的任务执行完毕，再<code>shutdown</code>。如果在调用<code>shutdown()</code>和线程池真正<code>shutdown</code>之间提交任务，会拒绝新任务</li></ul></li><li>线程池会调用<code>rejectedExecutionHandler</code>来处理这个任务。如果没有设置默认是<code>AbortPolicy</code>，会抛出异常</li><li><code>ThreadPoolExecutor</code>类有几个内部实现类来处理这类情况： <ul><li><code>AbortPolicy</code> 丢弃任务，抛运行时异常</li><li><code>CallerRunsPolicy</code> 执行任务</li><li><code>DiscardPolicy</code> 忽视，什么都不会发生</li><li><code>DiscardOldestPolicy</code> 从队列中踢出最先进入队列（最后一个执行）的任务</li></ul></li><li>实现<code>RejectedExecutionHandler</code>接口，可自定义处理器</li></ul><p><strong>默认值</strong></p><ul><li><code>corePoolSize</code>=<code>1</code></li><li><code>queueCapacity</code>=<code>Integer.MAX_VALUE</code></li><li><code>maxPoolSize</code>=<code>Integer.MAX_VALUE</code></li><li><code>keepAliveTime</code>=<code>60s</code></li><li><code>allowCoreThreadTimeout</code>=<code>false</code></li><li><code>rejectedExecutionHandler</code>=<code>AbortPolicy()</code></li></ul>`,56),D=[e];function o(r,p){return a(),n("div",null,D)}const c=s(l,[["render",o],["__file","Scheduled.html.vue"]]),k=JSON.parse('{"path":"/Use/Java/SpringBoot/Scheduled.html","title":"定时任务","lang":"zh-CN","frontmatter":{"category":"使用篇"},"headers":[{"level":2,"title":"一、单线程示例","slug":"一、单线程示例","link":"#一、单线程示例","children":[{"level":3,"title":"1、创建定时任务","slug":"_1、创建定时任务","link":"#_1、创建定时任务","children":[]},{"level":3,"title":"2、开启定时任务","slug":"_2、开启定时任务","link":"#_2、开启定时任务","children":[]},{"level":3,"title":"3、启动项目","slug":"_3、启动项目","link":"#_3、启动项目","children":[]}]},{"level":2,"title":"二、多线程示例","slug":"二、多线程示例","link":"#二、多线程示例","children":[{"level":3,"title":"1、创建任务配置类","slug":"_1、创建任务配置类","link":"#_1、创建任务配置类","children":[]},{"level":3,"title":"2、创建定时任务","slug":"_2、创建定时任务","link":"#_2、创建定时任务","children":[]},{"level":3,"title":"3、开启多线程","slug":"_3、开启多线程","link":"#_3、开启多线程","children":[]},{"level":3,"title":"4、启动项目","slug":"_4、启动项目","link":"#_4、启动项目","children":[]}]},{"level":2,"title":"三、配置多个线程池","slug":"三、配置多个线程池","link":"#三、配置多个线程池","children":[{"level":3,"title":"1、创建线程池","slug":"_1、创建线程池","link":"#_1、创建线程池","children":[]},{"level":3,"title":"2、创建任务","slug":"_2、创建任务","link":"#_2、创建任务","children":[]},{"level":3,"title":"3、启动项目","slug":"_3、启动项目-1","link":"#_3、启动项目-1","children":[]}]},{"level":2,"title":"四、cron详解","slug":"四、cron详解","link":"#四、cron详解","children":[{"level":3,"title":"1、示例","slug":"_1、示例","link":"#_1、示例","children":[]}]},{"level":2,"title":"五、线程池配置详解","slug":"五、线程池配置详解","link":"#五、线程池配置详解","children":[]}],"git":{"createdTime":1708330205000,"updatedTime":1708873062000,"contributors":[{"name":"zhanglinwei","email":"3498729975@qq.com","commits":2}]},"readingTime":{"minutes":10.97,"words":3292},"filePathRelative":"Use/Java/SpringBoot/Scheduled.md","localizedDate":"2024年2月19日"}');export{c as comp,k as data};
