import{_ as s,o as a,c as i,a as n}from"./app-Vg0IViah.js";const l={},e=n(`<h1 id="mybatis传参的几种方式" tabindex="-1"><a class="header-anchor" href="#mybatis传参的几种方式"><span>MyBatis传参的几种方式</span></a></h1><h2 id="一、传递一个参数" tabindex="-1"><a class="header-anchor" href="#一、传递一个参数"><span>一、传递一个参数</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">User</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> getByName</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">String</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> name);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>Mapper.xml</code>引用这个<code>name</code>参数：<code>#{任意合法名称}</code></p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>当一个参数的 时候 <code>#{变量名称}</code> 中变量名称可以随意写，都可以取到传入的参数</p></div><h2 id="二、传递一个map参数" tabindex="-1"><a class="header-anchor" href="#二、传递一个map参数"><span>二、传递一个Map参数</span></a></h2><p>如果我们需要传递的参数比较多，参数个数是动态的，那么我们可以将这些参数放在一个<code>map</code>中，<code>key</code> 为参数名称，<code>value</code>为参数的值</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Map</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">String</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Object</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&gt; </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">map</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#C586C0;--shiki-dark:#C586C0;">new</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> HashMap</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">map</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">put</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;id&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#B5CEA8;--shiki-dark:#B5CEA8;">1L</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">map</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">put</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;name&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;张学友&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">List</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;User&gt; </span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getByMap</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Map</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;String,Object&gt; map);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对应的<code>mapper.xml</code>中可以通过 <code>#{map中的key}</code> 可以获取<code>key</code>在<code>map</code>中对应的<code>value</code>的值作为参数</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">select</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">	SELECT * FROM t_user WHERE id=#{id} OR name = #{name}</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">select</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、传递一个java对象参数" tabindex="-1"><a class="header-anchor" href="#三、传递一个java对象参数"><span>三、传递一个Java对象参数</span></a></h2><p>当参数比较多，但是具体有多少个参数我们是确定的时候，我们可以将这些参数放在一个<code>javabean</code>对象中</p><div class="hint-container warning"><p class="hint-container-title">注意</p><ol><li>如果没有使用 <code>@Param</code> 注解指定参数名，那么需要在<code>XML</code>中指定<code>parameterType</code></li><li>若使用<code>@Param</code>指定了参数名，则无需在XML中指定<code>parameterType</code></li></ol></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">//Mapper</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">List</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;UserModel&gt; </span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getListByUserFindDto</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">UserFindDto</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> userFindDto); </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 未使用@Param</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">List</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;UserModel&gt; </span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getListByUserFindDto</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Param</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;req&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">UserFindDto</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> userFindDto); </span><span style="color:#6A9955;--shiki-dark:#6A9955;">// 使用@Param</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>指定<code>parameterType</code>后，则可直接使用<code>#{属性名}</code>取值</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">&lt;!-- 指定parameterType --&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">select</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> id</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;getListByUserFindDto&quot;</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">	parameterType</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;com.dto.UserFindDto&quot;</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">	resultType</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;com.model.UserModel&quot;</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">	SELECT * FROM t_user WHERE id=#{userId} OR name = #{userName}</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">select</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">&lt;!-- 不定parameterType --&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">select</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> id</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;getListByUserFindDto&quot;</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">	resultType</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;com.model.UserModel&quot;</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">	SELECT * FROM t_user WHERE id=#{req.userId} OR name = #{req.userName} </span><span style="color:#6A9955;--shiki-dark:#6A9955;">&lt;!-- 注意这里 --&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">select</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><ol><li>传递<code>java</code>对象的方式相对于<code>map</code>的方式更清晰一些，可以明确知道具体有哪些参数</li><li>而传递<code>map</code>，我们是不知道这个<code>map</code>中具体需要哪些参数的，<code>map</code>对参数也没有约束，参数可以随意传</li><li>建议多个参数的情况下选择通过<code>java</code>对象进行传参</li></ol></div><h2 id="四、传递多个参数" tabindex="-1"><a class="header-anchor" href="#四、传递多个参数"><span>四、传递多个参数</span></a></h2><ul><li><code>mybatis</code>处理多个参数的时候，会将多个参数封装到一个<code>map</code>中，<code>map</code>的<code>key</code>为参数的名称，<code>java</code>可以通 过反射获取方法参数的名称</li><li>编译之后，方法参数的名称通过反射获取的并不是 <code>id</code>、<code>name</code> ，而是 <code>arg0</code>、<code>arg1</code></li><li>也就是说编译之 后，方法真实的参数名称会丢失，会变成 <code>arg+参数下标</code> 的格式</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">UserModel</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> getByIdOrName</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Long</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> id, </span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">String</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> name);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">select</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> id</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;getByIdOrName&quot;</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">	resultType</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;com.model.UserModel&quot;</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    &lt;!-- 报错 Available parameters are [arg1, arg0, param1, param2] --&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">	SELECT * FROM t_user WHERE id=#{id} OR name = #{name} LIMIT 1  </span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    &lt;!-- 正常 --&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">	SELECT * FROM t_user WHERE id=#{arg0} OR name = #{arg1} LIMIT 1</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    &lt;!-- 正常 --&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    SELECT * FROM t_user WHERE id=#{param1} OR name = #{param2} LIMIT 1</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">select</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>通常传递多个参数时，我们会用<code>@Param</code>指定参数名，然后直接通过指定的参数名取值即可。</p></div><h3 id="传递1个collection参数" tabindex="-1"><a class="header-anchor" href="#传递1个collection参数"><span>传递1个Collection参数</span></a></h3><div class="hint-container tip"><p class="hint-container-title">提示</p><p>同样的，处理这种参数，我们通常也会使用<code>@Param</code>指定参数名称来取值。了解即可</p></div><p>当传递的参数类型是 <code>java.util.Collection</code> 的时候，会被放在<code>map</code>中，<code>key</code>为 <code>collection</code> ，<code>value</code> 为参数的值</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">List</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;UserModel&gt; </span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getListByIdCollection</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Collection</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;Long&gt; idCollection)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">select</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> id</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;getListByIdCollection&quot;</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">resultType</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;com.model.UserModel&quot;</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">	SELECT * FROM t_user WHERE id IN (#{collection[0]},#{collection[1]})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">select</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>集合参数，<code>mybatis</code>会进行一些特殊处理,源码如下：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">private</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> Object</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> wrapCollection</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#569CD6;--shiki-dark:#569CD6;">final</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> Object</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> object) {</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">	if</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> (object </span><span style="color:#569CD6;--shiki-dark:#569CD6;">instanceof</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> Collection) {</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">		StrictMap</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Object</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&gt; </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">map</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#C586C0;--shiki-dark:#C586C0;">new</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> StrictMap</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">		map</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">put</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;collection&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, object);</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">		if</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> (object </span><span style="color:#569CD6;--shiki-dark:#569CD6;">instanceof</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> List) {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">			map</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">put</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;list&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, object);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">		}</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">		return</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> map;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">	} </span><span style="color:#C586C0;--shiki-dark:#C586C0;">else</span><span style="color:#C586C0;--shiki-dark:#C586C0;"> if</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> (object != </span><span style="color:#569CD6;--shiki-dark:#569CD6;">null</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> &amp;&amp; </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">object</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getClass</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">().</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">isArray</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">()) {</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">		StrictMap</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Object</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&gt; </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">map</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#C586C0;--shiki-dark:#C586C0;">new</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> StrictMap</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">		map</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">put</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;array&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, object);</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">		return</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> map;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">	}</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">	return</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> object;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>判断参数是否是 <code>java.util.Collection</code> 类型，如果是，会放在<code>map</code>中，key为 <code>collection</code> 。</li><li>如果参数是 <code>java.util.List</code> 类型的，会在<code>map</code>中继续放一个 <code>list</code> 作为<code>key</code>来引用这个对象。</li><li>如果参数是数组类型的，会通过 <code>array</code> 来引用这个对象</li></ul>`,30),r=[e];function o(p,D){return a(),i("div",null,r)}const c=s(l,[["render",o],["__file","Param.html.vue"]]),t=JSON.parse('{"path":"/Use/Java/MyBatisPlus/Param.html","title":"MyBatis传参的几种方式","lang":"zh-CN","frontmatter":{"category":"使用篇"},"headers":[{"level":2,"title":"一、传递一个参数","slug":"一、传递一个参数","link":"#一、传递一个参数","children":[]},{"level":2,"title":"二、传递一个Map参数","slug":"二、传递一个map参数","link":"#二、传递一个map参数","children":[]},{"level":2,"title":"三、传递一个Java对象参数","slug":"三、传递一个java对象参数","link":"#三、传递一个java对象参数","children":[]},{"level":2,"title":"四、传递多个参数","slug":"四、传递多个参数","link":"#四、传递多个参数","children":[{"level":3,"title":"传递1个Collection参数","slug":"传递1个collection参数","link":"#传递1个collection参数","children":[]}]}],"git":{"createdTime":1708330205000,"updatedTime":1708873062000,"contributors":[{"name":"zhanglinwei","email":"3498729975@qq.com","commits":2}]},"readingTime":{"minutes":3.02,"words":905},"filePathRelative":"Use/Java/MyBatisPlus/Param.md","localizedDate":"2024年2月19日"}');export{c as comp,t as data};
