import{_ as e,r,o as p,c as o,g as c,w as n,a as k,f as a,e as s}from"./app-Vg0IViah.js";const t={},d=k(`<h1 id="springboot编程经验-一" tabindex="-1"><a class="header-anchor" href="#springboot编程经验-一"><span>SpringBoot编程经验（一）</span></a></h1><h2 id="一、获取bean的几种方式" tabindex="-1"><a class="header-anchor" href="#一、获取bean的几种方式"><span>一、获取Bean的几种方式</span></a></h2><h3 id="_1、实现-applicationcontextaware-接口" tabindex="-1"><a class="header-anchor" href="#_1、实现-applicationcontextaware-接口"><span>1、实现 ApplicationContextAware 接口</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">UserService</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> userService</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">SpringContextHolder</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getBean</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">UserService</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">class</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">UserService</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> userService</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">SpringContextHolder</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getBean</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;userService&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">UserService</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> userService</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">SpringContextHolder</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getBean</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;userService&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">UserService</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">class</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">import</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> org.springframework.beans.BeansException;</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">import</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> org.springframework.context.ApplicationContext;</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">import</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> org.springframework.context.ApplicationContextAware;</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">import</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> org.springframework.stereotype.Service;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Service</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">@</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Slf4j</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">public</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> class</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> SpringContextHolder</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> implements</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> ApplicationContextAware</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">DisposableBean</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    private</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> static</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> ApplicationContext</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> applicationContext</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#569CD6;--shiki-dark:#569CD6;">null</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    /**</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">     * 根据类型获取Bean</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">     * </span><span style="color:#569CD6;--shiki-dark:#569CD6;">@param</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> clazz</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">     * </span><span style="color:#569CD6;--shiki-dark:#569CD6;">@return</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">     * </span><span style="color:#569CD6;--shiki-dark:#569CD6;">@param</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> &lt;T&gt;</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">     */</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    public</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> static</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> &lt;</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">T</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&gt; </span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">T</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> getBean</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Class</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">T</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&gt; </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">clazz</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">        assertContextInjected</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">        return</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> applicationContext</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getBean</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(clazz);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    /**</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">     * 通过名称获取Bean</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">     * </span><span style="color:#569CD6;--shiki-dark:#569CD6;">@param</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> beanName</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">     * </span><span style="color:#569CD6;--shiki-dark:#569CD6;">@return</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">     */</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">SuppressWarnings</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;unchecked&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    public</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> static</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> &lt;</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">T</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&gt; </span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">T</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> getBean</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">String</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> beanName</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">){</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">        assertContextInjected</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">        return</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> applicationContext</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getBean</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(beanName);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    /**</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">     * 根据bean的id和类型获取bean对象</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">     * </span><span style="color:#569CD6;--shiki-dark:#569CD6;">@param</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> beanName</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">     * </span><span style="color:#569CD6;--shiki-dark:#569CD6;">@param</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> clazz</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">     * </span><span style="color:#569CD6;--shiki-dark:#569CD6;">@param</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> &lt;T&gt;</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">     * </span><span style="color:#569CD6;--shiki-dark:#569CD6;">@return</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">     */</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    public</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> static</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> &lt;</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">T</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&gt; </span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">T</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> getBean</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">String</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> beanName</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">, </span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Class</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">T</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&gt; </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">clazz</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">){</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">        assertContextInjected</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">        return</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> applicationContext</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">getBean</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(beanName, clazz);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    /**</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">     * 检查ApplicationContext不为空.</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">     */</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    private</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> static</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> assertContextInjected</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">        if</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> (applicationContext == </span><span style="color:#569CD6;--shiki-dark:#569CD6;">null</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">            throw</span><span style="color:#C586C0;--shiki-dark:#C586C0;"> new</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> IllegalStateException</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;applicaitonContext属性未注入, 请在容器中注册SpringContextHolder.&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">        }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">    /**</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">     * 清除SpringContextHolder中的ApplicationContext为Null.</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">     */</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    private</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> static</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> clearHolder</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">        applicationContext = </span><span style="color:#569CD6;--shiki-dark:#569CD6;">null</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Override</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> setApplicationContext</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">(</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">ApplicationContext</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> applicationContext</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">) </span><span style="color:#569CD6;--shiki-dark:#569CD6;">throws</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> BeansException</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        SpringContextHolder</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">applicationContext</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = applicationContext;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    @</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;">Override</span></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">    public</span><span style="color:#4EC9B0;--shiki-dark:#4EC9B0;"> void</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;"> destroy</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">        SpringContextHolder</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">.</span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">clearHolder</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、初始化时保存-configurableapplicationcontext" tabindex="-1"><a class="header-anchor" href="#_2、初始化时保存-configurableapplicationcontext"><span>2、初始化时保存 ConfigurableApplicationContext</span></a></h3>`,6),C=s("div",{class:"language-java line-numbers-mode","data-ext":"java","data-title":"java"},[s("pre",{class:"shiki shiki-themes dark-plus dark-plus",style:{"background-color":"#1E1E1E","--shiki-dark-bg":"#1E1E1E",color:"#D4D4D4","--shiki-dark":"#D4D4D4"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"@"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"SpringBootApplication")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"public"),s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}}," class"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}}," AppRun"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}}," {")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"    public"),s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}}," static"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}}," ConfigurableApplicationContext"),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}}," context"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}}," = "),s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"null"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    ")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"    public"),s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}}," static"),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}}," void"),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}}," main"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"("),s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"String"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"[] "),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}},"args"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},") {")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"        context = "),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}},"SpringApplication"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"."),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}},"run"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"("),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}},"AppRun"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"."),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}},"class"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},", args);")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"    }")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"}")]),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),h=s("div",{class:"language-java line-numbers-mode","data-ext":"java","data-title":"java"},[s("pre",{class:"shiki shiki-themes dark-plus dark-plus",style:{"background-color":"#1E1E1E","--shiki-dark-bg":"#1E1E1E",color:"#D4D4D4","--shiki-dark":"#D4D4D4"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"// 根据 名称 获取")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"Object"),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}}," bean"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}}," = "),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}},"AppRun"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"."),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}},"context"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"."),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}},"getBean"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"("),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"beanName"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},");")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"// 根据 类型 获取")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"UserService"),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}}," userService"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}}," = "),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}},"AppRun"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"."),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}},"content"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"."),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}},"getBean"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"("),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}},"UserService"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"."),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}},"class"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},");")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"// 根据 名称+类型 获取")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#4EC9B0","--shiki-dark":"#4EC9B0"}},"UserService"),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}}," userService2"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}}," = "),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}},"AppRun"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"."),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}},"content"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"."),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}},"getBean"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"("),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}},'"beanName"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},", "),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}},"UserService"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"."),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}},"class"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},");")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A9955","--shiki-dark":"#6A9955"}},"// ... 略")]),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1);function y(v,E){const D=r("CodeTabs");return p(),o("div",null,[d,c(D,{id:"14",data:[{id:"AppRun"},{id:"使用"}]},{title0:n(({value:i,isActive:l})=>[a("AppRun")]),title1:n(({value:i,isActive:l})=>[a("使用")]),tab0:n(({value:i,isActive:l})=>[C]),tab1:n(({value:i,isActive:l})=>[h]),_:1})])}const A=e(t,[["render",y],["__file","SpringBoot1.html.vue"]]),b=JSON.parse('{"path":"/Experience/Java/SpringBoot/SpringBoot1.html","title":"SpringBoot编程经验（一）","lang":"zh-CN","frontmatter":{"order":2,"category":["经验篇"],"tag":["SpringBoot经验"]},"headers":[{"level":2,"title":"一、获取Bean的几种方式","slug":"一、获取bean的几种方式","link":"#一、获取bean的几种方式","children":[{"level":3,"title":"1、实现 ApplicationContextAware 接口","slug":"_1、实现-applicationcontextaware-接口","link":"#_1、实现-applicationcontextaware-接口","children":[]},{"level":3,"title":"2、初始化时保存 ConfigurableApplicationContext","slug":"_2、初始化时保存-configurableapplicationcontext","link":"#_2、初始化时保存-configurableapplicationcontext","children":[]}]}],"git":{"createdTime":1709199910000,"updatedTime":1710676914000,"contributors":[{"name":"zhanglinwei","email":"3498729975@qq.com","commits":3}]},"readingTime":{"minutes":0.98,"words":294},"filePathRelative":"Experience/Java/SpringBoot/SpringBoot1.md","localizedDate":"2024年2月29日"}');export{A as comp,b as data};
