import{_ as c,r,o as p,c as k,e as s,f as a,g as n,w as e,a as t}from"./app-Vg0IViah.js";const D={},h=s("h1",{id:"透传-attributes",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#透传-attributes"},[s("span",null,"透传 Attributes")])],-1),u={href:"https://cn.vuejs.org/guide/components/attrs.html",target:"_blank",rel:"noopener noreferrer"},y=t('<p>“透传 <code>attribute</code>”指的是传递给一个组件，却没有被该组件声明为 <code>props</code> 或 <code>emits</code> 的 <code>attribute</code> 或者 <code>v-on</code> 事件监听器。最常见的例子就是 <code>class</code>、<code>style</code> 和 <code>id</code>。</p><h2 id="一、调试器" tabindex="-1"><a class="header-anchor" href="#一、调试器"><span>一、调试器</span></a></h2>',2),C={href:"https://play.vuejs.org/#eNp9kUFLwzAUx7/KM5cqzBXR0+gGKgP1oKKCl1xG99ZlpklIXuag9Lv7krK5w9it7//7v/SXthP3zo23EcVEVKH2yhEEpOhm0qjWWU/QgccV9LDytoWCq4U00tTWBII2NDBN/LJ4Qq0tfFuvlxfFlTRVORzHB/FA2Dq9IOQJoFrfzLouL/d9VfKUU2VcJNhet3aJeioFcymgZFiVR/tiJCjw61eqGW+CNWzepX0pats6pdG/OVKsJ8UEMklswXa/LzkjH3G0z+s11j8n8k3YpUyKd48B/RalODBa+AZpwPPPV9zx8wGyfdTcPgM/MFgdk+NQe4hmydpHvWz7nL+/Ms1XmO8ITdhfKommZp/7UvA/eTxz9X/d2/Fd3pOmF/0fEx+nNQ==",target:"_blank",rel:"noopener noreferrer"},v=t(`<h2 id="二、单根节点的attributes-继承" tabindex="-1"><a class="header-anchor" href="#二、单根节点的attributes-继承"><span>二、单根节点的Attributes 继承</span></a></h2><div class="hint-container warning"><p class="hint-container-title">请注意：</p><ol><li>透传的 <code>attribute</code> 不会包含 <code>&lt;MyButton&gt;</code> 上声明过的 <code>props</code> 或是针对 <code>emits</code> 声明事件的 <code>v-on</code> 侦听函数，换句话说，声明过的 <code>props</code> 和侦听函数被 <code>&lt;MyButton&gt;</code>“消费”了。</li><li>透传的 <code>attribute</code> 若符合声明，也可以作为 <code>props</code> 传入 <code>&lt;BaseButton&gt;</code>。</li></ol></div><h3 id="_1、普通继承" tabindex="-1"><a class="header-anchor" href="#_1、普通继承"><span>1、普通继承</span></a></h3><p>当一个组件以单个元素为根作渲染时，透传的 <code>attribute</code> 会自动被添加到根元素上</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">&lt;!-- &lt;MyButton&gt; 的模板 --&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">button</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">click me</span><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">button</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>一个父组件使用了这个组件，并且传入了 <code>class</code>：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">MyButton</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> class</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;large&quot;</span><span style="color:#808080;--shiki-dark:#808080;"> /&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>最后渲染出的 DOM 结果是：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">button</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> class</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;large&quot;</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">click me</span><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">button</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">说明</p><p>这里，<code>&lt;MyButton&gt;</code> 并没有将 <code>class</code> 声明为一个它所接受的 prop，所以 <code>class</code> 被视作透传 attribute，自动透传到了 <code>&lt;MyButton&gt;</code> 的根元素上</p></div><h3 id="_2、对-class-和-style-的合并" tabindex="-1"><a class="header-anchor" href="#_2、对-class-和-style-的合并"><span>2、对 class 和 style 的合并</span></a></h3><p>如果一个子组件的根元素已经有了 <code>class</code> 或 <code>style</code> <code>attribute</code>，它会和从父组件上继承的值合并。</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">&lt;!-- &lt;MyButton&gt; 的模板 --&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">button</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> class</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;btn&quot;</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">click me</span><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">button</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>一个父组件使用了这个组件，并且传入了 <code>class</code>：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">MyButton</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> class</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;large&quot;</span><span style="color:#808080;--shiki-dark:#808080;"> /&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>最后渲染出的 DOM 结果是：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">button</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> class</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;btn large&quot;</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">click me</span><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">button</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3、v-on-监听器继承" tabindex="-1"><a class="header-anchor" href="#_3、v-on-监听器继承"><span>3、v-on 监听器继承</span></a></h3><p>同样的规则也适用于 <code>v-on</code> 事件监听器</p>`,19),b=s("div",{class:"language-vue line-numbers-mode","data-ext":"vue","data-title":"vue"},[s("pre",{class:"shiki shiki-themes dark-plus dark-plus",style:{"background-color":"#1E1E1E","--shiki-dark-bg":"#1E1E1E",color:"#D4D4D4","--shiki-dark":"#D4D4D4"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#808080","--shiki-dark":"#808080"}},"<"),s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"script"),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}}," setup"),s("span",{style:{color:"#808080","--shiki-dark":"#808080"}},">")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0","--shiki-dark":"#C586C0"}},"import"),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}}," Comp"),s("span",{style:{color:"#C586C0","--shiki-dark":"#C586C0"}}," from"),s("span",{style:{color:"#CE9178","--shiki-dark":"#CE9178"}}," './Comp.vue'")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#808080","--shiki-dark":"#808080"}},"</"),s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"script"),s("span",{style:{color:"#808080","--shiki-dark":"#808080"}},">")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#808080","--shiki-dark":"#808080"}},"<"),s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"template"),s("span",{style:{color:"#808080","--shiki-dark":"#808080"}},">")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#808080","--shiki-dark":"#808080"}},"<"),s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"Comp"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}}," @"),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}},"click"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"="),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},'"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"() "),s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"=>"),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}}," console"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"."),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}},"log"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"("),s("span",{style:{color:"#B5CEA8","--shiki-dark":"#B5CEA8"}},"1"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},")"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},'"'),s("span",{style:{color:"#808080","--shiki-dark":"#808080"}},"/>")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#808080","--shiki-dark":"#808080"}},"</"),s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"template"),s("span",{style:{color:"#808080","--shiki-dark":"#808080"}},">")]),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),m=s("div",{class:"language-vue line-numbers-mode","data-ext":"vue","data-title":"vue"},[s("pre",{class:"shiki shiki-themes dark-plus dark-plus",style:{"background-color":"#1E1E1E","--shiki-dark-bg":"#1E1E1E",color:"#D4D4D4","--shiki-dark":"#D4D4D4"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#808080","--shiki-dark":"#808080"}},"<"),s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"script"),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}}," setup"),s("span",{style:{color:"#808080","--shiki-dark":"#808080"}},"></"),s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"script"),s("span",{style:{color:"#808080","--shiki-dark":"#808080"}},">")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#808080","--shiki-dark":"#808080"}},"<"),s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"template"),s("span",{style:{color:"#808080","--shiki-dark":"#808080"}},">")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#808080","--shiki-dark":"#808080"}},"  <"),s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"button"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}}," @"),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}},"click"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"="),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},'"'),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"() "),s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"=>"),s("span",{style:{color:"#9CDCFE","--shiki-dark":"#9CDCFE"}}," console"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"."),s("span",{style:{color:"#DCDCAA","--shiki-dark":"#DCDCAA"}},"log"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"("),s("span",{style:{color:"#B5CEA8","--shiki-dark":"#B5CEA8"}},"2"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},")"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},'"'),s("span",{style:{color:"#808080","--shiki-dark":"#808080"}},">"),s("span",{style:{color:"#D4D4D4","--shiki-dark":"#D4D4D4"}},"click me"),s("span",{style:{color:"#808080","--shiki-dark":"#808080"}},"</"),s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"button"),s("span",{style:{color:"#808080","--shiki-dark":"#808080"}},">")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#808080","--shiki-dark":"#808080"}},"</"),s("span",{style:{color:"#569CD6","--shiki-dark":"#569CD6"}},"template"),s("span",{style:{color:"#808080","--shiki-dark":"#808080"}},">")]),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),E=t(`<ul><li><code>click</code> 监听器会被添加到 <code>&lt;Comp&gt;</code> 的根元素，即那个原生的 <code>&lt;button&gt;</code> 元素之上。当原生的 <code>&lt;button&gt;</code> 被点击，会触发父组件的 <code>onClick</code> 方法。</li><li>同样的，如果原生 <code>button</code> 元素自身也通过 <code>v-on</code> 绑定了一个事件监听器，则 <mark>这个监听器和从父组件继承的监听器都会被触发</mark> 。</li></ul><blockquote><p>先触发子，再触发父</p></blockquote><h3 id="_4、深层组件继承" tabindex="-1"><a class="header-anchor" href="#_4、深层组件继承"><span>4、深层组件继承</span></a></h3><p>有些情况下一个组件会在根节点上渲染另一个组件</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">&lt;!-- &lt;MyButton/&gt; 的模板，只是渲染另一个组件 --&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">BaseButton</span><span style="color:#808080;--shiki-dark:#808080;"> /&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>此时 <code>&lt;MyButton&gt;</code> 接收的透传 <code>attribute</code> 会直接继续传给 <code>&lt;BaseButton&gt;</code></p><h2 id="三、多根节点的-attributes-继承" tabindex="-1"><a class="header-anchor" href="#三、多根节点的-attributes-继承"><span>三、多根节点的 Attributes 继承</span></a></h2><p>和单根节点组件有所不同，有着多个根节点的组件没有自动 <code>attribute</code> 透传行为。如果 <code>$attrs</code> 没有被显式绑定，将会抛出一个运行时警告。</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">CustomLayout</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> id</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;custom-layout&quot;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> @</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">click</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">changeValue</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#808080;--shiki-dark:#808080;"> /&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果 <code>&lt;CustomLayout&gt;</code> 有下面这样的多根节点模板，由于 <code>Vue</code> 不知道要将 <code>attribute</code> 透传到哪里，所以会抛出一个警告</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">&lt;!-- &lt;CustomLayout&gt; 的模板 --&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">header</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">...</span><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">header</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">main</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">...</span><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">main</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">footer</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">...</span><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">footer</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果 <code>$attrs</code> 被显式绑定，则不会有警告：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">header</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">...</span><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">header</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">main</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> v-bind</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">$attrs</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">&quot;</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">...</span><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">main</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">footer</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">...</span><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">footer</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、javascript-中访问透传-attributes" tabindex="-1"><a class="header-anchor" href="#四、javascript-中访问透传-attributes"><span>四、JavaScript 中访问透传 Attributes</span></a></h2><p>可以在 <code>&lt;script setup&gt;</code> 中使用 <code>useAttrs()</code> API 来访问一个组件的所有透传 attribute：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> setup</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#C586C0;--shiki-dark:#C586C0;">import</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> { </span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">useAttrs</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> } </span><span style="color:#C586C0;--shiki-dark:#C586C0;">from</span><span style="color:#CE9178;--shiki-dark:#CE9178;"> &#39;vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;--shiki-dark:#569CD6;">const</span><span style="color:#4FC1FF;--shiki-dark:#4FC1FF;"> attrs</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;"> = </span><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">useAttrs</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>它并不是响应式的</p></div><h2 id="五、禁用attributes-继承" tabindex="-1"><a class="header-anchor" href="#五、禁用attributes-继承"><span>五、禁用Attributes 继承</span></a></h2><p>如果不想要一个组件自动地继承 <code>attribute</code>，可以在组件选项中设置 <code>inheritAttrs: false</code>。</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> setup</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#DCDCAA;--shiki-dark:#DCDCAA;">defineOptions</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;">  inheritAttrs:</span><span style="color:#569CD6;--shiki-dark:#569CD6;"> false</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">// ...setup 逻辑</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">script</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>从 3.3 开始可以直接在 <code>&lt;script setup&gt;</code> 中使用 <code>defineOptions</code></p></blockquote><h3 id="_1、需要禁用的场景" tabindex="-1"><a class="header-anchor" href="#_1、需要禁用的场景"><span>1、需要禁用的场景</span></a></h3><p>最常见的需要禁用 <code>attribute</code> 继承的场景就是 <code>attribute</code> 需要应用在根节点以外的其他元素上。通过设置 <code>inheritAttrs</code> 选项为 <code>false</code>，可以完全控制透传进来的 <code>attribute</code> 被如何使用。</p><p>这些透传进来的 <code>attribute</code> 可以在模板的表达式中直接用 <code>$attrs</code> 访问到。</p><ul><li>这个 <code>$attrs</code> 对象包含了除组件所声明的 <code>props</code> 和 <code>emits</code> 之外的所有其他 <code>attribute</code>，例如 <code>class</code>，<code>style</code>，<code>v-on</code> 监听器等等</li></ul><div class="hint-container warning"><p class="hint-container-title">注意</p><ul><li>和 <code>props</code> 有所不同，透传 <code>attributes</code> 在 <code>JavaScript</code> 中保留了它们原始的大小写，所以像 <code>foo-bar</code> 这样的一个 <code>attribute</code> 需要通过 <code>$attrs[&#39;foo-bar&#39;]</code> 来访问。</li><li>像 <code>@click</code> 这样的一个 <code>v-on</code> 事件监听器将在此对象下被暴露为一个函数 <code>$attrs.onClick</code>。</li></ul></div><p>例：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="shiki shiki-themes dark-plus dark-plus" style="background-color:#1E1E1E;--shiki-dark-bg:#1E1E1E;color:#D4D4D4;--shiki-dark:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;--shiki-dark:#6A9955;">&lt;!-- &lt;MyButton&gt; 的模板 --&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;</span><span style="color:#569CD6;--shiki-dark:#569CD6;">div</span><span style="color:#9CDCFE;--shiki-dark:#9CDCFE;"> class</span><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">=</span><span style="color:#CE9178;--shiki-dark:#CE9178;">&quot;btn-wrapper&quot;</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;--shiki-dark:#D4D4D4;">  &lt;button class=&quot;btn&quot; v-bind=&quot;$attrs&quot;&gt;click me&lt;/button&gt;</span></span>
<span class="line"><span style="color:#808080;--shiki-dark:#808080;">&lt;/</span><span style="color:#569CD6;--shiki-dark:#569CD6;">div</span><span style="color:#808080;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>没有参数的 <code>v-bind</code> 会将一个对象的所有属性都作为 <code>attribute</code> 应用到目标元素上</p></div>`,29);function g(A,F){const o=r("ExternalLinkIcon"),d=r("CodeTabs");return p(),k("div",null,[h,s("p",null,[s("a",u,[a("官方文档"),n(o)])]),y,s("p",null,[s("a",C,[a("传送门"),n(o)])]),v,n(d,{id:"73",data:[{id:"App.vue"},{id:"Comp.vue"}]},{title0:e(({value:i,isActive:l})=>[a("App.vue")]),title1:e(({value:i,isActive:l})=>[a("Comp.vue")]),tab0:e(({value:i,isActive:l})=>[b]),tab1:e(({value:i,isActive:l})=>[m]),_:1},8,["data"]),E])}const x=c(D,[["render",g],["__file","Attributes.html.vue"]]),f=JSON.parse('{"path":"/Use/Font/Vue3/Attributes.html","title":"透传 Attributes","lang":"zh-CN","frontmatter":{"category":["使用篇"],"tag":["Vue3使用","透传 Attributes"]},"headers":[{"level":2,"title":"一、调试器","slug":"一、调试器","link":"#一、调试器","children":[]},{"level":2,"title":"二、单根节点的Attributes 继承","slug":"二、单根节点的attributes-继承","link":"#二、单根节点的attributes-继承","children":[{"level":3,"title":"1、普通继承","slug":"_1、普通继承","link":"#_1、普通继承","children":[]},{"level":3,"title":"2、对 class 和 style 的合并","slug":"_2、对-class-和-style-的合并","link":"#_2、对-class-和-style-的合并","children":[]},{"level":3,"title":"3、v-on 监听器继承","slug":"_3、v-on-监听器继承","link":"#_3、v-on-监听器继承","children":[]},{"level":3,"title":"4、深层组件继承","slug":"_4、深层组件继承","link":"#_4、深层组件继承","children":[]}]},{"level":2,"title":"三、多根节点的 Attributes 继承","slug":"三、多根节点的-attributes-继承","link":"#三、多根节点的-attributes-继承","children":[]},{"level":2,"title":"四、JavaScript 中访问透传 Attributes","slug":"四、javascript-中访问透传-attributes","link":"#四、javascript-中访问透传-attributes","children":[]},{"level":2,"title":"五、禁用Attributes 继承","slug":"五、禁用attributes-继承","link":"#五、禁用attributes-继承","children":[{"level":3,"title":"1、需要禁用的场景","slug":"_1、需要禁用的场景","link":"#_1、需要禁用的场景","children":[]}]}],"git":{"createdTime":1709373238000,"updatedTime":1709384965000,"contributors":[{"name":"zhanglinwei","email":"3498729975@qq.com","commits":2}]},"readingTime":{"minutes":3.74,"words":1122},"filePathRelative":"Use/Font/Vue3/Attributes.md","localizedDate":"2024年3月2日"}');export{x as comp,f as data};
